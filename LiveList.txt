77u/R0VOUkUsIFtDT0xPUiB5ZWxsb3ddKioqKioqKioqIFRISVMgTElTVCBJUyBTVE9MRU4gRlJPTSBWRFVCVDI1ICoqKioqKioqWy9DT0xPUl0KQEBAQEAKR0VOUkUsIFtDT0xPUiBncmVlbl0tLSBMaXZlIFNwb3J0cyAtLVsvQ09MT1JdCgpAQEBAQApHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIElyZWxhbmQgTGl2ZSBUdiAtLVsvQ09MT1JdCgoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dUlRFIEpyIEhEWy9DT0xPUl0gKFdPUkxEV0lERSkKaHR0cDovL3d3dy5ydGUuaWUvbWFuaWZlc3RzL3JzdzUuZjRtfFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dUlRFIE5FV1MgSERbL0NPTE9SXShXT1JMRFdJREUpCmh0dHA6Ly93d3cucnRlLmllL21hbmlmZXN0cy9uZXdzbm93LmY0bXxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsUlRFIDEKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9cnRlMTExJnZ3PTcyMCZ2aD00NTAKI0VYVElORjotMSxSVEUgMgpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1ydGUyMjImdnc9NzIwJnZoPTQ1MAojRVhUSU5GOi0xLFRWMwpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT10djM3JnZ3PTcyMCZ2aD00NTAKI0VYVElORjotMSxURzQgSXJlbGFuZApodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT10ZzQ3JnZ3PTcyMCZ2aD00NTAKI0VYVElORjotMSxUVjMgKFdPUkxEV0lERSkKcnRtcGU6Ly9mbWwuNTAxMS5lZGdlY2FzdGNkbi5uZXQvMjA1MDExL2xpdmUgcGxheXBhdGg9bXA0OnR2My5tcDQgYXBwPTIwNTAxMS9saXZlIHBhZ2VVUkw9aHR0cDovL3d3dy50djMuaWUvM3BsYXllci9saXZlLyBzd2ZVcmw9aHR0cDovL3d3dy50djMuaWUvcGxheWVyL2Fzc2V0cy9mbG93cGxheWVyL2ZsYXNoL2Zsb3dwbGF5ZXIuY29tbWVyY2lhbC0zLjIuNy5zd2Ygc3dmVmZ5PXRydWUgbGl2ZT10cnVlIHRpbWVvdXQ9MTAKI0VYVElORjotMSxURzQKaHR0cDovL2NzbS1lLmNkczEueW9zcGFjZS5jb20vY3NtL2xpdmUvNzQyNDY1NDAubTN1OAojRVhUSU5GOi0xLFRHNApodHRwOi8vdGc0LWxoLmFrYW1haWhkLm5ldC9JZGlCZW8xXzEyMDBfdGc0QDExODY5Mz92aWRlb0lkPTI1MzkwOTg0OTYwMDEmbGluZVVwSWQ9JnB1YklkPTEyOTA4NjI1NjcwMDEmcGxheWVySWQ9MTM2NDEzODA1MDAwMSZhZmZpbGlhdGVJZD0mdj0zLjQuMCZmcD1XSU4lMjAxNywwLDAsMTg4JnI9TlRQRVcmZz1HTVhXRUVZWk9UUUsKCiNFWFRJTkY6LTEsUlRFIE9uZQpodHRwOi8vMjEyLjI1MC40Ni4zNTo0MjUyL2J5c2lkLzk2MDEgCgojRVhUSU5GOi0xLFJURSBUd28KaHR0cDovLzIxMi4yNTAuNDYuMzU6NDI1Mi9ieXNpZC85NjAyIAoKI0VYVElORjotMSxUVjMKaHR0cDovLzIxMi4yNTAuNDYuMzU6NDI1Mi9ieXNpZC85NjA1IAoKI0VYVElORjotMSxURzQKaHR0cDovLzIxMi4yNTAuNDYuMzU6NDI1Mi9ieXNpZC85NjAzIAoKI0VYVElORjotMSxSVEUgSnIuCmh0dHA6Ly8yMTIuMjUwLjQ2LjM1OjQyNTIvYnlzaWQvOTYwNiAKCkBAQEBACkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gVUsgTGl2ZSBUdiAtLVsvQ09MT1JdCgojRVhUSU5GOi0xLEFsaWJpCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWFsaWJpJnZ3PTY0MCZ2aD00NTAKI0VYVElORjotMSxCQkMgTmV3cwpodHRwOi8vbGl2ZTMwNC5lZGdlLmZpbG1vbi5jb20vbGl2ZS8yNy5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmVmMzAzOGM3ODE3NDQ5MzZmYWE1NjhmYjIzZjg3ZGNiNjU5NmE5ZjUyZTc1ZjE1MTRmOGUwN2E1NTBkZWQwYmNlMmQxYWRhMTdmNDJmNWYxODczNWQ1MTE3Y2Q0MWQ3OWUxOWNlNmQ2ODRkNmViYTc5MWQ3M2M4NDVhOWE1OGQ2NmE1ZjEyZDBkNmRiNmIwOWY1MmM4Y2NkODIwMTYwN2FiNmYwYWM2YWNlZDUxMGZmYTJiM2FhM2M5YWNjZjM2MDFjYmNlOGMzODRmMDlkMzdlZjQ4MDU1NTY0NjNhZjg3NThiYmEwY2UwNmVlZmE2NzZmZGJjOTA3OTBlNTY3M2Q5NjIwNGUwZTRjMGRiZGJkYjU0YmRmMWY3NTQwYzBlNTAKI0VYVElORjotMSxCQkMgMSBOb3J0aCBJcmVsYW5kCmh0dHA6Ly9saXZlMzA0LmVkZ2UuZmlsbW9uLmNvbS9saXZlLzM2MS5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmUzOGFlYTEzYjEwNTJhOTczNjNmOTEwYmRjZTI1N2NmN2UxNTVkNTNhZjhiZDc3YjA4ZWY4M2Q3M2M2MzNjZjNhMjYxODg4MzY0NWM3ZDc5ZjAzYTEwNDE3YTMzZTEyYmY3OWUwMjczZjNmOWEzNDU5MzUwMTg3MGI5MGMwNDgxMTRjNGIyNDVlMzNmOTIwZmFmNGUwZjUwMWQ0MzNhNDIzZjYzOTQ5ZWNhZjI0YmZiMTA3OWViNmJiNDU1ZjU3YjQxZDhkZmIwZGY5NDhiOTVkNTUyOTYwYTE0ZjM2MzcyMzBkZWI0ZjczZGYxNjA5NzE2NjIzYmRkZTRlNzUzNjdmNjlhMmY0NGI5MTFkNmQ0ZWJjZWViNDk1OTk0YTAxY2YKI0VYVElORjotMSxCQkMgT25lIFNjb3RsYW5kCmh0dHA6Ly8yMDQuMTA3LjI3LjIzMy9saXZlLzMxNjYuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlNzdjOWZhNDdiODZhYjA0Y2Q2MGY2M2Y1MjdkMWY0YzNiNjdjY2NhODlmMmU0ZmE2MjUzMGRhYTQzN2I2Y2M5ZWRlZmYzNDBiM2EzYjg0NWJhYTExNWMzYjVlMDJkYmMyMmNhOGVhOTYxYmQ1YWEzM2QzYzk1Y2YxMmNkNzE3YTk5Mzg3ZmJiMDg2ZDk5ZjBlMzg1Mzg3OGEwNTQzNzRjMmVhZTQyM2Y0MDcxOTQ2NDMwMGMyOWE0NWJhODJiZDIyMjg5YjQxMTZlMWRhOTY5YmRhYjQwZmM2M2M1YTkyNjQzNGZkZjBjZTM0MzE0NTZjMWJmYWQzYjcyYmQ5YTQ1YTY2Mjg4OGYzMjJhMGYzZmY5ZDY1YzBjYWI1OTdlOTc5CiNFWFRJTkY6LTEsQkJDIE9uZQpodHRwOi8vMTk4LjE3OS4zMC4xMDkvbGl2ZS8xNC5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmVmOTJhYThjMzJjNWI3ZGUxMTZjOTk0MGI0N2MyZGQzM2E4MDcxMmUxYjhmMTgyMTQ1MDM0NDg3ZmE2NzE1N2M4ZGMzZTA2NjQ2YjViYzRkOWIzMGJlNmQwMGM4MjlmNTEzNDViNGExNjkzYjJiYzc5ZGE3OGExMmViOTkyNDlkMDhjZjQzZDU2MjExNDgxMGVlMzFlZjI3NGRjMjNhNTg3ZGQ3ZjZiNWU3YmM2OTFjZDk0MTk0Mjg4ZTk4ZTI2Y2Q3ODZmNTM4NDIyOGZjZjczYjBiYjkyNDEwN2RjOTllMTAxNGMwNjFjODM4MTExMGM1YWJhYzY1NjZjYjFkOWYyMGRjMTIzZDNhZGMzMTZhYWNlMjY0MzA2MTcyNTFlM2QKI0VYVElORjotMSxCQkMgVHdvCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWJiYzI0NDgmdnc9NjQwJnZoPTQ1MAojRVhUSU5GOi0xLEJCQyBUd28KaHR0cDovLzE5OC4xNzkuMzAuMTA5L2xpdmUvMjUuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlYmM0ZTEzZTAzZmY5ZTdkNmM5YTY2NmE1OWFkODUwNGZhNWUzYTA5MzkwZTQ5OTBmZTcyM2JmZjFhNDcxMDAxMDc2M2YzYmE1NzA1MGVmMDIyYzFmN2YwM2ZkYmU4MjIzNzgwOWE1YjY5YTljYzkyZWJmMjRiNzdhOWNhOTEzMTY2NmNhMjY4MjUxY2EyNGJmZTRiZTMzYmIyNjVlMzRmMTc3NGUzMjk4ZTU4NDZkZTE2NDdjMmExZjE4OGI2NTA1ZWI2N2Q5Y2QxM2MwMjcxMzM5NWNlNDExZDlmY2M5ZWViMWUwYzNhZDFiY2Y2ZmM4ZDlhYWM4NDIzNGE1YjVjNjY0NzQ3NzBiNTJhYzA4MDU5MTIxZmMwOGFhZWU4YjJlCiNFWFRJTkY6LTEsSVRWMQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1pdHYxMzU1MiZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsSVRWMQpodHRwOi8vMTk4LjE3OS4zMC4xMDgvbGl2ZS8xMS5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmU4NTZjMTRmOTg4YmE5OGM5MmQzNzhiNmM2MTA3OWQ3MmVmMWFkMjcyYzczZDQxYTAxZWVmOGYyMjY0YmMzNzMyMWE4ODVjNGJmYTVlYzMwZWM2MzM2ODdjODdhODcxNWVlZjM2YmRmNTcxMzMwMDRhZTYxZmZmYWExYWY0NWFjMTk3M2MzNDg4NWIwYmIxNWRlMjllNjQwOTUxNjRjMWY1NmM4MGFlZTRlMTRkZTc3OGY2NTNhNDczYjllODllYmEwZjYyYmFiYjgyMGRkNjRhNzQwYzA3MjM1ZDljYzVmODlkMGI4ZmNiMzI3N2NhNjc0YWY2NzgxZTQwODg3ZmI4Nzg1MTg0ZWM1YTMyMDEwNDBmNzU3Y2NlOTViM2QxYzgKI0VYVElORjotMSxDaGFubmVsNApodHRwOi8vMTk4LjE3OS4zMC4xMDgvbGl2ZS8yLmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZTAzMTI3NzdkZmFmYzZkNjQ1ZDI1ZmI4MjRiNmI5MmE2N2Y4Njc3Njk4ZDg4ZWI3MTFkYzExZDYzZTU2OTgxY2ZkZGI2MmJiNDIwNjdjMDcyNjBkMjc4YjBkZWZhNGM3YjhhOWY1ODAyMTFjOGRlNzFhMjU1OWY3MGI4MTdiMGJlNDhmNWRmOWZhZGExZDU3MzUxNTBmODkzODQ4Y2ZjMDQ2NzNhY2M2ZWY3OTRkZGVhMTJmYjc3NjQ3OGZkY2JlNWFmZmZhYTk5OTg0ZWEwMjBhNjcyZjMwNGFhM2EzNjExZjgxNGQ2ODZiMzU5YmIyYWFkYTgyNGViN2ZkYTU1Mzg0NjhkZGRlZDZlNWRiNmVlY2MwMzhkNjJhNmNhYWU5ZAojRVhUSU5GOi0xLENoYW5uZWw1Cmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWZpdmU0JnZ3PTY0MCZ2aD00NTAKI0VYVElORjotMSxDaGFubmVsNQpodHRwOi8vMTk4LjE3OS4zMC4xMDgvbGl2ZS8yMi5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmUwMzEyNzc3ZGZhZmM2ZDY0ZGE0ZTRlOTIwNTk4NTFiZTYzOTIzMjU4NjA1OTEwODgxNDM2YTk5ZTg1YWRmYzZjNjI1NDdiNWFiZWU2YmM4ZmExMDZmZDdkYTM3YWYwYzhkZWIxYTVkM2Y4Y2Q3ZTZjMWYwNjc4NDNhZmQyMTk2MzVhZDMzOTY5NTM1MTNkNGUyOWYzYmUyZGMyZjY5ZGQ3MjFkN2Y5Zjc0YmFlN2E0M2NlODcyMjhiMDcwZTg4YjI5MGI5ZDI1OWFlMjM5NGE2ZTliYmI2ZTE1ZmQzODE2MDQ1MzhhMTIxNzc2YjQ5ODE4OGRiODUxYzg2NmUwZmExMzE2ZmE4OTI4YThmNTkwNjczNjJkY2EyNzE1MDIyMjIKI0VYVElORjotMSxEYXZlCmh0dHA6Ly9saXZlMzA4LmVkZ2UuZmlsbW9uLmNvbS9saXZlLzM3MC5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmVkNjlhNDc1MGU1NzUyNjY3ODAzZjllYTk3ZTc2ZTM1ZjgyMGNkN2VkNmI1NmQzYTQ5YmQzY2M3ZjZlYzdmYzZjNDJiZGJkYzY1YzA1ODk0YmNiZjIzNjEyMGI1NWRjZWZjMDk5N2JkZDJiYmNlNDRiMmM3NGEzODM0YjgxMWE2MGFjMGI3NDU4YzM5Mzg5YjU0YTQ2MzlhNWZmZTBkN2ExNzVjNmVlYTQwYWE5YmY5Zjc4NDcyYjc0YmMyYTAwYWUwZDEyYmMwOGVmNWVkMzAyZmFhYTc3NDM1MTMxMDZiZWVkYjcyOTdmZTU5YWRiN2I5MDA2YTZiNDlmMmMzYmE3YjNlNzliZWUyNmE3MzJlY2Y2NjJkMzgwMDM5NGQ4M2QKI0VYVElORjotMSxTIE9uZQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1za3kxdWsmdnc9NjQwJnZoPTQ1MAojRVhUSU5GOi0xLFMgVHdvCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXNreTJ1ayZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsUyBBcnRzIDEKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9c2t5YXJ0czEmdnc9NjQwJnZoPTQ1MAojRVhUSU5GOi0xLFMgQXRsYW50aWMKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9c2t5YXRsYW50aWMmdnc9NjQwJnZoPTQ1MAojRVhUSU5GOi0xLFMgTGl2aW5nCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXNreWxpdmluZyZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsQ29tZWR5IENlbnRyYWwKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9Y2M2OTgmdnc9NjQwJnZoPTQ1MAojRVhUSU5GOi0xLFBpY2tUVgpodHRwOi8vbGl2ZTMwOC5lZGdlLmZpbG1vbi5jb20vbGl2ZS8zNzEuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlNTkyZGQ0ZmM1NWUwY2ZlZDJjMTdmZjNkOWMzYzllNjBkNDdiM2Y4MWI1ZjRkOTI5ZjUxZmQyYTFlNWE5Y2FlM2JjOGVjMWI0Y2Y2NTJmYmEzYmVlNGNlYzZmMzg5ZDE3YzFhYTcwMjZmNjZlNmY5YTI5NWYzYTE3MDc5YTA3ODQyNGY1ZmEwYThkMzRhZjJmYTVhZTIxNzBlMzllMzU4OTkyMmQ1ODc3MDU1MDgxNjYwODQ4MTYxOGZjMmY3NDZjNWYzZDBmY2IxOTNjMDBhY2JjZWNmZTg3YWQyMTk5ZDk5YWYwOGJhOTY0YTBhNjExZTc2Zjk2MmMzM2RjNWEwMmNmYmQ2MmNkNGViNjRkYjVmNTMzNWFkNDdiY2MxMjdmCiNFWFRJTkY6LTEsUmVhbGx5Cmh0dHA6Ly9saXZlMzA4LmVkZ2UuZmlsbW9uLmNvbS9saXZlLzM3Mi5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmVkNmY5ZmVmNGYwNzE1MDAyZmQwZjdjNThhNjcwOWFmOWQ4NWZhNjUwYmYwYTBkOTAyMjExMjlmMjViM2JmYTkxNjVmYjNiYWI4MmU1NTNiYWEyYTJmYTUxZmZhOWMyMTIwZDUzY2NjMTYyNmUyYmMyNWMwMzMzOWIyOTUzNmYwN2JjNTIzNjE0ZDUzNzFiODM2MWEyZmU2OWRlNGQwNDBmYzVmNDZjYTg2MWZlMDBkM2I3Y2Y0MDhlNzM3M2Q3YzY2NGYwOWE4Y2VmOTU3YmI5ZDI4OTkyZTFlN2QxOGQyODg1ZGRhMTJlMWZlNDFhNDhkMjU4YzMzMTI5ZWY4Y2Y5NjI2YWY5YTYwYWY4YmE5MjE4MTFkNDVmZmU5MTc2ZDYKI0VYVElORjotMSxFNApodHRwOi8vbGl2ZTMwNC5lZGdlLmZpbG1vbi5jb20vbGl2ZS82NS5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmUyZDc4ZmVjM2U2OWRkZDdiOTQwMzcwNTcyYjBmMzgyNzJlYTdiZDI3YzgyNjQ1YzYzZWU3NjUwZDRjNDQwMWRhYTZmNThkNGY1NmM2MDkxMWJkYjA2OGFiMjYzMjhiN2Y4ZTRlMGJjMzVlYzllYjJiNjEwZGYwYjdlZTY1N2IzYzVjMWJjMDY3MmZjNDgyMTZmZDQ4MTBkY2I3NzY4YWQxYWZmMWRlNGYzNTUzODlkNDJhOWQ2YmRjYTI4MjE2Y2Q2NDlkNTk5ODAwMmViMmU1ODBjNzliM2IxNWQ2MzA3NjQzNjJkNTQ0YzA1YTk3NDk2ZWIzMTEyOTlmMjlkNTNlNjMyZDc4Yjg0ZThlMDFlYWZiYzMxN2UzMzRjNjY3NTMKI0VYVElORjotMSxGaWxtNApodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1maWxtNCZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsRmlsbTQKaHR0cDovLzE5OC4xNzkuMzAuMTA4L2xpdmUvMTMuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlNjQyMWJmNjNhZGU0ZDBjOWQ0YTIyZDRhNzEyMDMwNGM0MjE1MWZiMTY1ZmU5ZmUyMzA1NmM0ZTk4ZDY3YmVhYmZmNjUxMDgzNTI2YjIyYzFiMDIxNjI5NDZmMGRkMGU0OTA2NjUwMTgzZjUzOWM0MTMzOTRhM2FmNDM2NzYzNzEzMTBkY2ZiYzJkMWY1ZTU3NjgyODUwZGE2ODJjZDVmNjg2MDE3MzNjNzI0YWE4YTYwMjYxOGQwMjFjMzZmNTJiZWViOTEyNzU5NDJlZTYzZGE2MTE3OGEwMDhjNDcxMjc1ZTMwZWE1ZjJjZDkyMGY2YmUwMWZhMTg3MTYxZTBhMDM5NWNlMGE3YzJjNmNlMjJhM2M4YzlkYjIxZWMwYTY3CiNFWFRJTkY6LTEsUyBBY3Rpb24KaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9c2t5bWEmdnc9NjQwJnZoPTQ1MAojRVhUSU5GOi0xLFMgQWN0aW9uIChBTFQpCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MTY2NSZhdXRvcGxheT10cnVlCiNFWFRJTkY6LTEsUyBDb21lZHkKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9c2t5bWNjJnZ3PTY0MCZ2aD00NTAKI0VYVElORjotMSxTIENvbWVkeSAoQUxUKQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzE2NjQmYXV0b3BsYXk9dHJ1ZQojRVhUSU5GOi0xLFMgQ3JpbWUKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9c2t5bWNjJnZ3PTY0MCZ2aD00NTAKI0VYVElORjotMSxTIERyYW1hCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXNreW1kJnZ3PTY0MCZ2aD00NTAKI0VYVElORjotMSxTIERyYW1hIChBTFQpCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MTY2NyZhdXRvcGxheT10cnVlCiNFWFRJTkY6LTEsUyBGYW1pbHkKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9c2t5bWYmdnc9NjQwJnZoPTQ1MAojRVhUSU5GOi0xLFMgUHJlbWllcmUKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9c2t5cG0mdnc9NjQwJnZoPTQ1MAojRVhUSU5GOi0xLFMgU2hvd2Nhc2UKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcxODgxJmF1dG9wbGF5PXRydWUKI0VYVElORjotMSxTIFNjaS1GaQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1za3ltaCZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsUyBTY2ktRmkgKEFMVCkKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcxNzMxJmF1dG9wbGF5PXRydWUKI0VYVElORjotMSxGb29kIE5ldHdvcmsKaHR0cDovLzE5OC4xNzkuMzAuMTEwL2xpdmUvMjAuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlZTIyNWNmM2E3MmRmZTY0NmE5NjFjMzE0OTBlNTg3OTYwN2ZjNjVhOGU3OWY3OGE3NTk5NDM5MTRiYjU0NDAwOGRiODJkZWU4MzQzYzFjOTU2NzkzZGEzODVkMTdhMTc1MzMzMmZhZDY5M2MxNWY0YTA4YjUxNDQ3N2JlNDcyNzU3YjJkNWQyM2M1YmE3YzJkN2UwMmYzZGQ1OGI3MDZhYzM2MjYyMjczMmJmY2RmMzYzM2NlMzY0YjIxMDRhYmJkOWY3NmE2YTNhYjM0Njk4ODE4ODI2OWNkMmMxZGM1ZDc5MGY1YzU3ZmQyZGU0ZjNkNDNmMmI1ZTcyNjA4NjA5NmU3ZDUyMDdmMDdjZGRkMjMzOGY1MzdhMzYyZWVjZGU2CiNFWFRJTkY6LTEsSVRWMgpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1pdHYybCZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsSVRWMgpodHRwOi8vMTk4LjE3OS4zMC4xMDgvbGl2ZS82Ny5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmViMzczMjQwYjQ5MGNmNzhkMmMyMGZiMGRkNjUxNDE5ZjBmNGIyZTZlZjI1ZTFlYTkwNTYzNDMyMDM3ZmNlZDc5NzY1ZWE5MWFiMGU5NzczMDc2ODM1ZmMwMTJiYjY0MTRlYmIxZjE4MjkwM2Q5YzA2MWZhZDE1M2Q3MWU4MTFmNmU3N2YwM2QxNjI0MzhiNjc1NmU3ZTdlNzY3NzQzNzIzZjg5OTYwZjQ1MmYwYTQyZTBkNmU1NWUxMjM0Y2UwMTIzNTE2M2NkNTY2MDVlNDZlNzM4NWRlNzBlOTQ1NGNkMmUwZGY3M2I3ZDQ2OGU1ODZiYmQzMzhkNzdiM2JiZWY0OTQ2NGE4Mjg3NzIzMWNhOWEzY2I2YjFkZmE5MTI1ZTkKI0VYVElORjotMSxJVFYzCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWl0djNsJnZ3PTY0MCZ2aD00NTAKI0VYVElORjotMSxJVFYzCmh0dHA6Ly8xOTguMTc5LjMwLjEwOC9saXZlLzI2LmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZWIzNzMyNDBiNDkwY2Y3OGQ1NjgwOGViZWE2ZTlmODAxYTIxYjc3NzUyZTg4YzcwZTg4MmFiZDFmZDE1ZWI1YzdkM2UyZjA0YTJhODcyY2E1Y2JiMjRlNzc5MDEwN2NmYWJjZWRiNDVjMWQwODA2Yzk1YzdlNjhjZGQwNzE2YmQ4MzVhZmFmNTQ2YWUzODQ5NTkwMmZmMmQ4ZDk4ZDYyYzliMDFhZDM2YjExNDEzOGZkNjAwYmRkNjMzMWE2ZDdlYmIyNTE4Njc3YjcwYzliMTc1YTI0NDY0MzIyMmI5MjBhNWU1NWFhZTRhZGUzNDg1NjI0NjY3NDk1MzVhZTc4ODllY2IwNjdmM2I5MDViNzZlOWY0NmY3MDgzNDI0NzUzYwojRVhUSU5GOi0xLElUVjQKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9aXR2NDQ4JnZ3PTY0MCZ2aD00NTAKI0VYVElORjotMSxJVFY0Cmh0dHA6Ly8xOTguMTc5LjMwLjEwOC9saXZlLzEwMS5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmVlYzg0ZjI5MDY1ZDJjNzAxNzhiZjY4ZDdkM2E3MjM2ZjE4YjJlMDExOGNiZDNhN2ZkZjFiZTFkOThkMTE0YWRjMmMzZTczMTY4ODgwOTgwOWVkYWE4YTU4YTUwNTQxODYyNDFlNjBhMDU3YTUyNmEzNTIxOWM3ZWM1MzUxMzEzNGRjZjIxNTIzMTliYzQ3ODczYjJiMjNkNGM2ODA1NWIzOWQzMGJkMDI1ZWYxNDIwNzVlYzUxZjQ5ODU2N2ZmZmNhMmI1OGQ1NmMyZjZiNmExNzVhNzY0N2RhZWFlY2M1OWRiMjA4YTQ1MjAzMDJiYTE5OGM1OTU2NjFiZjhlNGNmOTNiOWVjZDljNWQ5MmZlZThjNWMwZDczOWNlMGNjYjUKI0VYVElORjotMSw0IE11c2ljCmh0dHA6Ly9saXZlMzA4LmVkZ2UuZmlsbW9uLmNvbS9saXZlLzk1LmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZTBjMjYyYzA2MzcyOTAxZDJmYWM2YWM3Y2E2NDk3MDNhMmU0YzE2OTllYzM4MGQ3MmIwNTY5NGQ1YmZiMDQ0NWRkNmVmNGQzMzQwZGFiM2EwMzJhNjliNzA3NjIwZTUzMjE2MmE0YmE4MTBmZmMxMzQ5OWUwZWNkOTJmMTU3YmNkMTdiOGQ1MDY5OGIxNTk4MjNjZmM0ZjJiYmJkMjRjNWI5MTA2NWUwZGM4NTMyN2IwYTZjZmYxMTBiNjZlNWZlMTNhMzAxZTc1MmNjMzc5ZjcxNWEwMmUxY2Y2ZmQ1MzBjOTQ0ODAyZjRiZDliZmMyNjFhYzczNDYwM2FjNWUxOWI0Njc4ZTY4MWIxMjYwZDg2OTUzZWI0NjJhY2UwNWRiZAojRVhUSU5GOi0xLE1vcmU0Cmh0dHA6Ly9saXZlMzA0LmVkZ2UuZmlsbW9uLmNvbS9saXZlLzk3LmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZTA5YmY5MjJjNjIxNWU4ODE4ODBlYTgxY2M5YWU4ZTUzZTczMGFlNjNhNDA1ZmVhODNlZWJhODkxYTNlMDlhODAyZDlhMWRhZjI4ZDc0ODllMWQxMzVjMTg4MzBhMWYwZWJkYmY5ZDQ4MGZjN2FmMjkxYjJhMjA2OTcyYmVmZDliYzFmYWJhMzk0ZDYxOWM2ZTJlMWJmZjdmMmRkMjllYzAxMzFlNTYwZmFjZjZhYjM4NzJmNjZlODk4ZTZhMjM5NWE2ZmVmZDhlNjIwMmMwNjIwZWI5OTU2M2I4MWVlM2ZlNjJmZjM4YzQ3ZTA2NzEwZTVjYjQzODExY2RlMmI2OGYwMjUyNDExYmNkNDQ1NjRmNTQ2M2FhNGJmNjIyYWZkZQojRVhUSU5GOi0xLElUVisxCmh0dHA6Ly8xOTguMTc5LjMwLjExMC9saXZlLzE4MTcuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlYjJlMzc3NjYxYmVkODkxN2U0NDVmYmUwMDkwNGYxYzU5MjVlOTlmNjc4MjkyZGQ4MTFmZTM5Y2QzYmEwMWNkM2FiODAyNjUwMzdiN2ZlMjhiYWZkOGQ0ZmU5YTJlNzI4ZTI3YWU4YTEzOTE1OTE5MWI0OThjYmRjZmYwNzdjYTk5YWZlN2Y3N2FmNzNhNzg1ODE5MzY1YjAxOGZhNGIxODk0OTc5YjEwZWZhNmQxMDllOGIzNTUyODRjNTZiY2JkYTAwOGM1MmIwM2E0YTRmYmYwYmU5OWJhMzIxNjI3ZDU5NGQxYWU5MjU1MTA4NDU3N2U0NzA0MTMwNDMyZDE2MDk2M2ZjOThkNjExM2M5ODg1YTRkMTk5MTgzYWVkMjdlCiNFWFRJTkY6LTEsSVRWMisxCmh0dHA6Ly8xOTguMTc5LjMwLjExMC9saXZlLzE4MjAuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlYjZiOWU1YTBkNGY0ZGY0ZGZmOTdkMTcxODc1NTQxMjM1ZGYyMTEyMjYwZTI3ZTg2ODM2MTk5ZjYwMzU2Nzg0MWM1YjllMjFjMTJmYWY4MWY2YzdhODdmMTY5MGVlMDgyNGE5YjNmZjZjMzFmOTAzYTUwOTYwZDY2NTZlYzZjZTEyMjc0YzhmYTQ0NjJjNmVlZWZjOWQ0NTYzNDRlNWQ3M2E0NTk4YTNjYTY1YzhmMjNkZGQ4MmY0YzVlYzcxMDYxMmRhMDAyY2I1ZmZjOTI4NzkwYTA5MGYzNzAwYTNmMDM2MGQ3MjIzNmRmNTRkNGFkZjA2NDExY2QzYWNhZGIxOTY1MDU3ZjQzZWUzYzFkYmZjYjg1NjBmYTE0NDQ4NzVjCiNFWFRJTkY6LTEsSVRWMysxCmh0dHA6Ly8xOTguMTc5LjMwLjExMC9saXZlLzE4MjMuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlOWJmZjkxYzg2NzI0MDg3Y2U3N2MzNjgyY2MzNTIzNThmZjFjOGVjYjRkNzBhYmFkOGRjODE5NjAzZjg3ZWNmYWYwODBjZTRjY2JjMjQyMDZkYTY3NDdlMDUyYTEwZjJmOTYzNDI5YzA5NTgyYjRhZTlhNjE2NmFjYWExNTIxNzQ4MmRlM2NjMDRmNjgwZjYxMTJkZjczNTliODcxMzIwZjVkMzkzMzhhNTVmZjIwOWE5ZmJjMDQwMzYxODZlZmI4NGE4YjVlMDgyNGU3NDg2YzZiMDNmMTg4ZGE2ZDgzNjc0ZjViNzYzZTRlYjE1OTMzYjQ1ZWYyNDc3MmZiNjkyZDAwOTJhZjBjNjRhMDc4YjFlZjA3Y2JiYWUxMWRkM2Y1CiNFWFRJTkY6LTEsSVRWNCsxCmh0dHA6Ly8xOTguMTc5LjMwLjExMC9saXZlLzE4MjYuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlMmM2YTdmNzg2YTE2MDExMzI0YTJjOWVjN2Y5MzE0MzY0ZjMwNzgyYjA4M2JjYzVjNTY2ZDAyZWJmYzI1ZjhiMTQ1M2I1N2UyYjJjNGQ4ODhlM2E4OWY2MTM2NmI2OTQ0YzM3M2EzNjg4NDI2YzMyMWIyYjNkZTBjYjBhYWZlODNhZGUzNjI0NjY1YzU3MWQxMmIzZTNmNWM0MTAyMGIxODMzZWEwZmJhYTkxOGQ2Yzk0MjdjNDJkZjhlMzE4YWFiNGNiNjZhMmEyMGNkYTQ0MGI5YWFiYzVjNTdiY2M3OWRiMDQzOTg3OWMxZmZiMDM5OGUwMTFmNDY5NjM1NTRmZDBiZTE2OGI4Y2U4YzZlMmY0MjlmZDFmMDQxMzBiYWQyCiNFWFRJTkY6LTEsQ0JTIERyYW1hCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWNic2RyYW1hJnZ3PTY0MCZ2aD00NTAKI0VYVElORjotMSxDQlMgRHJhbWEKaHR0cDovLzE5OC4xNzkuMzAuMTEwL2xpdmUvMTgwNS5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmVlZjljNmE0MGZlNzUyNDgxOGFiYmQxYjQzMTBlMjNmZDc0NjRlYTI2NTM4MThlM2M0ODFiMDZjYmY0YzA1NjFhMjM3YWRhNDAxMGU2YmE0OGZjZTRkMmRjZDk3Y2UwZjBiMTIwNGM0NDRmMTExZjk4MTYyYjFkZjQxYWViYzg2Nzg3ZTQ0Mzc4Zjg2ZDIyZDk3YTcyMzk2YmMwZjU5ZDViNzNiOWQzZmVmZDExNjhmOTRhNGE0ZDIzZjM2OWIzOTFiYTc2Mzc5YWZhNWJhNTkxMWM3MDNkNzZiYWU4ZDE1NGQ4YjIyODIwNTQ4ZDhiZmE4ZWMyZjI5MjhmZTAyZDhkMTU2MDNiOTEwZWIyZmMzYmQyMzliMDQ2NGUyOTU5YTAKI0VYVElORjotMSxDQlMgUmVhbGl0eQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1jYnNyZWFsaXR5JnZ3PTY0MCZ2aD00NTAKI0VYVElORjotMSxDQlMgUmVhbGl0eQpodHRwOi8vMTk4LjE3OS4zMC4xMTAvbGl2ZS8xODA4LmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZWVmOWM2YTQwZmU3NTI0ODE3MjY4YTk2MjU5NDUwNWJkNjA4ODc3Nzc0MWI3NmJlZGExZTA1ZDJmZWI4Mzk3MjdlMzU2MmQ5OTgxOTk3OWY3Yzk3MjMzOWQ3MDQwMjZlNjRlNzVjNWM3ZmJmN2ViMDZjM2YyYTNlMWM1MGQyNjFmYmJhMzFlNmUzNTkwNTFkYzM0ZDhlZTVmNTcwZmQ0ZDI2M2I3ZjJkZDNmOWZjODhlNTY1Mjg1ZWYzNTYzYWFkZWE0ZjczZDBjNTQzYTliZjVjZDg0ZWYzYWY1ODQ1NWQ4M2YxYTZhNmRkOGE5YzAxN2RkMzVjMTQzMGYwMjM1ZTkxOWFmZjliYzdiMWQyMTFjZGIwYTRmMDVmZmEwMjRkNgojRVhUSU5GOi0xLENCUyBSZWFsaXR5KzEKaHR0cDovLzE5OC4xNzkuMzAuMTEwL2xpdmUvMTgxMS5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmUxNjljYjFiNzgxMmI2YjJjMDhmMDgyNTk2MDg3YTE3MGMxMzZlODI5ZTI0YTQ5YWQzMDc1NTE3ODczMmJmNjA5MjViZjAyNzBlZDY5YmQzZjJhMTU4N2MyMjE1NWY0YTU0MmFiMWEwOTY5NWQzNTY3ZTM3ZDVlNzVkNDQ4NWNlNjQ4YTFhM2FiZTIyNjA5ZDc5Y2M4MGYzOTkxYjE4M2M3YzIxZDQ1ZmQxMzE4MTc5MDU4MWZhOTg3ODI2ZjIyMDlmZmUyNzExOTU1YzBiNzFlNDI0NWJhNGNhZWE1MDBlNDQ5MWM5MDhkNjVlNGMzYTc5M2E3MjYyMTA3OTJkMzEzMjhmY2M2ZTY5OTE1YmFlMzlhZGFlY2IxMTM4MzY2ZTkKI0VYVElORjotMSxETWF4Cmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWRtYXg0JnZ3PTY0MCZ2aD00NTAKI0VYVElORjotMSxEcmFtYQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1kcmFtYSZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsNVVTQQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT01dXNhNCZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsNVVTQQpodHRwOi8vMTk4LjE3OS4zMC4xMTAvbGl2ZS84NDUuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlMjE2YmI0NWVjMzBmZjQxM2I2MTM4YmU1NGUxMDAzMzIxMmQ3NzQ0N2ExMzA3YjM0OTYyYzlmNmY1ZWIyZDg4YTdhMTNmYTUxOTdmZGVlZjY2NDkwNTBkM2Q2ZDVlZDU4YWQ2N2IzNDRjODczODg5ZDZhYWQ1ZTdiMzVmOTA1Y2ZkN2Q3NDMyZmI2MDlkYTBjZThkOThiNWVlZGNhNzI2ZmE2YTY1YmQxNzllOTU3MThiMDk2MzBhODI1MTY3MzE2OThmYjhjZDQ2OWI4MDlkYzJiMmNmZTEyODExN2M4ZWU1YjQ0NWU0YTNhZDliZmFlZDU1MjY1YjJhNGUyOTVmZmZhOWFhOWNhYjY3Y2I1MzM0MmE0ZjZjYThkNzZkMmRhCiNFWFRJTkY6LTEsWWVzdGVyZGF5Cmh0dHA6Ly9saXZlMzA3LmVkZ2UuZmlsbW9uLmNvbS9saXZlLzEwMzkuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlYzM1NTVlNmE3ZjQ3NWI2YzNkZDQyOGVlYWE1OGFmMWZhOWMwMjdlMmZmYjExMjgzOTk4OThiOTIyZWUxNDc3ZWJlN2E5MjM5ZWJkNDQ1Yzg2OTRhNjYwNjA0YWJmNTY2MjIzM2I4YjJhYjUwYmZmNTY5NGU0NjNlYWZlNDkyZGQ2ZDAxMTJlY2I3YTYwNThiMzg5YzcwNjc2NmU2MTE4NDVjYmE5M2MwNzRlZTQ5MzgyMmFjMTc3YzJlNDMzYzQ4YWQwOWIyNTFkNjgyMmRiZTg0MjRlMjE3N2NjNjk5OTRlZTU0Yzg3NjM5ZjllNjkzZWVhMzBhNmQxYmUzYzFiYmUwM2UyZWQ1YmZkY2IxN2M4Njk0OGM2MDk3YjBjNDZjCiNFWFRJTkY6LTEsVHJ1ZSBNb3ZpZXMgMQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT10cnVtMSZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsVHJ1ZSBNb3ZpZXMgMgpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT10cnVtMiZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsR29sZApodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT11a2dvbGQmdnc9NjQwJnZoPTQ1MAojRVhUSU5GOi0xLFF1ZXN0Cmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXF1ZXN0JnZ3PTY0MCZ2aD00NTAKI0VYVElORjotMSxNVFYKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY5MDM3JmF1dG9wbGF5PXRydWUKCgojRVhUSU5GOi0xLFtDT0xPUiB5ZWxsb3ddLS0gQmVsb3cgQXJlIEhEIFVrIFR2IFNvbWUgQXJlIEdlbyBMb2NrZWQgLS1bL0NPTE9SXQpodHRwOi8vMC4wLjAuMC92ZHVidDI1CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJCQyBPbmUgSERbL0NPTE9SXQpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzQvbGl2ZS9iYmNfb25lX2hkL2JiY19vbmVfaGQuaXNtbC9iYmNfb25lX2hkLWF1ZGlvXzElM0QxMjgwMDAtdmlkZW8lM0QzNTAwMDAwLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CQkMgVHdvIEhEWy9DT0xPUl0KaHR0cDovL3ZzLWhkcy11ay1saXZlLmVkZ2VzdWl0ZS5uZXQvcG9vbF81L2xpdmUvYmJjX3R3b19oZC9iYmNfdHdvX2hkLmlzbWwvYmJjX3R3b19oZC1hdWRpb18xJTNEMTI4MDAwLXZpZGVvJTNEMzUwMDAwMC5tM3U4fFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQkJDIFRocmVlIEhEWy9DT0xPUl0KaHR0cDovL3ZzLWhkcy11ay1saXZlLmVkZ2VzdWl0ZS5uZXQvcG9vbF8xL2xpdmUvYmJjX3RocmVlX2hkL2JiY190aHJlZV9oZC5pc21sL2JiY190aHJlZV9oZC1hdWRpb18xJTNEMTI4MDAwLXZpZGVvJTNEMzUwMDAwMC5tM3U4fFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQkJDIEZvdXIgSERbL0NPTE9SXQpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzIvbGl2ZS9iYmNfZm91cl9oZC9iYmNfZm91cl9oZC5pc21sL2JiY19mb3VyX2hkLWF1ZGlvXzElM0QxMjgwMDAtdmlkZW8lM0QzNTAwMDAwLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1DQkJDIEhEWy9DT0xPUl0KaHR0cDovL3ZzLWhkcy11ay1saXZlLmVkZ2VzdWl0ZS5uZXQvcG9vbF8xL2xpdmUvY2JiY19oZC9jYmJjX2hkLmlzbWwvY2JiY19oZC1hdWRpb18xJTNEMTI4MDAwLXZpZGVvJTNEMzUwMDAwMC5tM3U4fFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQ0JlZWJpZXMgSERbL0NPTE9SXQpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzIvbGl2ZS9jYmVlYmllc19oZC9jYmVlYmllc19oZC5pc21sL2NiZWViaWVzX2hkLWF1ZGlvXzElM0QxMjgwMDAtdmlkZW8lM0QzNTAwMDAwLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CQkMgTmV3cyBIRFsvQ09MT1JdCmh0dHA6Ly92cy1oZHMtdWstbGl2ZS5lZGdlc3VpdGUubmV0L3Bvb2xfNS9saXZlL2JiY19uZXdzX2NoYW5uZWxfaGQvYmJjX25ld3NfY2hhbm5lbF9oZC5pc21sL2JiY19uZXdzX2NoYW5uZWxfaGQtYXVkaW9fMSUzRDEyODAwMC12aWRlbyUzRDM1MDAwMDAubTN1OHxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJCQyBvbmUgSEQgKFVLKVsvQ09MT1JdCmh0dHA6Ly92cy1oZHMtdWstbGl2ZS5lZGdlc3VpdGUubmV0L3Bvb2xfNS9saXZlL2JiY19vbmVfbG9uZG9uL2JiY19vbmVfbG9uZG9uLmlzbWwvYmJjX29uZV9sb25kb24tYXVkaW9fMj05NjAwMC12aWRlbz0xMzc0MDAwLmY0bXxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJCQyBUd28gSEQgKFVLKVsvQ09MT1JdCmh0dHA6Ly92cy1oZHMtdWstbGl2ZS5iYmNmbXQudm8ubGxud2QubmV0L3Bvb2xfNS9saXZlL2JiY190d29faGQvYmJjX3R3b19oZC5pc21sL2JiY190d29faGQtYXVkaW9fMT0xMjgwMDAtdmlkZW89MzUwMDAwMC5mNG18WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1DQkJDIEhEIChVSylbL0NPTE9SXQpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzEvbGl2ZS9jYmJjX2hkL2NiYmNfaGQuaXNtbC9jYmJjX2hkLWF1ZGlvXzI9OTYwMDAtdmlkZW89MTM3NDAwMC5mNG18WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1DQmVlYmllcyBIRCAoVUspWy9DT0xPUl0KaHR0cDovL3ZzLWhkcy11ay1saXZlLmVkZ2VzdWl0ZS5uZXQvcG9vbF8yL2xpdmUvY2JlZWJpZXNfaGQvY2JlZWJpZXNfaGQuaXNtbC9jYmVlYmllc19oZC1hdWRpb18yPTk2MDAwLXZpZGVvPTEzNzQwMDAuZjRtfFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQkJDIE5ld3MgSEQgKFVLKVsvQ09MT1JdCmh0dHA6Ly92cy1oZHMtdWstbGl2ZS5lZGdlc3VpdGUubmV0L3Bvb2xfNS9saXZlL2JiY19uZXdzX2NoYW5uZWxfaGQvYmJjX25ld3NfY2hhbm5lbF9oZC5pc21sL2JiY19uZXdzX2NoYW5uZWxfaGQtYXVkaW9fMj05NjAwMC12aWRlbz0xMzc0MDAwLmY0bXxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJCQyBQYXJsaWFtZW50IEhEIChVSylbL0NPTE9SXQpodHRwOi8vdnMtaGRzLXVrLWxpdmUuYmJjZm10LnZvLmxsbndkLm5ldC9wb29sXzEvbGl2ZS9iYmNfcGFybGlhbWVudC9iYmNfcGFybGlhbWVudC5pc21sL2JiY19wYXJsaWFtZW50LWF1ZGlvXzI9OTYwMDAtdmlkZW89ODI3MDAwLmY0bXxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJCQyBBbGJhIEhEIChVSylbL0NPTE9SXQpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzEvbGl2ZS9iYmNfYWxiYS9iYmNfYWxiYS5pc21sL2JiY19hbGJhLWF1ZGlvXzE9MTI4MDAwLXZpZGVvPTEzNzQwMDAubTN1OHxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJCQyBBbGJhIEhEIChVSykgMVsvQ09MT1JdCmh0dHA6Ly92cy1oZHMtdWstbGl2ZS5lZGdlc3VpdGUubmV0L3Bvb2xfMS9saXZlL2JiY19hbGJhL2JiY19hbGJhLmlzbWwvYmJjX2FsYmEtYXVkaW9fMj05NjAwMC12aWRlbz0xMzc0MDAwLmY0bXxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVM0QyBIRCAoVUspWy9DT0xPUl0KaHR0cDovL3ZzLWhkcy11ay1saXZlLmJiY2ZtdC52by5sbG53ZC5uZXQvcG9vbF85L2xpdmUvczRjcGJzL3M0Y3Bicy5pc21sL3M0Y3Bicy1hdWRpb18yPTk2MDAwLXZpZGVvPTEzNzQwMDAuZjRtfFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTG9uZG9uIExpdmVbL0NPTE9SXQpodHRwOi8vYmNvdmVsaXZlaW9zLWkuYWthbWFpaGQubmV0L2hscy9saXZlLzIxNzQzNC8zMDgzMjc5ODQwMDAxL21hc3Rlcl85MDAubTN1OAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1GaWxtNCBIRFsvQ09MT1JdCmh0dHA6Ly9wZWJibGVzMTI0LWxoLmFrYW1haWhkLm5ldC9pL2ZpbG00XzFAMTM3NzkwL21hc3Rlci5tM3U4fFgtRm9yd2FyZGVkLUZvcj04NS41Ljg3LjIxOAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1FNCBIRFsvQ09MT1JdCmh0dHA6Ly9wZWJibGVzMTI0LWxoLmFrYW1haWhkLm5ldC9pL2U0XzFAMTM3Nzg5L21hc3Rlci5tM3U4fFgtRm9yd2FyZGVkLUZvcj04NS41Ljg3LjIxOAoKCgpAQEBAQAoKR0VOUkUsIFtDT0xPUiBncmVlbl0tLSBVSyBTcG9ydHMgVHYgLS1bL0NPTE9SXQoKI0VYVElORjotMSxTa3kgU3BvcnRzIDEKaHR0cDovL2RlbHRhdHYucHcvc3RyZWFtLnBocD9pZD0xMzI1NDcmd2lkdGg9NjQwJmhlaWdodD00ODAKI0VYVElORjotMSxTa3kgU3BvcnRzIDEKcnRtcGU6Ly8xMzQuMTkuMTg1LjIwMzoxOTM1L2xpdmVkZ2UgcGxheXBhdGg9bWFtYWhkc2t5MSBzd2ZVcmw9aHR0cDovL3BsYXllci5oZGNhc3Qub3JnL18uc3dmIGxpdmU9MSBmbGFzaHZlcj1XSU4vMTYsMCwwLDI1NyIgdGltZW91dD0xNSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBsaXZlPXRydWUgc3dmVmZ5PTEgcGFnZVVybD1odHRwOi8vd3d3LmhkY2FzdC5vcmcvfHJlZmVyZXI9bWFtYWhkLmNvbQojRVhUSU5GOi0xLFNreSBTcG9ydHMgMgpodHRwOi8vZGVsdGF0di5wdy9zdHJlYW0ucGhwP2lkPTEzMzgzMiZ3aWR0aD02NDAmaGVpZ2h0PTQ4MAojRVhUSU5GOi0xLFNreSBTcG9ydHMgMgpodHRwOi8vdGd1bi50di9tZW51cy9wbGF5ZXJzL3N0cmVhbWxpdmUuaHRtbD82ODQyNAojRVhUSU5GOi0xLFNreSBTcG9ydHMgMgpydG1wZTovLzEzNC4xOS4xODUuMjAzOjE5MzUvbGl2ZWRnZSBwbGF5cGF0aD1tYW1haGRza3kyIHN3ZlVybD1odHRwOi8vcGxheWVyLmhkY2FzdC5vcmcvXy5zd2YgbGl2ZT0xIGZsYXNodmVyPVdJTi8xNiwwLDAsMjU3IiB0aW1lb3V0PTE1IHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGxpdmU9dHJ1ZSBzd2ZWZnk9MSBwYWdlVXJsPWh0dHA6Ly93d3cuaGRjYXN0Lm9yZy98cmVmZXJlcj1tYW1haGQuY29tIAojRVhUSU5GOi0xLFNreSBTcG9ydHMgMwpodHRwOi8vZGVsdGF0di5wdy9zdHJlYW0ucGhwP2lkPTEzMzk2MiZ3aWR0aD02NDAmaGVpZ2h0PTQ4MAojRVhUSU5GOi0xLFNreSBTcG9ydHMgMwpydG1wZTovLzEzNC4xOS4xODUuMjA0OjE5MzUvbGl2ZWRnZSBwbGF5cGF0aD1tYW1haGRza3kzIHN3ZlVybD1odHRwOi8vcGxheWVyLmhkY2FzdC5vcmcvXy5zd2YgbGl2ZT0xIGZsYXNodmVyPVdJTi8xNiwwLDAsMjU3IiB0aW1lb3V0PTE1IHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGxpdmU9dHJ1ZSBzd2ZWZnk9MSBwYWdlVXJsPWh0dHA6Ly93d3cuaGRjYXN0Lm9yZy98cmVmZXJlcj1tYW1haGQuY29tIAojRVhUSU5GOi0xLFNreSBTcG9ydHMgNApodHRwOi8vZGVsdGF0di5wdy9zdHJlYW0ucGhwP2lkPTEzMjQ4MiZ3aWR0aD02NDAmaGVpZ2h0PTQ4MAojRVhUSU5GOi0xLFNreSBTcG9ydHMgNApydG1wZTovLzEzNC4xOS4xODUuMjA0OjE5MzUvbGl2ZWRnZSBwbGF5cGF0aD1tYW1haGRza3k0IHN3ZlVybD1odHRwOi8vcGxheWVyLmhkY2FzdC5vcmcvXy5zd2YgbGl2ZT0xIGZsYXNodmVyPVdJTi8xNiwwLDAsMjU3IiB0aW1lb3V0PTE1IHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGxpdmU9dHJ1ZSBzd2ZWZnk9MSBwYWdlVXJsPWh0dHA6Ly93d3cuaGRjYXN0Lm9yZy98cmVmZXJlcj1tYW1haGQuY29tCiNFWFRJTkY6LTEsU2t5IFNwb3J0cyA1CnJ0bXBlOi8vMTM0LjE5LjE4NS4yMDQ6MTkzNS9saXZlZGdlIHBsYXlwYXRoPW1hbWFoZHNreTUgc3dmVXJsPWh0dHA6Ly9wbGF5ZXIuaGRjYXN0Lm9yZy9fLnN3ZiBsaXZlPTEgZmxhc2h2ZXI9V0lOLzE2LDAsMCwyNTciIHRpbWVvdXQ9MTUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggbGl2ZT10cnVlIHN3ZlZmeT0xIHBhZ2VVcmw9aHR0cDovL3d3dy5oZGNhc3Qub3JnL3xyZWZlcmVyPW1hbWFoZC5jb20gCiNFWFRJTkY6LTEsU2t5IFNwb3J0cyBGMQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1za3lmMTQ4OCZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsU2t5IFNwb3J0cyBGMQpydG1wZTovLzEzNC4xOS4xODUuMjA0OjE5MzUvbGl2ZWRnZSBwbGF5cGF0aD1tYW1haGRza3lzcG9ydHNmMSBzd2ZVcmw9aHR0cDovL3BsYXllci5oZGNhc3Qub3JnL18uc3dmIGxpdmU9MSBmbGFzaHZlcj1XSU4vMTYsMCwwLDI1NyIgdGltZW91dD0xNSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBsaXZlPXRydWUgc3dmVmZ5PTEgcGFnZVVybD1odHRwOi8vd3d3LmhkY2FzdC5vcmcvfHJlZmVyZXI9bWFtYWhkLmNvbSAKI0VYVElORjotMSxTa3kgU3BvcnRzIE5ld3MKcnRtcGU6Ly8xMzQuMTkuMTg1LjIwNDoxOTM1L2xpdmVkZ2UgcGxheXBhdGg9c3NreXNuIHN3ZlVybD1odHRwOi8vcGxheWVyLmhkY2FzdC5vcmcvXy5zd2YgbGl2ZT0xIGZsYXNodmVyPVdJTi8xNiwwLDAsMjU3IiB0aW1lb3V0PTE1IHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGxpdmU9dHJ1ZSBzd2ZWZnk9MSBwYWdlVXJsPWh0dHA6Ly93d3cuaGRjYXN0Lm9yZy98cmVmZXJlcj13d3cuc3RyZWFta2luZy5vcmcKI0VYVElORjotMSxTa3kgU3BvcnRzIE5ld3MKcnRtcGU6Ly8xMzQuMTkuMTg1LjIwNDoxOTM1L2xpdmVkZ2UgcGxheXBhdGg9bWFtYWhkc2t5bmV3cyBzd2ZVcmw9aHR0cDovL3BsYXllci5oZGNhc3Qub3JnL18uc3dmIGxpdmU9MSBmbGFzaHZlcj1XSU4vMTYsMCwwLDI1NyIgdGltZW91dD0xNSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBsaXZlPXRydWUgc3dmVmZ5PTEgcGFnZVVybD1odHRwOi8vd3d3LmhkY2FzdC5vcmcvfHJlZmVyZXI9bWFtYWhkLmNvbQojRVhUSU5GOi0xLEJUIFNwb3J0cyAxCnJ0bXBlOi8vMTM0LjE5LjE4NS4yMDQ6MTkzNS9saXZlZGdlIHBsYXlwYXRoPW1hbWFoZGJ0c3BvcnQxIHN3ZlVybD1odHRwOi8vcGxheWVyLmhkY2FzdC5vcmcvXy5zd2YgbGl2ZT0xIGZsYXNodmVyPVdJTi8xNiwwLDAsMjU3IiB0aW1lb3V0PTE1IHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGxpdmU9dHJ1ZSBzd2ZWZnk9MSBwYWdlVXJsPWh0dHA6Ly93d3cuaGRjYXN0Lm9yZy98cmVmZXJlcj1tYW1haGQuY29tCiNFWFRJTkY6LTEsQlQgU3BvcnRzIDEKcnRtcDovLzE5NS4xNTQuMTYyLjE1Nzo4MC9saXZlcmVwZWF0ZXIgcGxheXBhdGg9MTMzNjQxIHN3ZlVybD1odHRwOi8vY2RuLmdvb2RjYXN0LmNvL3BsYXllcnMuc3dmIGxpdmU9dHJ1ZSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBmbGFzaHZlcj1XSU4vMjAxOCwwLDAsMTYwIHRpbWVvdXQ9MTMgc3dmVmZ5PTEgcGFnZVVybD1odHRwOi8vZGVsdGF0di5wdy98cmVmZXJlcj1odHRwOi8vc3BvcnRzNHUudHYKI0VYVElORjotMSxCVCBTcG9ydHMgMgpydG1wZTovLzEzNC4xOS4xODUuMjA0OjE5MzUvbGl2ZWRnZSBwbGF5cGF0aD1tYW1haGRidHNwb3J0MiBzd2ZVcmw9aHR0cDovL3BsYXllci5oZGNhc3Qub3JnL18uc3dmIGxpdmU9MSBmbGFzaHZlcj1XSU4vMTYsMCwwLDI1NyIgdGltZW91dD0xNSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBsaXZlPXRydWUgc3dmVmZ5PTEgcGFnZVVybD1odHRwOi8vd3d3LmhkY2FzdC5vcmcvfHJlZmVyZXI9bWFtYWhkLmNvbQojRVhUSU5GOi0xLEJUIFNwb3J0cyBFdXJvcGUKcnRtcDovLzYyLjIxMC4xMDUuNjA6ODAvbGl2ZXJlcGVhdGVyIHBsYXlwYXRoPTEzMzY3NiBzd2ZVcmw9aHR0cDovL2Nkbi5nb29kY2FzdC5jby9wbGF5ZXJzLnN3ZiBsaXZlPXRydWUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggZmxhc2h2ZXI9V0lOLzIwMTgsMCwwLDE2MCB0aW1lb3V0PTEzIHN3ZlZmeT0xIHBhZ2VVcmw9aHR0cDovL2RlbHRhdHYucHcvfHJlZmVyZXI9aHR0cDovL3Nwb3J0czR1LnR2CiNFWFRJTkY6LTEsUHJlbWllciBTcG9ydHMKaHR0cDovL3d3dy5oZGNhc3Qub3JnL2VtYmVkbGl2ZTQucGhwP3U9c3ByZW1zcCZ2dz04NTQmdmg9NDgwCiNFWFRJTkY6LTEsU2V0YW50YSBTcG9ydHMKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9c2V0YW50YWEmdnc9NjQwJnZoPTQ1MAojRVhUSU5GOi0xLEV1cm9TcG9ydCAyCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWV1cm9zcG9ydHQyJnZ3PTY0MCZ2aD00NTAKI0VYVElORjotMSxFU1BOIChVSykKcnRtcGU6Ly8xMzQuMTkuMTg1LjIwNToxOTM1L2xpdmVkZ2UgcGxheXBhdGg9bWFtYWhkdmVzcG51ayBzd2ZVcmw9aHR0cDovL3BsYXllci5oZGNhc3Qub3JnL18uc3dmIGxpdmU9MSBmbGFzaHZlcj1XSU4vMTYsMCwwLDI1NyIgdGltZW91dD0xNSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBsaXZlPXRydWUgc3dmVmZ5PTEgcGFnZVVybD1odHRwOi8vd3d3LmhkY2FzdC5vcmcvfHJlZmVyZXI9bWFtYWhkLmNvbQojRVhUSU5GOi0xLEF0IFRoZSBSYWNlcwpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1hdHI1JnZ3PTY0MCZ2aD00NTAKI0VYVElORjotMSxCb3ggTmF0aW9uCnJ0bXBlOi8vMTM0LjE5LjE4NS4yMDY6MTkzNS9saXZlZGdlIHBsYXlwYXRoPW1hbWFoZGJveG5hdGlvbiBzd2ZVcmw9aHR0cDovL3BsYXllci5oZGNhc3Qub3JnL18uc3dmIGxpdmU9MSBmbGFzaHZlcj1XSU4vMTYsMCwwLDI1NyIgdGltZW91dD0xNSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBsaXZlPXRydWUgc3dmVmZ5PTEgcGFnZVVybD1odHRwOi8vd3d3LmhkY2FzdC5vcmcvfHJlZmVyZXI9bWFtYWhkLmNvbQojRVhUSU5GOi0xLEJveCBOYXRpb24KaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9Ym94b28mdnc9NjQwJnZoPTQ1MAojRVhUSU5GOi0xLExGVFYKcnRtcDovLzMxLjcuNTYuMjU0OjE5MzUvc3RyZWFtLyBwbGF5cGF0aD0wVm1VMWJwU05RLnN0cmVhbSBzd2ZVcmw9aHR0cDovL3RoZWNkbi4wNHN0cmVhbS5jb20vcC9vb29sbzEuc3dmIHBhZ2VVcmw9aHR0cDovL3d3dy4wNHN0cmVhbS5jb20vZWJiLnBocD9hZHNwPW90aGVyIGxpdmU9dHJ1ZSB0aW1lb3V0PTE1CiNFWFRJTkY6LTEsRXVyb1Nwb3J0IEludC4KaHR0cDovL2VzaW9zbGl2ZTYtaS5ha2FtYWloZC5uZXQvaGxzL2xpdmUvMjAyODc0L0FMX1BfRVNQMV9JTlRFUl9FTkcvcGxheWxpc3RfMTgwMC5tM3U4CgpAQEBAQAoKR0VOUkUsIFtDT0xPUiBncmVlbl0tLSBVU0EgTGl2ZSBUdiAtLVsvQ09MT1JdCgojRVhUSU5GOjAsQUJDIDIyCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02ODk2OQoKI0VYVElORjowLEFCQyBGYW1pbHkKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTMwMzAzJmF1dG9wbGF5PXRydWUKCiNFWFRJTkY6MCxBQkMgRmFtaWx5Cmh0dHA6Ly96ZXJvY2FzdC50di9lbWJlZC5waHA/YT0xODUyJmlkPSZ3aWR0aD03MDAmaGVpZ2h0PTQ4MCZhdXRvc3RhcnQ9dHJ1ZSZzdHJlY2g9CgojRVhUSU5GOjAsQUJDIE5ld3MKaHR0cDovL2FiY2xpdmUuYWJjbmV3cy5jb20vaS9hYmNfbGl2ZTRAMTM2MzMwL2luZGV4XzEyMDBfYXYtYi5tM3U4CgojRVhUSU5GOi0xLEFuaW1hbCBQbGFuZXQgVVMKaHR0cDovLzgwLjgwLjE2MC4xNjgvbGl2ZS8xL2xpdmUubTN1OAoKI0VYVElORjowLEEmRQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9Njg5NTImYXV0b3BsYXk9dHJ1ZQoKI0VYVElORjowLEFNQwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9Njg5NjMmYXV0b3BsYXk9dHJ1ZQoKI0VYVElORjowLEJsb29tYmVyZwpodHRwOi8vY2RuMy52aWRlb3MuYmxvb21iZXJnLmNvbS9idHYvdXMvbWFzdGVyLm0zdTgKCiNFWFRJTkY6MCxDYXJ0b29uIE5ldHdvcmsKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcxNjMyJmF1dG9wbGF5PXRydWUKCiNFWFRJTkY6MCxDQlMKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY5OTU2CgojRVhUSU5GOjAsQ05OIFVTQQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9Njg5NjcmYXV0b3BsYXk9dHJ1ZQoKI0VYVElORjowLENOTiBJbnRlcm5hdGlvbmFsCmh0dHA6Ly9lZGdlMS5ldmVyeW9uLnR2L2V0djFzYi9waGQxNi9wbGF5bGlzdC5tM3U4CgojRVhUSU5GOjAsQ1RWIEVkbW9udG9uCmh0dHA6Ly8xOTguMTc5LjMxLjE5OC9saXZlLzIwNTMuaGlnaC5zdHJlYW0vMjA1My5oaWdoLnN0cmVhbS9pbmRleC5tM3U4CgojRVhUSU5GOjAsQ1RWIExldGhicmlkZ2UKaHR0cDovLzE5OC4xNzkuMzEuMTk4L2xpdmUvMjA1OS5oaWdoLnN0cmVhbS8yMDU5LmhpZ2guc3RyZWFtL2luZGV4Lm0zdTgKCiNFWFRJTkY6MCxDVFYgWW9ya3RvbgpodHRwOi8vMTk4LjE3OS4zMS4xOTgvbGl2ZS8yMDYyLmhpZ2guc3RyZWFtLzIwNjIuaGlnaC5zdHJlYW0vaW5kZXgubTN1OAoKI0VYVElORjowLENUViBSZWdpbmEKaHR0cDovLzE5OC4xNzkuMzEuMTk4L2xpdmUvMjA1Ni5oaWdoLnN0cmVhbS8yMDU2LmhpZ2guc3RyZWFtL2luZGV4Lm0zdTgKCiNFWFRJTkY6MCxDVwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9Njg5NzAKCiNFWFRJTkY6MCxDVyA5IENoaWNhZ28KaHR0cDovL3dnbnRyaWJ1bmUtbGguYWthbWFpaGQubmV0L2kvV0dOUHJpbWFyeV8xQDMwNDYyMi9pbmRleF8zNTBfYXYtcC5tM3U4PwoKI0VYVElORjowLERpc2NvdmVyeSBDaGFubmVsCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02OTExMAoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRGlzY292ZXJ5IENoIFVTIEhEWy9DT0xPUl0gCmh0dHA6Ly84MC44MC4xNjAuMTY4L2xpdmUvOC9saXZlLm0zdTggCgojRVhUSU5GOi0xLERpc2NvdmVyeSBJRCBVUwpodHRwOi8vODAuODAuMTYwLjE2OC9saXZlLzUvbGl2ZS5tM3U4CgojRVhUSU5GOi0xLERpc2NvdmVyeSBTYyBVUyAKaHR0cDovLzgwLjgwLjE2MC4xNjgvbGl2ZS85L2xpdmUubTN1OCAKCiNFWFRJTkY6MCxEaXNuZXkganIvY2hhbm5lbApodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9Mzg4MDQKCiNFWFRJTkY6MCxGb3ggTmV0d29yawpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzAwNDgKCiNFWFRJTkY6MCxIaXN0b3J5IENoYW5uZWwKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcwNjMzCgojRVhUSU5GOjAsSFNOCmh0dHA6Ly9oc24ubXBsLm1paXNvbHV0aW9ucy5uZXQvaHNuLWxpdmUwMS9fZGVmaW5zdF8vbXA0OjQyMHA1MDBrQjMxL3BsYXlsaXN0Lm0zdTgKCiNFWFRJTkY6MCxIU04gMgpodHRwOi8vaHNuLm1wbC5taWlzb2x1dGlvbnMubmV0L2hzbi1saXZlMDEvX2RlZmluc3RfL21wNDo0NjhwNTAwa0IzMS9wbGF5bGlzdC5tM3U4CgojRVhUSU5GOjAsTVNOQkMKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY5MDI0CgojRVhUSU5GOjAsTVRWCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02OTAzNwoKI0VYVElORjowLE5hdGlvbmFsIEdvZWdyYXBoaWMKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY5MDE4CgojRVhUSU5GOjAsW0NPTE9SIGdyZWVuXU5BU0EgVFYgSERbL0NPTE9SXQpodHRwOi8vbmFzYXR2LWxoLmFrYW1haWhkLm5ldC9pL05BU0FfMTAxQDMxOTI3MC9pbmRleF8xMDAwX2F2LWIubTN1OD9oZD0xMCZyZWJhc2U9b24KCiNFWFRJTkY6MCxOaWNrZWxvZGVvbgpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzExMTIKCiNFWFRJTkY6MCxPV04KaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTUzODU3CgojRVhUSU5GOi0xLFBsYW5ldCBHcmVlbiBVUyAKaHR0cDovLzgwLjgwLjE2MC4xNjgvbGl2ZS80L2xpdmUubTN1OCAKCiNFWFRJTkY6LTEsUlQgVG9kYXkKaHR0cDovL3J0LmFwaS52aXNpb25pcC50di9saXZlL0FTSFRUUC9SVF9BbWVyaWNhLU1CL3BsYXlsaXN0Lm0zdTgKCiNFWFRJTkY6LTEsU2hvd3RpbWUgVVMKaHR0cDovLzgwLjgwLjE2MC4xNjgvbGl2ZS83L2xpdmUubTN1OAoKI0VYVElORjowLFNwaWtlIFR2Cmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD01MjQ3OQoKI0VYVElORjowLHN5ZnkKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY4OTY2CgojRVhUSU5GOjAsc3lmeQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzEyMDYKCiNFWFRJTkY6MCxzeWZ5Cmh0dHA6Ly8zNy40OC44My4xMzE6MTkzNS9saXZlL3N5Znk3Ny9wbGF5bGlzdC5tM3U4CgojRVhUSU5GOjAsVEJTCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD01MzE2MQoKI0VYVElORjowLFRGMQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzA0NjgKCiNFWFRJTkY6LTEsVExDIFVTIApodHRwOi8vODAuODAuMTYwLjE2OC9saXZlLzIvbGl2ZS5tM3U4CgojRVhUSU5GOi0xLFROVApodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NjkwMjAmYXV0b3BsYXk9dHJ1ZQoKI0VYVElORjotMSxUcmF2ZWwgQ2guVVMgCmh0dHA6Ly84MC44MC4xNjAuMTY4L2xpdmUvMy9saXZlLm0zdTggCgojRVhUSU5GOi0xLFRyYXZlbCBDaC5VUyAKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY5MDE5JmF1dG9wbGF5PXRydWUKCiNFWFRJTkY6LTEsVFYgTGFuZApodHRwOi8vMTg0LjE3My44NS45MToxOTM1L2VkZ2UvX2RlZmluc3RfLzd5eGlycjQwNDZuazVjYS9wbGF5bGlzdC5tM3U4P3dvd3phc2Vzc2lvbmlkPTE0MTk5MDg0MDEKCiNFWFRJTkY6MCxVU0EgTmV0d29yawpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9Mzg3NjgKCiNFWFRJTkY6MCxVU0EgTmV0d29yawpodHRwOi8vMzcuNDguODMuMTMxOjE5MzUvbGl2ZS91c2E3Ny9wbGF5bGlzdC5tM3U4P3dvd3phc2Vzc2lvbmlkPTI0NDE2MDI5CgojRVhUSU5GOjAsVkgxCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD01Mjk4OAoKQEBAQEAKR0VOUkUsIFtDT0xPUiBncmVlbl0tLSBVU0EgU3BvcnRzIC0tWy9DT0xPUl0KCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU5CQ1NOIEhEWy9DT0xPUl0gW0NPTE9SIHllbGxvd10gMTA4MHAgTk8gVlBOIE5FRURFRCBbL0NPTE9SXQpodHRwOi8vdHZlbmJjc24taS5Ba2FtYWloZC5uZXQvaGxzL2xpdmUvMjE4MjM1L25iY3NueC80Mjk2ay9wcm9nLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTY2LjE3MS4yMjguMTAyCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU5CQ1NOIEhEWy9DT0xPUl0gW0NPTE9SIHllbGxvd10gNzIwcCBOTyBWUE4gTkVFREVEIFsvQ09MT1JdCmh0dHA6Ly90dmVuYmNzbi1pLkFrYW1haWhkLm5ldC9obHMvbGl2ZS8yMTgyMzUvbmJjc254LzI1OTZrL3Byb2cubTN1OHxYLUZvcndhcmRlZC1Gb3I9NjYuMTcxLjIyOC4xMDIKI0VYVElORjotMSxOQkNTTiBTRFtDT0xPUiB5ZWxsb3ddIE5PIFZQTiBORUVERUQgWy9DT0xPUl0KaHR0cDovL3R2ZW5iY3NuLWkuQWthbWFpaGQubmV0L2hscy9saXZlLzIxODIzNS9uYmNzbngvMTg5NmsvcHJvZy5tM3U4fFgtRm9yd2FyZGVkLUZvcj02Ni4xNzEuMjI4LjEwMgoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dR29sZiBDaGFubmVsIDEwODAgSEQgWy9DT0xPUl0gKEVORykoTk8gVlBOIFJFUVVJUkVEKQpodHRwOi8vdHZlZ29sZi1pLkFrYW1haWhkLm5ldC9obHMvbGl2ZS8yMTgyMjUvZ29sZngvNDI5NmsvcHJvZy5tM3U4fFgtRm9yd2FyZGVkLUZvcj02Ni4xNzEuMjI4LjEwMgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Hb2xmIENoYW5uZWwgNzIwIEhEIFsvQ09MT1JdIChFTkcpKE5PIFZQTiBSRVFVSVJFRCkKaHR0cDovL3R2ZWdvbGYtaS5Ba2FtYWloZC5uZXQvaGxzL2xpdmUvMjE4MjI1L2dvbGZ4LzI1OTZrL3Byb2cubTN1OHxYLUZvcndhcmRlZC1Gb3I9NjYuMTcxLjIyOC4xMDIKI0VYVElORjotMSxHb2xmIENoYW5uZWwgU0QgKEVORykoTk8gVlBOIFJFUVVJUkVEKQpodHRwOi8vdHZlZ29sZi1pLkFrYW1haWhkLm5ldC9obHMvbGl2ZS8yMTgyMjUvZ29sZngvMTg5NmsvcHJvZy5tM3U4fFgtRm9yd2FyZGVkLUZvcj02Ni4xNzEuMjI4LjEwMgoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRm94IFNwb3J0cyAxIEdvIFVTQSA3MjBIRFsvQ09MT1JdCmh0dHA6Ly81NC4xNzcuMTk1LjgyL3NlcnZlci9wbGF5L2ZzMWN0Zy8zOTY0MDAwL3Byb2cubTN1OD9hbnY9MTQyNzQxNTIxOTg5NnxYLUZvcndhcmRlZC1Gb3I9NjYuMTcxLjIyOC4xMDIKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRm94IFNwb3J0cyAyIEdvIFVTQSA3MjBIRFsvQ09MT1JdCmh0dHA6Ly81NC4xNzcuMTk1LjgyL3NlcnZlci9wbGF5L2ZzMmN0Zy8zOTY0MDAwL3Byb2cubTN1OD9hbnY9MTQyNzQxNTIxOTg5NnxYLUZvcndhcmRlZC1Gb3I9NjYuMTcxLjIyOC4xMDIKCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUZveCBTcG9ydHMgMSBVU0EgNzIwSERbL0NPTE9SXQpodHRwOi8vdGhldGhhb2hkLm5ldC92L2ZveHNwb3J0MS5waHAKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRm94IFNwb3J0cyAyIFVTQSA3MjBIRFsvQ09MT1JdCmh0dHA6Ly90aGV0aGFvaGQubmV0L3YvZm94c3BvcnQyLnBocAoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQmlnIFRlbiBOZXR3b3JrIDcyMEhEWy9DT0xPUl0KaHR0cDovL2JpZ3RlbjI0Ny5jZG5hay5iaWd0ZW5oZC5uZXVsaW9uLmNvbS9ubGRzL2J0bjJnby9idG5uZXR3b3JrL2FzL2xpdmUvYnRubmV0d29ya19oZF8zMDAwLm0zdTgKCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU5FU04gNzIwSERbL0NPTE9SXQpydG1wOi8vMjA5LjEzMy4yMDguMTc4L2FwcC94cml2bzc2cy1jaGFubmVsIGxpdmU9dHJ1ZSBzd2ZWZnk9dHJ1ZSBwYWdlVXJsPWh0dHA6Ly93d3cubXliZXN0c3RyZWFtcy5jb20vcC9teWJlc3RoZDQuaHRtbCB0aW1lb3V0PTE1CgojRVhUSU5GOi0xLFRTTiAxCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXRzbm4xJnZ3PTY0MCZ2aD00NTAKI0VYVElORjotMSxUU04gMgpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT10c25uMiZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsRm94IFNwb3J0cyAxCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWZveHNwMSZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsRm94IFNwb3J0cyAyCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWZveHNwMiZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsRVNQTiAyCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWVzbnAyMiZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsTUxCIE5FVFdPUksgTGl2ZQpydG1wOi8vMTA5LjEyMy43MC4zODo4MC9saXZlIHBsYXlwYXRoPW1sYnh4IHN3ZlVybD1odHRwOi8vcC5qd3BjZG4uY29tLzYvMTIvandwbGF5ZXIuZmxhc2guc3dmIGxpdmU9MSBwYWdlVXJsPWh0dHA6Ly9yZXl0di5jby9lbWJlZG8ucGhwP2xpdmU9bWxieHgmdnc9NjIwJnZoPTQ5MCB0b2tlbj0lWnJleShuS2FAI1ogdGltZW91dD0xMAoKI0VYVElORjowLEVTUE4KaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTQ4MDUxCgojRVhUSU5GOi0xLEVTUE4gSEQgVVMgCmh0dHA6Ly84MC44MC4xNjAuMTY4L2xpdmUvNi9saXZlLm0zdTgKCiNFWFRJTkY6MCxHb2xmIENoYW5uZWwKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY5MDI2CgojRVhUSU5GOjAsTkJBIFRWCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MTU2MgoKI0VYVElORjowLE5CQSBUViBPbmxpbmUKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY5MzEwCgojRVhUSU5GOjAsTkJDU04KaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY0MjMyCgojRVhUSU5GOjAsTkZMIE5ldHdvcmsKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcwMjk1CgojRVhUSU5GOi0xLCBQYWMgTmF0aW9uYWwgMTA4MCBIRApodHRwOi8veHJ4cy5uZXQvdmlkZW8vbGl2ZS1wMTJuZXR3LTQ3MjgubTN1OD9WZD91I2J0ITI1CiAKI0VYVElORjotMSwgUGFjIEFyaXpvbmEgMTA4MCBIRApodHRwOi8veHJ4cy5uZXQvdmlkZW8vbGl2ZS1wMTJhcml6LTQ3MjgubTN1OD9WZD91I2J0ITI1CiAKI0VYVElORjotMSwgUGFjIEJheSBBcmVhIDcyMCBIRApodHRwOi8veHJ4cy5uZXQvdmlkZW8vbGl2ZS1wMTJiYXlhLTIzMjgubTN1OD9WZD91I2J0ITI1CiAKI0VYVElORjotMSwgUGFjIExvcyBBbmdlbGVzIDEwODAgSEQKaHR0cDovL3hyeHMubmV0L3ZpZGVvL2xpdmUtcDEybG9zYS00NzI4Lm0zdTg/VmQ/dSNidCEyNQogCiNFWFRJTkY6LTEsIFBhYyBNb3VudGFpbiAxMDgwIEhECmh0dHA6Ly94cnhzLm5ldC92aWRlby9saXZlLXAxMm1vdW4tNDcyOC5tM3U4P1ZkP3UjYnQhMjUKIAojRVhUSU5GOi0xLFBBQy0xMiBOZXQuIChOYXRpb25hbCkKaHR0cDovL3hyeHMubmV0L3ZpZGVvL2xpdmUtcDEybmV0dy00NzI4Lm0zdTg/VmQ/dSNidCEyNQogCiNFWFRJTkY6LTEsUEFDLTEyIE5ldC4gKEFyaXpvbmEpCmh0dHA6Ly94cnhzLm5ldC92aWRlby9saXZlLXAxMmFyaXotNDcyOC5tM3U4P1ZkP3UjYnQhMjUKIAojRVhUSU5GOi0xLFBBQy0xMiBOZXQuIChCYXkgQXJlYSkKaHR0cDovL3hyeHMubmV0L3ZpZGVvL2xpdmUtcDEyYmF5YS00NzI4Lm0zdTg/VmQ/dSNidCEyNQogCiNFWFRJTkY6LTEsUEFDLTEyIE5ldC4gKExvcyBBbmdlbGVzKQpodHRwOi8veHJ4cy5uZXQvdmlkZW8vbGl2ZS1wMTJsb3NhLTQ3MjgubTN1OD9WZD91I2J0ITI1CiAKI0VYVElORjotMSxQQUMtMTIgTmV0LiAoTW91dGFpbikKaHR0cDovL3hyeHMubmV0L3ZpZGVvL2xpdmUtcDEybW91bi00NzI4Lm0zdTg/VmQ/dSNidCEyNQogCiNFWFRJTkY6LTEsUEFDLTEyIE5ldC4gKE9yZWdvbikKaHR0cDovL3hyeHMubmV0L3ZpZGVvL2xpdmUtcDEyb3JlZy00NzI4Lm0zdTg/VmQ/dSNidCEyNQogCiNFWFRJTkY6LTEsUEFDLTEyIE5ldC4gKFdhc2hpbmd0b24pCmh0dHA6Ly94cnhzLm5ldC92aWRlby9saXZlLXAxMndhc2gtNDcyOC5tM3U4P1ZkP3UjYnQhMjUKCiNFWFRJTkY6LTEsV1dFIE5ldHdvcmsKaHR0cDovLzM3LjQ4LjgzLjEzMToxOTM1L2xpdmUvd3dlZS9wbGF5bGlzdC5tM3U4P3dvd3phc2Vzc2lvbmlkPTIwNTY4OTU2NTMKCkBAQEBACgpHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIENBTkFEQSBTcG9ydHMgJiBUViAtLVsvQ09MT1JdCgojRVhUSU5GOi0xLENIQ0ggSGFtaWx0b24gSEQKcnRtcDovLzU0Ljg1LjE5Ny4yMToxOTM1L2xpdmUvbmV3cyBsaXZlPTEgdGltZW91dD0xNQojRVhUSU5GOi0xLEdsb2JhbCBUViBWYW5jb3V2ZXIgSEQKaHR0cDovL2xpbmsudGhlcGxhdGZvcm0uY29tL3MvZHRqc0VDL0VxQlBHWUxZNmZFeD9mZWVkPURFViUyMExpdmUlMjBTdHJlYW0lMjBGZWVkCiNFWFRJTkY6LTEsR2xvYmFsIFRWIFRvcm9udG8gSEQKaHR0cDovL2xpbmsudGhlcGxhdGZvcm0uY29tL3MvZHRqc0VDL2hkU0gzaXp0el9qXz9mZWVkPURFViUyMExpdmUlMjBTdHJlYW0lMjBGZWVkCiNFWFRJTkY6LTEsR2xvYmFsIFRWIEhhbGlmYXggSEQKaHR0cDovL2xpbmsudGhlcGxhdGZvcm0uY29tL3MvZHRqc0VDLzc3bDFLQV9HXzVQMT9mZWVkPURFViUyMExpdmUlMjBTdHJlYW0lMjBGZWVkCiNFWFRJTkY6LTEsQ0JDIE5ld3N3b3JsZApydG1wOi8vZC5jZG4ubmV3c2NoYXQudHYvZWRnZSBwbGF5cGF0aD1jYW5hZGFzX2xpdmUgc3dmVXJsPWh0dHA6Ly9tc25iY2xpdmUuZXUvcGxheWVyLnN3ZiBsaXZlPTEgbGl2ZT10cnVlIHBhZ2VVcmw9aHR0cDovL3d3dy5saXZlbmV3c2NoYXQuZXUvY2FuYWRhLwojRVhUSU5GOi0xLENCQyBOZXdzIENoYW5uZWwKcnRtcDovL2MuY2RuLm5ld3NjaGF0LnR2L2VkZ2UgcGxheXBhdGg9Y2JjX2xpdmUgc3dmVXJsPWh0dHA6Ly9uZXdzY2hhdC50di9wbGF5ZXIuc3dmIGxpdmU9MSBsaXZlPXRydWUgcGFnZVVybD1odHRwOi8vd3d3LmxpdmVuZXdzY2hhdC5ldS9jYW5hZGEvCiNFWFRJTkY6LTEsQ1RWIE5ld3MgKE5FVykKaHR0cDovL2NhcGkuOWM5bWVkaWEuY29tL2Rlc3RpbmF0aW9ucy9jdHZuZXdzX3dlYi9wbGF0Zm9ybXMvZGVza3RvcC9jb250ZW50cy82MDg5NDAvY29udGVudHBhY2thZ2VzLzY3ODU3NS9zdGFja3MvMTU2NjA1My9tYW5pZmVzdC5mNG0KI0VYVElORjotMSxDUCBOZXdzIGxpdmUgMSA3MjAgSEQKaHR0cDovL2Ftcy1scDEwLjljOW1lZGlhLmNvbS9oZHMtbGl2ZS9saXZlcGtnci9fZGVmaW5zdF8vbGl2ZU5ld3MvQ1AyNE5ld3MxOC5mNG0KI0VYVElORjotMSxDUDI0IE5ld3MgTGl2ZSAyIDcyMEhECmh0dHA6Ly9hbXMtbHA3LjljOW1lZGlhLmNvbS9oZHMtbGl2ZS9saXZlcGtnci9fZGVmaW5zdF8vbGl2ZU5ld3MvQ1AyNE5ld3MyOC5mNG0KI0VYVElORjotMSxIaXN0b3J5IChDYW5hZGEpIEhECmh0dHA6Ly9saW5rLnRoZXBsYXRmb3JtLmNvbS9zL2R0anNFQy9jaGpkWUp4S2I0NFY/bWFuaWZlc3Q9bTN1JmZlZWQ9SGlzdG9yeSUyMExpdmUlMjBTdHJlYW0lMjBGZWVkCiNFWFRJTkY6LTEsVFNDIExpdmUgSEQKaHR0cDovL3RzY3N0cmVhbWluZy1saC5ha2FtYWloZC5uZXQvaS9UU0NMaXZlU3RyZWFtaW5nXzFAOTEwMzEvaW5kZXhfM19hdi1wLm0zdTgKI0VYVElORjotMSxFdXJvU3BvcnQgSEQgKCBGUkVOQ0ggKQpodHRwOi8vZXNpb3NsaXZlNi1pLmFrYW1haWhkLm5ldC9obHMvbGl2ZS8yMDI4OTIvQUxfUF9FU1AxX0ZSX0ZSQS9wbGF5bGlzdC5tM3U4IAojRVhUSU5GOi0xLEZveCBTcG9ydHMgSEQKaHR0cDovL2ZveHNwb3J0c2hkaGxzLWxoLmFrYW1haWhkLm5ldC9pL2ZzbmV3c2hsc18wQDEzNjQyNy9pbmRleF8yMTI4X2F2LXAubTN1OAojRVhUSU5GOi0xLFNwb3J0c25ldCBPbmUKcnRtcDovLzEwOS4xMjMuNzAuMzg6ODAvbGl2ZSBwbGF5cGF0aD1zcG9ydHNuZXR3IHN3ZlVybD1odHRwOi8vcC5qd3BjZG4uY29tLzYvMTIvandwbGF5ZXIuZmxhc2guc3dmIGxpdmU9MSBwYWdlVXJsPWh0dHA6Ly9yZXl0di5jby9lbWJlZG8ucGhwP2xpdmU9c3BvcnRzbmV0dyZ2dz02MjAmdmg9NDkwIHRva2VuPSVacmV5KG5LYUAjWiB0aW1lb3V0PTEwCiNFWFRJTkY6LTEsU3BvcnRzbmV0IE9udGFyaW8KcnRtcDovLzMxLjIyMC4wLjE5NTo4MC9saXZlIHBsYXlwYXRoPXNubyBzd2ZVcmw9aHR0cDovL3AuandwY2RuLmNvbS82LzEyL2p3cGxheWVyLmZsYXNoLnN3ZiBsaXZlPTEgcGFnZVVybD1odHRwOi8vcmV5dHYuY28vZW1iZWRvLnBocD9saXZlPXNubyZ2dz02MjAmdmg9NDkwIHRva2VuPSVacmV5KG5LYUAjWiB0aW1lb3V0PTEwCiNFWFRJTkY6LTEsU3BvcnRzbmV0IFdvcmxkCnJ0bXA6Ly8xNzguMTguMzEuNTM6NDQzL2xpdmVyZXBlYXRlciBwbGF5cGF0aD0xOTEzMDQgc3dmVXJsPWh0dHA6Ly9iZXJuYXJkb3R2LmNsdWIvZnVja2luZ2NvcHkuc3dmIGxpdmU9MSBwYWdlVXJsPWh0dHA6Ly9iaWdnZXN0cGxheWVyLm1lL3N0cmVhbWNyLnBocD9pZD0xOTEzMDQmd2lkdGg9NjIwJmhlaWdodD00OTAgdG9rZW494oCqI+KAjmF0ZOKArCUjJFpIIHRpbWVvdXQ9MTAKI0VYVElORjotMSwzNjAgTm9ydGggKEFMQVNLQSkKaHR0cDovL3N0YXRlLmFrLnR2d21lZGlhLm5ldDoxOTM1L2t0b28tbGl2ZS9fZGVmaW5zdF8vMzYwbm9ydGgvcGxheWxpc3QubTN1OAojRVhUSU5GOi0xLFNwb3J0c25ldCAzNjAgNzIwIEhECmh0dHA6Ly9ubGRzMTg3LmNkbmFrLm5ldWxpb24uY29tL25sZHMvc3BvcnRzbmV0bm93L3NuXzM2MC9hcy9saXZlL3NuXzM2MF9oZF9pcGFkLm0zdTgKI0VYVElORjotMSxUU04gMQpydG1wOi8vOTMuMTU4LjIxNy4yMDI6ODAvbGl2ZSBwbGF5cGF0aD10eDEgc3dmVXJsPWh0dHA6Ly9wLmp3cGNkbi5jb20vNi8xMi9qd3BsYXllci5mbGFzaC5zd2YgbGl2ZT0xIGxpdmU9dHJ1ZSBwYWdlVXJsPWh0dHA6Ly9yZXl0di5jby9lbWJlZG8ucGhwP2xpdmU9dHgxJnZ3PTYyMCZ2aD00OTAgdG9rZW49JVpyZXkobkthQCNaIHRpbWVvdXQ9MTAKI0VYVElORjotMSxUU04gMgpydG1wOi8vMTc4LjE4LjMxLjU1OjQ0My9saXZlcmVwZWF0ZXIgcGxheXBhdGg9MTkxNzg0IHN3ZlVybD1odHRwOi8vYmlnZ2VzdHBsYXllci5jYWNoZWZseS5uZXQvZ29mdWNreW91cnNlbGYuc3dmIGxpdmU9MSBsaXZlPXRydWUgcGFnZVVybD1odHRwOi8vYmlnZ2VzdHBsYXllci5tZS9zdHJlYW1jci5waHA/aWQ9MTkxNzg0JndpZHRoPTYyMCZoZWlnaHQ9NDkwIHRva2VuPeKAqiPigI5hdGTigKwlIyRaSCB0aW1lb3V0PTEwCiNFWFRJTkY6LTEsQ0lDQyBDVFYgWW9ya3RvbgpodHRwOi8vMTk4LjE3OS4zMS4xOTgvbGl2ZS8yMDUzLmhpZ2guc3RyZWFtLzIwNTMuaGlnaC5zdHJlYW0vaW5kZXgubTN1OAojRVhUSU5GOi0xLENGUk4gQ1RWIEVkbW9udG9uCmh0dHA6Ly8xOTguMTc5LjMxLjE5OC9saXZlLzIwNTYuaGlnaC5zdHJlYW0vMjA1Ni5oaWdoLnN0cmVhbS9pbmRleC5tM3U4CiNFWFRJTkY6LTEsQ0tDSyBDVFYgUmVnaW5hCmh0dHA6Ly8xOTguMTc5LjMxLjE5OC9saXZlLzIwNTkuaGlnaC5zdHJlYW0vMjA1OS5oaWdoLnN0cmVhbS9pbmRleC5tM3U4CiNFWFRJTkY6LTEsQ0ZDTi01IENUViBMZXRoYnJpZGdlCmh0dHA6Ly8xOTguMTc5LjMxLjE5OC9saXZlLzIwNjIuaGlnaC5zdHJlYW0vMjA2Mi5oaWdoLnN0cmVhbS9pbmRleC5tM3U4CiNFWFRJTkY6LTEsVGhlIFNob3BwaW5nIENoYW5uZWwgSEQKaHR0cDovL3RzY3N0cmVhbWluZy1saC5ha2FtYWloZC5uZXQvaS9UU0NMaXZlU3RyZWFtaW5nXzFAOTEwMzEvaW5kZXhfM19hdi1wLm0zdTgKI0VYVElORjotMSxUaGUgU2hvcHBpbmcgQ2hhbm5lbCBIRApodHRwOi8vdHNjc3RyZWFtaW5nLWxoLmFrYW1haWhkLm5ldC9pL1RTQ0xpdmVTdHJlYW1pbmdfMUA5MTAzMS9pbmRleF8zX2F2LWIubTN1OAojRVhUSU5GOi0xLENQQUMgSEQKaHR0cDovL2JjbGl2ZXVuaXYtbGguYWthbWFpaGQubmV0L2kvY3BhYzFlbmcyMDE0XzAxQDExOTMzMC9pbmRleF8yMDAwX2F2LXAubTN1OAojRVhUSU5GOi0xLENQQUMgSEQKaHR0cDovL2JjbGl2ZXVuaXYtbGguYWthbWFpaGQubmV0L2kvY3BhYzFmbHIyMDE0XzAxQDUxMjMwL2luZGV4XzIwMDBfYXYtcC5tM3U4CiNFWFRJTkY6LTEsV2VhdGhlciBOZXR3b3JrIEhEIChmaXhlZCkKaHR0cDovL2Jjb3ZlbGl2ZWlvcy1pLmFrYW1haWhkLm5ldC9obHMvbGl2ZS8yMDc3MzcvMTk0MjIwMzQ1NTAwMS9uYXQvbWFzdGVyX0xheWVyNS5tM3U4IAojRVhUSU5GOi0xLENCQyBOZXdzCnJ0bXA6Ly9hLmNkbi5uZXdzY2hhdC50di9lZGdlIHBsYXlwYXRoPWNiY19saXZlIHN3ZlVybD1odHRwOi8vbXNuYmNsaXZlLmV1L3BsYXllci5zd2YgcGFnZVVybD1odHRwOi8vd3d3LmxpdmVuZXdzY2hhdC5ldS9jYW5hZGEvIGxpdmU9MSB0aW1lb3V0PTE1CiNFWFRJTkY6LTEsQVJURSAoRnJlbmNoKQpodHRwOi8vZnJsaXZlLmFydGVzdHJhcy5jc2hscy5sbGRucy5uZXQvYXJ0ZXN0cmFzL2NvbnRyaWIvZnJsaXZlL2ZybGl2ZV85MjUubTN1OAojRVhUSU5GOi0xLExDTiBOZXdzIChGcmVuY2gpCnJ0bXA6Ly9jcDM5NDE0LmxpdmUuZWRnZWZjcy5uZXQvbGl2ZS8gcGxheXBhdGg9bGNuMkA5NzU0IHN3ZlVybD1odHRwOi8vd3d3LmNlbnRyYWx0di5mci9qd3BsYXllci9qd3BsYXllci5mbGFzaC5zd2YgbGl2ZT0xIHBhZ2VVcmw9aHR0cDovL3d3dy5jZW50cmFsdHYuZnIvY2FuYWRhLXRlbGV2aXNpb24vbGNuLW5ld3MgdGltZW91dD0xNQojRVhUSU5GOi0xLEFyZ2VudCAoRnJlbmNoKQpydG1wOi8vY3AzOTQxNC5saXZlLmVkZ2VmY3MubmV0OjQ0My9saXZlIHBsYXlwYXRoPWFyZ2VudEA5NzUxIHN3ZlVybD1odHRwOi8vZnBkb3dubG9hZC5hZG9iZS5jb20vc3Ryb2JlL0ZsYXNoTWVkaWFQbGF5YmFja18xMDEuc3dmL1tbRFlOQU1JQ11dLzEgbGl2ZT0xIHBhZ2VVcmw9aHR0cDovL3RlbGUtZW4tZGlyZWN0LmJsb2dzcG90LmNvbS8yMDE0LzA1L2FyZ2VudC10di1jYW5hZGEtZW4tZGlyZWN0Lmh0bWwgdGltZW91dD0xNQojRVhUSU5GOi0xLENUViBOZXdzIExpdmUgSEQKaHR0cDovL2Ftcy1scDEwLjljOW1lZGlhLmNvbS9obHMtbGl2ZS9saXZlcGtnci9fZGVmaW5zdF8vbGl2ZU5ld3MvTmV3czE4Lm0zdTgKI0VYVElORjotMSxDVFYgTmV3cyBMaXZlIEhECmh0dHA6Ly9hbXMtbHA3LjljOW1lZGlhLmNvbS9obHMtbGl2ZS9saXZlcGtnci9fZGVmaW5zdF8vbGl2ZU5ld3MvTmV3czI4Lm0zdTgKCgpAQEBAQApHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIE5ld3MgLS1bL0NPTE9SXQojRVhUSU5GOi0xLFNreSBOZXdzCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXNreW5ld3Mmdnc9NjQwJnZoPTQ1MAojRVhUSU5GOi0xLENOQkMgTmV3cwpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1jbmJjJnZ3PTY0MCZ2aD00NTAKI0VYVElORjotMSxDTk4KaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9Y245OSZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsQkJDIE5ld3MKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9YmJjbmV3cyZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsQmxvb21iZXJnCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWJsb29tYmVyZyZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsRm94IE5ld3MKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9Zm94bmVlcyZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsQ05OIEV1cm9wZQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1jbjk5JnZ3PTY0MCZ2aD00NTAKCgpAQEBAQApHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIEtJRFMgLS1bL0NPTE9SXQojRVhUSU5GOi0xLENhcnRvb24gTmV0d29yawpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1jbjg4OCZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsRGlzbmV5IENoYW5uZWwKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9ZGlzbmV5JnZ3PTY0MCZ2aD00NTAKI0VYVElORjotMSxEaXNuZXkgSnIKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9ZGlzbmV5anImdnc9NjQwJnZoPTQ1MAojRVhUSU5GOi0xLE5pY2tlbG9kZW9uCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PW5pY2s2NjYmdnc9NjQwJnZoPTQ1MAojRVhUSU5GOi0xLE5pY2tlbG9kZW9uCmh0dHA6Ly96ZXJvY2FzdC50di9lbWJlZC5waHA/YT0xNCZpZD0md2lkdGg9NTgwJmhlaWdodD00MDAmYXV0b3N0YXJ0PXRydWUmc3RyZWNoPQojRVhUSU5GOi0xLE5pY2tlbG9kZW9uCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTYyMCZoZWlnaHQ9NDcwJmlkPWtpY25pY2smYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vdXNhY2hhbm5lbHMudHYvbmljay5waHAKCkBAQEBACkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gRE9DVU1FTlRBUklFUyAtLVsvQ09MT1JdCiNFWFRJTkY6LTEsQW5pbWFsIFBsYW5ldApodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1hbmltYWwmdnc9NjQwJnZoPTQ1MAojRVhUSU5GOi0xLERpc2NvdmVyeSBDaGFubmVsCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWRpc2NvdmVyeSZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsRGlzY292ZXJ5IElECmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWRpc2NvdmVyeWkmdnc9NjQwJnZoPTQ1MAojRVhUSU5GOi0xLERpc2NvdmVyeSBTY2llbmNlCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWRpc2NvdmVyeXMmdnc9NjQwJnZoPTQ1MAojRVhUSU5GOi0xLE5hdGlvbmFsIEdlb2dyYXBoaWMgQ2hhbm5lbApodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1uYXRnZW8mdnc9NjQwJnZoPTQ1MAojRVhUSU5GOi0xLE5hdCBHZW8gV2lsZApodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1uYXRnZW9oZCZ2dz02NDAmdmg9NDUwCgpAQEBAQApHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIE11c2ljIC0tWy9DT0xPUl0KCiNFWFRJTkY6LTEsSGVhcnQKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9aGVhcnQmdnc9NjQwJnZoPTQ1MAojRVhUSU5GOi0xLEZsYXZhCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWZsYXZhJnZ3PTY0MCZ2aD00NTAKI0VYVElORjotMSxNYWdpYwpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1tYWdpYyZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsTVRWIENsYXNzaWMKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9bXR2Y2xhc3NpYyZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsTVRWIEhpdHMKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9bXR2aGl0cyZ2dz02NDAmdmg9NDUwCiNFWFRJTkY6LTEsTVRWIE11c2ljCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PW10dm11c2ljJnZ3PTY0MCZ2aD00NTAKI0VYVElORjotMSxWYXVsdApodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT10aGV2YXVsdCZ2dz02NDAmdmg9NDUwCgpAQEBAQAoKR0VOUkUsIFtDT0xPUiBncmVlbl0tLSBPdGhlciBMaXZlIFNwb3J0cyAtLVsvQ09MT1JdCgojRVhUSU5GOi0xLERpZ2kgU3BvcnQgMQpydG1wOi8vMTk1LjE1NC4xNjIuMTU5OjgwL2xpdmVyZXBlYXRlciBwbGF5cGF0aD0xMjg3NDYgc3dmVXJsPWh0dHA6Ly9jZG4uZ29vZGNhc3QuY28vcGxheWVycy5zd2YgbGl2ZT10cnVlIHBhZ2VVcmw9aHR0cDovL2RlbHRhdHYucHcvIHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIHRpbWVvdXQ9MTUKI0VYVElORjotMSxESUdJIFNQT1JUIDEKcnRtcDovLzE5NS4xNTQuMTYyLjE1OTo4MC9saXZlcmVwZWF0ZXIgcGxheXBhdGg9MTI4NzQ2IHN3ZlVybD1odHRwOi8vY2RuLmdvb2RjYXN0LmNvL3BsYXllcnMuc3dmIGxpdmU9dHJ1ZSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBmbGFzaHZlcj1XSU4vMjAxOCwwLDAsMTYwIHRpbWVvdXQ9MTMgc3dmVmZ5PTEgIHBhZ2VVcmw9aHR0cDovL2RlbHRhdHYucHcvCiNFWFRJTkY6LTEsRElHSSBTUE9SVCAyCnJ0bXA6Ly8xOTUuMTU0LjE2Mi4xNTk6ODAvbGl2ZXJlcGVhdGVyIHBsYXlwYXRoPTEyODc0NyBzd2ZVcmw9aHR0cDovL2Nkbi5nb29kY2FzdC5jby9wbGF5ZXJzLnN3ZiBsaXZlPXRydWUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggZmxhc2h2ZXI9V0lOLzIwMTgsMCwwLDE2MCB0aW1lb3V0PTEzIHN3ZlZmeT0xICBwYWdlVXJsPWh0dHA6Ly9kZWx0YXR2LnB3LwojRVhUSU5GOi0xLERJR0kgU1BPUlQgMwpydG1wOi8vMTk1LjE1NC4xNjIuMTU5OjgwL2xpdmVyZXBlYXRlciBwbGF5cGF0aD0xMjg3NDggc3dmVXJsPWh0dHA6Ly9jZG4uZ29vZGNhc3QuY28vcGxheWVycy5zd2YgbGl2ZT10cnVlIHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGZsYXNodmVyPVdJTi8yMDE4LDAsMCwxNjAgdGltZW91dD0xMyBzd2ZWZnk9MSAgcGFnZVVybD1odHRwOi8vZGVsdGF0di5wdy8KCkBAQEBACkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gMjQvNyBTdHJlYW1zIC0tWy9DT0xPUl0KCiNFWFRJTkY6LTEgdHZnLWxvZ289Imh0dHBzOi8vcG1jZGVhZGxpbmUyLmZpbGVzLndvcmRwcmVzcy5jb20vMjAxNS8wMi9hZHZlbnR1cmUtdGltZS1zY3JlZW5zYXZlcl8xLnBuZz93PTMwMSZoPTIwMiZjcm9wPTEiLFtDT0xPUiBncmVlbl1BZHZlbnR1cmUgVGltZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvYWR2ZW50dXJlLXRpbWUKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQWx3YXlzIFN1bm55IGluIFBoaWxhZGVscGhpYSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvYWx3YXlzLXN1bm55LWluLXBoaWxhZGVscGhpYQojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1BbWVyaWNhbiBEYWQgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2FtZXJpY2FuLWRhZAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1BcmNoZXIgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2FyY2hlcgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1BcXVhIFRlZW4gSHVuZ2VyIEZvcmNlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9hcXVhLXRlZW4taHVuZ2VyLWZvcmNlCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJldHRlciBDYWxsIFNhdWwgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2JldHRlci1jYWxsLXNhdWwKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQm9icyBCdXJnZXJzIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9ib2JzLWJ1cmdlcnMKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQnJlYWtpbmcgQmFkIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9icmVha2luZy1iYWQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQnJpY2tsZWJlcnJ5IEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9icmlja2xlYmVycnkKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dR3JlZW5kYWxlIENvbGxlZ2UgKCBDb21tdW5pdHkgKSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZ3JlZW5kYWxlLWNvbGxlZ2UKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRmFtaWx5IEd1eSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZmFtaWx5LWd1eQojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1GdXR1cmFtYSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZnV0dXJhbWEKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dR2FtZSBPZiBUaHJvbmVzIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9nYW1lLW9mLXRocm9uZXMKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dSGVyb2VzIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9oZXJvZXMKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dSG93IEkgTWV0IFlvdXIgTW90aGVyIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9oaW15bQojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Ib3VzZSBNRCBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvaG91c2UtbWQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dSG91c2UgT2YgQ2FyZHMgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2hvdXNlLW9mLWNhcmRzCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUtpbmcgT2YgVGhlIEhpbGwgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2tpbmctb2YtdGhlLWhpbGwKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTG9zdCBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvbG9zdAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1NYWQgTWVuIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9tYWQtbWVuCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU1hbiBWcyBXaWxkIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9tYW4tdnMtd2lsZC1lbgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Qb2tlciBDaGFubmVsIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9wb2tlci1zdHJlYW0KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dUmljayBBbmQgTW9ydHkgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3JpY2stYW5kLW1vcnR5CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVNjcnVicyBNRCBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvc2NydWJzCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVNtYWxsdmlsbGUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3NtYWxsdmlsbGUKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dU29ucyBPZiBBbmFyY2h5IEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9zb25zLW9mLWFuYXJjaHkKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dU291dGggUGFyayBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvc291dGgtcGFyay1oZAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1TcGFydGFjdXMgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3NwYXJ0YWN1cwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1TdGFyZ2F0ZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvc3RhcmdhdGUKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dU3VwZXJuYXR1cmFsIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9zdXBlcm5hdHVyYWwKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVGhlIDEwMCBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdGhlLTEwMAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1UaGUgQmlnIEJhbmcgVGhlb3J5IEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS90aGUtYmlnLWJhbmctdGhlb3J5CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVRoZSBDbGV2ZWxhbmQgU2hvdyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdGhlLWNsZXZlbGFuZC1zaG93CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVRoZSBPZmZpY2UgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3RoZS1vZmZpY2UKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVGhlIFNpbXBzb25zIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9zaW1wc29ucy1oZAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1UaGUgV2Fsa2luZyBEZWFkIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS90aGUtd2Fsa2luZy1kZWFkCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVRyaXAgVGFuayBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdHJpcHRhbmsKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dV2VlZHMgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3dlZWRzCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVdvcmthaG9saWNzIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS93b3JrYWhvbGljcwojRVhUSU5GOi0xLDMwIFJvY2sKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9MzByb2NrJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0CiNFWFRJTkY6LTEsQWxpZW5zICYgVWZvJ3MKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vYWxpZW5zYW5kdWZvcz9hbGllbnNhbmR1Zm9zCiNFWFRJTkY6LTEsQWR2ZW50dXJlIFRpbWUKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19hdD9sbXNob3dzX2F0CiNFWFRJTkY6LTEsQXJyZXN0ZWQgRGV2ZWxvcG1lbnQgCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWFycmVzdGVkJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0CiNFWFRJTkY6LTEsQmVhc3QgV2FycwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzIwMzkmYXV0b3BsYXk9dHJ1ZQojRVhUSU5GOi0xLEdhbWUgT2YgVGhyb25lcwpodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1nb3RpYiZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdAojRVhUSU5GOi0xLENodWNrIApodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1jaHVjayZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdAojRVhUSU5GOi0xLENyaW1lIENlbnRyYWwKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vY3JpbWVjZW50cmFsP2xtc2hvd3NfbmdiYmMKI0VYVElORjotMSxEZXh0ZXIgCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWRleHRlciZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdAojRVhUSU5GOi0xLERpc2NvdmVyeSBIb3VzZQpodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9kaXNjb3Zlcnlob3VzZT9kaXNjb3Zlcnlob3VzZQojRVhUSU5GOi0xLERyYWdvbkJhbGwgR1QKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTUzMTA1JmF1dG9wbGF5PXRydWUKI0VYVElORjotMSxEciBXaG8gCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWRyd2hvJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0CiNFWFRJTkY6LTEsRmFtaWx5IEd1eQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NTUxODImYXV0b3BsYXk9dHJ1ZQojRVhUSU5GOi0xLEZyaWVuZHMgCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWZyaWVuZHMmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQKI0VYVElORjotMSxGcmluZ2UgCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWZyaW5nZSZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdAojRVhUSU5GOi0xLEZsaW50c3RvbmVzIApodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1mbGludHN0b25lcyZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdAojRVhUSU5GOi0xLEhhdW50ZWQgSG91c2UKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vaGF1bnRlZGhvdXNlP2hhdW50ZWRob3VzZQojRVhUSU5GOi0xLEhvbWUgSW1wcm92ZW1lbnRzCmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2xtc2hvd3NfaGk/bG1zaG93c19oaQojRVhUSU5GOi0xLEhvdXNlCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWhvdXNlJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0CiNFWFRJTkY6LTEsSGFyZGNvcmUgUGF3bi9QYXduIFN0YXJzL1N0b3JhZ2UgV2Fycy9GYXN0IE4gTG91ZApodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX2hwcz9sbXNob3dzX2hwcwojRVhUSU5GOi0xLEltcHJhY3RpY2FsIEpva2VycwpodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX2lqP2xtc2hvd3NfaWoKI0VYVElORjotMSxKYWNraWUgQ2hhbiBNb3ZpZXMgKCAxOTkxLTIwMDggKQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9MzcwMDImYXV0b3BsYXk9dHJ1ZQojRVhUSU5GOi0xLExhdyAmIE9yZGVyCmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2dldHlvdXJkb2Nzb2ZmP2dldHlvdXJkb2Nzb2ZmCiNFWFRJTkY6LTEsTG9vbmV5IFRvb25zCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWxvb25leSZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdAojRVhUSU5GOi0xLE1hbiBXb21hbiBXaWxkLyBTdXJ2aXZvcm1hbgpodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX213cz9sbXNob3dzX213cwojRVhUSU5GOi0xLE1hcnJpZWQgV2l0aCBDaGlsZHJlbgpodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX213Yz9sbXNob3dzX213YwojRVhUSU5GOi0xLE5hdGlvbmFsIEdlb2dyYXBoaWMvIEJCQyBOYXR1cmUKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19uZ2JiYz9sbXNob3dzX25nYmJjCiNFWFRJTkY6LTEsUmVndWxhciBTaG93Cmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2xtc2hvd3NfcnM/bG1zaG93c19ycwojRVhUSU5GOi0xLFNlaW5maWVsZApodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1zZWluZmllbGQmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQKI0VYVElORjotMSxTY3J1YnMKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9c2NydWJzJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0CiNFWFRJTkY6LTEsU3RhcmdhdGUgU0cxCmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL3NnMWdhdGU/c2cxZ2F0ZQojRVhUSU5GOi0xLFN1aXRzCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPXN1aXRzJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0CiNFWFRJTkY6LTEsU291dGggUGFyawpodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1zb3V0aHBhcmsmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQKI0VYVElORjotMSxUaGUgS2luZyBPZiBRdWVlbnMKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19rb3E/bG1zaG93c19rb3EKI0VYVElORjotMSxUaGUgS2luZyBPZiBRdWVlbnMKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTM4MjEzJmF1dG9wbGF5PXRydWUKI0VYVElORjotMSxUaGUgU2ltcHNvbnMKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9c2ltcHNvbnMmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQKI0VYVElORjotMSxUaGUgQmlnIEJhbmcgVGhlb3J5Cmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWJpZ2JhbmcmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQKI0VYVElORjotMSxUaGUgQnVncyBCdW5ueSBTaG93Cmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MjA0MCZhdXRvcGxheT10cnVlCiNFWFRJTkY6LTEsVG9tICYgSmVycnkKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcyMDM4JmF1dG9wbGF5PXRydWUKI0VYVElORjotMSxUb20gJiBKZXJyeSAoIG1pZ2h0IGNoYW5nZSB0byBvdGhlciBjYXJ0b29ucykKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9dG9tamVycnkmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQKI0VYVElORjotMSxTdXByYW5vcwpodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1zb3ByYW5vcyZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdAoKCkBAQEBACgpHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIEZyZW5jaCBMaXZlIFR2IC0tWy9DT0xPUl0KCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXTYgVGVyIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS82dGVyCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUFydGUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2FydGUKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQmVpbiBGcmFuY2UgMSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvYmVpbi1mcmFuY2UtMQojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CZWluIEZyYW5jZSAyIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9iZWluLWZyYW5jZS0yCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJGTSBUdiBOZXdzIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9iZm0tdHYKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQ2FtZXJhIENhZmUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2NhbWVyYS1jYWZlCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUNhbmFsKyBTcGVjaWFsIEludmVzdGlnYXRpb24gSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3NwZWNpYWwtaW52ZXN0aWdhdGlvbgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1EMTcgTGl2ZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZDE3CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUQ4IExpdmUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2Q4LWxpdmUKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRGl2ZXJzIERvY3MgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2RpdmVycy1kb2NzCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXURyYWdvbmJhbGwtWiBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZHJhZ29uYmFsbC1kYnoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRGlzY292ZXJ5IENoYW5uZWwgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2Rpc2NvdmVyeQojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1FdXJvTmV3cyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZXVyb25ld3MKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRXVyb1Nwb3J0IEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9ldXJvc3BvcnQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRXVyb1Nwb3J0IDIgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2V1cm9zcG9ydC0yCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUZpbmFuY2UgRXQgTW9uZGlhbGlzbWUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2ZpbmFuY2UtZXQtbW9uZGlhbGlzbWUKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRnJhbmNlIDI0IExpdmUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2ZyYW5jZS0yNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1GcmFuY2UgMCBMaXZlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9mcmFuY2UtbwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1GcmFuY2UgMiBMaXZlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9mcmFuY2UtMi1kaXJlY3QKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRnJhbmNlIDIgTGl2ZSBIRCAoQUxUKVsvQ09MT1JdCmh0dHA6Ly9zdHJlYW0uc3RyZWFtaW5nLWh1Yi5jb206ODA4MC9zaW11bGNhc3QvRnJhbmNlXzIvaGxzX3YxL0ZyYW5jZV8yLWF1ZGlvX0FBQ0xfZnJhXzcwMDAwXzMxNT03MDAwMC12aWRlbz0xMTgwMDAubTN1OHxYLUZvcndhcmRlZC1Gb3I9NS4xNTMuMTI3LjI1NQojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1GcmFuY2UgMyBMaXZlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9mcmFuY2UtMy1saXZlCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUZyYW5jZSAzIExpdmUgSEQgKEFMVClbL0NPTE9SXQpodHRwOi8vc3RyZWFtLnN0cmVhbWluZy1odWIuY29tOjgwODAvc2ltdWxjYXN0L0ZyYW5jZV8zL2hsc192MS9GcmFuY2VfMy1hdWRpb19BQUNMX2ZyYV83MDAwMF8zMjU9NzAwMDAtdmlkZW89MTE4MDAwLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTUuMTUzLjEyNy4yNTUKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRnJhbmNlIDQgTGl2ZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZnJhbmNlLTQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRnJhbmNlIDUgTGl2ZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZnJhbmNlLTUtbGl2ZQojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1IaXN0b2lyZSBMaXZlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9oaXN0b2lyZQojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1ISEggSU5Uw4lHUkFMRSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvaC1pbnRlZ3JhbGUKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dSSBUw4lMw4kgTmV3cyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvaS10ZWxlCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUogaXJhaSBkb3JtaXIgY2hleiB2b3VzIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9qLWlyYWktZG9ybWlyLWNoZXotdm91cwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1LYWFtZWxvdHQgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2thYW1lbG90dAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1MJ8OpcXVpcGUgMjEgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2wtZXF1aXBlLTIxCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUwnIFVuaXZlcnMgZXQgc2VzIE15c3TDqHJlcyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvbC11bml2ZXJzLWV0LXNlcy1teXN0ZXJlcwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1MQ1AgSERbL0NPTE9SXQpodHRwOi8vc3RyZWFtLTA5LnZ0eS5kYWlseW1vdGlvbi5jb20vMTUvZG0vMS94amkzcXkvbGl2ZS5pc21sL2xpdmUuZjRtCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU02IExpdmUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L202LWxpdmUKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTTYgTXVzaWMgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L202LW11c2ljCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU1hbiBWcyBXaWxkIEZSIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9tYW4tdnMtd2lsZAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1OYXR1cmUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L25hdHVyZS1oZAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1OYXRpb25hbCBnZW9ncmFwaGljIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9uYXRpb25hbC1nZW9ncmFwaGljCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU5hdCBnZW8gV2lsZCBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvbmF0LWdlby13aWxkCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU5SSjEyIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9ucmotMTIKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dUGxhbmV0ZSArIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9wbGFuZXRlLXBsdXMKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dUGxhbmV0ZSArIFRoYWxhc3NhIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9wbGFuZXRlLXRoYWxhc3NhCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVJNQyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvcm1jCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVJUTDkgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3J0bDkKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dU29kYSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvc29kYQojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Tb3V0aCBQYXJrIEZSIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9zb3V0aC1wYXJrLWZyCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVN0YXJnYXRlIFNnMSBTZ2EgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3N0YXJnYXRlLXNnMS1zZ2EKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVEYxIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS90ZjEKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVGhhdCA3MCdzIFNob3cgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LzcwLXNob3cKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVE1DIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS90bWMKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVFY1IEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS90djUtaGQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVHYgUmVwbGF5IEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS90di1yZXBsYXkKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVHYgU2NpZW5zZXMgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3R2LXNjaWVuY2VzCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVVOREVSR1JPT1YgQ0hBTk5FTCBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdW5kZXJncm9vdi1taWtlZGFzaWxrCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVVuIGdhcnMgVW5lIGZpbGxlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS91bi1nYXJzLXVuZS1maWxsZQojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1XOSBMaXZlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS93OS1saXZlCgojRVhUSU5GOi0xLENhbmFsKyBDaW5lbWEKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcwNzMxJmF1dG9wbGF5PXRydWUKI0VYVElORjotMSxDYW5hbCsgU3BvcnRzCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MDQ2NyZhdXRvcGxheT10cnVlCiNFWFRJTkY6LTEsQ2FuYWwrIEZhbWlseQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzE4MzEmYXV0b3BsYXk9dHJ1ZQojRVhUSU5GOi0xLERpc2NvdmVyeSBDaGFubmVsIEZyYW5jZQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzAyMTImYXV0b3BsYXk9dHJ1ZQojRVhUSU5GOi0xLFN5RnkKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcwNzMwJmF1dG9wbGF5PXRydWUKCkBAQEBACkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gU3BhbmlzaCBMaXZlIFR2IC0tWy9DT0xPUl0KI0VYVElORjotMSxDaW5lCmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2xtc2hvd3NfaGk/Y2luZW11bmRvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUxhIFNleHRhWy9DT0xPUl0KaHR0cDovL2EzbGl2ZS1saC5ha2FtYWloZC5uZXQvaS9sYXNleHRhXzFAMzUyNzIvbWFzdGVyLm0zdTgKQEBAQEA=