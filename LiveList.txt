77u/R0VOUkUsIFtDT0xPUiB5ZWxsb3ddKioqKioqKioqIFRISVMgTElTVCBJUyBTVE9MRU4gRlJPTSBWRFVCVDI1ICoqKioqKioqWy9DT0xPUl0KQEBAQEAKR0VOUkUsIFtDT0xPUiBncmVlbl0tLSBMaXZlIFNwb3J0cyAtLVsvQ09MT1JdCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU5CQ1NOIEhEWy9DT0xPUl0gW0NPTE9SIHllbGxvd10gMTA4MHAgTk8gVlBOIE5FRURFRCBbL0NPTE9SXQpodHRwOi8vdHZlbmJjc24taS5Ba2FtYWloZC5uZXQvaGxzL2xpdmUvMjE4MjM1L25iY3NueC80Mjk2ay9wcm9nLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTY2LjE3MS4yMjguMTAyCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU5CQ1NOIEhEWy9DT0xPUl0gW0NPTE9SIHllbGxvd10gNzIwcCBOTyBWUE4gTkVFREVEIFsvQ09MT1JdCmh0dHA6Ly90dmVuYmNzbi1pLkFrYW1haWhkLm5ldC9obHMvbGl2ZS8yMTgyMzUvbmJjc254LzI1OTZrL3Byb2cubTN1OHxYLUZvcndhcmRlZC1Gb3I9NjYuMTcxLjIyOC4xMDIKI0VYVElORjotMSxOQkNTTiBTRFtDT0xPUiB5ZWxsb3ddIE5PIFZQTiBORUVERUQgWy9DT0xPUl0KaHR0cDovL3R2ZW5iY3NuLWkuQWthbWFpaGQubmV0L2hscy9saXZlLzIxODIzNS9uYmNzbngvMTg5NmsvcHJvZy5tM3U4fFgtRm9yd2FyZGVkLUZvcj02Ni4xNzEuMjI4LjEwMgoKCkBAQEBACkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gSXJlbGFuZCBMaXZlIFR2IC0tWy9DT0xPUl0KCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1SVEUgSnIgSERbL0NPTE9SXSAoV09STERXSURFKQpodHRwOi8vd3d3LnJ0ZS5pZS9tYW5pZmVzdHMvcnN3NS5mNG18WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1SVEUgTkVXUyBIRFsvQ09MT1JdKFdPUkxEV0lERSkKaHR0cDovL3d3dy5ydGUuaWUvbWFuaWZlc3RzL25ld3Nub3cuZjRtfFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxSVEUgMQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1ydGUxMTEmdnc9NzIwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsUlRFIDIKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9cnRlMjIyJnZ3PTcyMCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLFRWMwpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT10djM3JnZ3PTcyMCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLFRHNCBJcmVsYW5kCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXRnNDcmdnc9NzIwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsVFYzIChXT1JMRFdJREUpCnJ0bXBlOi8vZm1sLjUwMTEuZWRnZWNhc3RjZG4ubmV0LzIwNTAxMS9saXZlIHBsYXlwYXRoPW1wNDp0djMubXA0IGFwcD0yMDUwMTEvbGl2ZSBwYWdlVVJMPWh0dHA6Ly93d3cudHYzLmllLzNwbGF5ZXIvbGl2ZS8gc3dmVXJsPWh0dHA6Ly93d3cudHYzLmllL3BsYXllci9hc3NldHMvZmxvd3BsYXllci9mbGFzaC9mbG93cGxheWVyLmNvbW1lcmNpYWwtMy4yLjcuc3dmIHN3ZlZmeT10cnVlIGxpdmU9dHJ1ZSB0aW1lb3V0PTEwCiNFWFRJTkY6LTEsVEc0Cmh0dHA6Ly9jc20tZS5jZHMxLnlvc3BhY2UuY29tL2NzbS9saXZlLzc0MjQ2NTQwLm0zdTgKI0VYVElORjotMSxURzQKaHR0cDovL3RnNC1saC5ha2FtYWloZC5uZXQvSWRpQmVvMV8xMjAwX3RnNEAxMTg2OTM/dmlkZW9JZD0yNTM5MDk4NDk2MDAxJmxpbmVVcElkPSZwdWJJZD0xMjkwODYyNTY3MDAxJnBsYXllcklkPTEzNjQxMzgwNTAwMDEmYWZmaWxpYXRlSWQ9JnY9My40LjAmZnA9V0lOJTIwMTcsMCwwLDE4OCZyPU5UUEVXJmc9R01YV0VFWVpPVFFLCgojRVhUSU5GOi0xLFJURSBPbmUKaHR0cDovLzIxMi4yNTAuNDYuMzU6NDI1Mi9ieXNpZC85NjAxIAoKI0VYVElORjotMSxSVEUgVHdvCmh0dHA6Ly8yMTIuMjUwLjQ2LjM1OjQyNTIvYnlzaWQvOTYwMiAKCiNFWFRJTkY6LTEsVFYzCmh0dHA6Ly8yMTIuMjUwLjQ2LjM1OjQyNTIvYnlzaWQvOTYwNSAKCiNFWFRJTkY6LTEsVEc0Cmh0dHA6Ly8yMTIuMjUwLjQ2LjM1OjQyNTIvYnlzaWQvOTYwMyAKCiNFWFRJTkY6LTEsUlRFIEpyLgpodHRwOi8vMjEyLjI1MC40Ni4zNTo0MjUyL2J5c2lkLzk2MDYgCgpAQEBAQApHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIFVLIExpdmUgVHYgLS1bL0NPTE9SXQoKI0VYVElORjotMSxBbGliaQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1hbGliaSZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxCQkMgTmV3cwpodHRwOi8vbGl2ZTMwNC5lZGdlLmZpbG1vbi5jb20vbGl2ZS8yNy5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmVmMzAzOGM3ODE3NDQ5MzZmYWE1NjhmYjIzZjg3ZGNiNjU5NmE5ZjUyZTc1ZjE1MTRmOGUwN2E1NTBkZWQwYmNlMmQxYWRhMTdmNDJmNWYxODczNWQ1MTE3Y2Q0MWQ3OWUxOWNlNmQ2ODRkNmViYTc5MWQ3M2M4NDVhOWE1OGQ2NmE1ZjEyZDBkNmRiNmIwOWY1MmM4Y2NkODIwMTYwN2FiNmYwYWM2YWNlZDUxMGZmYTJiM2FhM2M5YWNjZjM2MDFjYmNlOGMzODRmMDlkMzdlZjQ4MDU1NTY0NjNhZjg3NThiYmEwY2UwNmVlZmE2NzZmZGJjOTA3OTBlNTY3M2Q5NjIwNGUwZTRjMGRiZGJkYjU0YmRmMWY3NTQwYzBlNTAKI0VYVElORjotMSxCQkMgMSBOb3J0aCBJcmVsYW5kCmh0dHA6Ly9saXZlMzA0LmVkZ2UuZmlsbW9uLmNvbS9saXZlLzM2MS5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmUzOGFlYTEzYjEwNTJhOTczNjNmOTEwYmRjZTI1N2NmN2UxNTVkNTNhZjhiZDc3YjA4ZWY4M2Q3M2M2MzNjZjNhMjYxODg4MzY0NWM3ZDc5ZjAzYTEwNDE3YTMzZTEyYmY3OWUwMjczZjNmOWEzNDU5MzUwMTg3MGI5MGMwNDgxMTRjNGIyNDVlMzNmOTIwZmFmNGUwZjUwMWQ0MzNhNDIzZjYzOTQ5ZWNhZjI0YmZiMTA3OWViNmJiNDU1ZjU3YjQxZDhkZmIwZGY5NDhiOTVkNTUyOTYwYTE0ZjM2MzcyMzBkZWI0ZjczZGYxNjA5NzE2NjIzYmRkZTRlNzUzNjdmNjlhMmY0NGI5MTFkNmQ0ZWJjZWViNDk1OTk0YTAxY2YKI0VYVElORjotMSxCQkMgT25lIFNjb3RsYW5kCmh0dHA6Ly8yMDQuMTA3LjI3LjIzMy9saXZlLzMxNjYuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlNzdjOWZhNDdiODZhYjA0Y2Q2MGY2M2Y1MjdkMWY0YzNiNjdjY2NhODlmMmU0ZmE2MjUzMGRhYTQzN2I2Y2M5ZWRlZmYzNDBiM2EzYjg0NWJhYTExNWMzYjVlMDJkYmMyMmNhOGVhOTYxYmQ1YWEzM2QzYzk1Y2YxMmNkNzE3YTk5Mzg3ZmJiMDg2ZDk5ZjBlMzg1Mzg3OGEwNTQzNzRjMmVhZTQyM2Y0MDcxOTQ2NDMwMGMyOWE0NWJhODJiZDIyMjg5YjQxMTZlMWRhOTY5YmRhYjQwZmM2M2M1YTkyNjQzNGZkZjBjZTM0MzE0NTZjMWJmYWQzYjcyYmQ5YTQ1YTY2Mjg4OGYzMjJhMGYzZmY5ZDY1YzBjYWI1OTdlOTc5CiNFWFRJTkY6LTEsQkJDIE9uZQpodHRwOi8vMTk4LjE3OS4zMC4xMDkvbGl2ZS8xNC5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmVmOTJhYThjMzJjNWI3ZGUxMTZjOTk0MGI0N2MyZGQzM2E4MDcxMmUxYjhmMTgyMTQ1MDM0NDg3ZmE2NzE1N2M4ZGMzZTA2NjQ2YjViYzRkOWIzMGJlNmQwMGM4MjlmNTEzNDViNGExNjkzYjJiYzc5ZGE3OGExMmViOTkyNDlkMDhjZjQzZDU2MjExNDgxMGVlMzFlZjI3NGRjMjNhNTg3ZGQ3ZjZiNWU3YmM2OTFjZDk0MTk0Mjg4ZTk4ZTI2Y2Q3ODZmNTM4NDIyOGZjZjczYjBiYjkyNDEwN2RjOTllMTAxNGMwNjFjODM4MTExMGM1YWJhYzY1NjZjYjFkOWYyMGRjMTIzZDNhZGMzMTZhYWNlMjY0MzA2MTcyNTFlM2QKI0VYVElORjotMSxCQkMgVHdvCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWJiYzI0NDgmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsQkJDIFR3bwpodHRwOi8vMTk4LjE3OS4zMC4xMDkvbGl2ZS8yNS5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmViYzRlMTNlMDNmZjllN2Q2YzlhNjY2YTU5YWQ4NTA0ZmE1ZTNhMDkzOTBlNDk5MGZlNzIzYmZmMWE0NzEwMDEwNzYzZjNiYTU3MDUwZWYwMjJjMWY3ZjAzZmRiZTgyMjM3ODA5YTViNjlhOWNjOTJlYmYyNGI3N2E5Y2E5MTMxNjY2Y2EyNjgyNTFjYTI0YmZlNGJlMzNiYjI2NWUzNGYxNzc0ZTMyOThlNTg0NmRlMTY0N2MyYTFmMTg4YjY1MDVlYjY3ZDljZDEzYzAyNzEzMzk1Y2U0MTFkOWZjYzllZWIxZTBjM2FkMWJjZjZmYzhkOWFhYzg0MjM0YTViNWM2NjQ3NDc3MGI1MmFjMDgwNTkxMjFmYzA4YWFlZThiMmUKI0VYVElORjotMSxJVFYxCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWl0djEzNTUyJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLElUVjEKaHR0cDovLzE5OC4xNzkuMzAuMTA4L2xpdmUvMTEuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlODU2YzE0Zjk4OGJhOThjOTJkMzc4YjZjNjEwNzlkNzJlZjFhZDI3MmM3M2Q0MWEwMWVlZjhmMjI2NGJjMzczMjFhODg1YzRiZmE1ZWMzMGVjNjMzNjg3Yzg3YTg3MTVlZWYzNmJkZjU3MTMzMDA0YWU2MWZmZmFhMWFmNDVhYzE5NzNjMzQ4ODViMGJiMTVkZTI5ZTY0MDk1MTY0YzFmNTZjODBhZWU0ZTE0ZGU3NzhmNjUzYTQ3M2I5ZTg5ZWJhMGY2MmJhYmI4MjBkZDY0YTc0MGMwNzIzNWQ5Y2M1Zjg5ZDBiOGZjYjMyNzdjYTY3NGFmNjc4MWU0MDg4N2ZiODc4NTE4NGVjNWEzMjAxMDQwZjc1N2NjZTk1YjNkMWM4CiNFWFRJTkY6LTEsQ2hhbm5lbDQKaHR0cDovLzE5OC4xNzkuMzAuMTA4L2xpdmUvMi5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmUwMzEyNzc3ZGZhZmM2ZDY0NWQyNWZiODI0YjZiOTJhNjdmODY3NzY5OGQ4OGViNzExZGMxMWQ2M2U1Njk4MWNmZGRiNjJiYjQyMDY3YzA3MjYwZDI3OGIwZGVmYTRjN2I4YTlmNTgwMjExYzhkZTcxYTI1NTlmNzBiODE3YjBiZTQ4ZjVkZjlmYWRhMWQ1NzM1MTUwZjg5Mzg0OGNmYzA0NjczYWNjNmVmNzk0ZGRlYTEyZmI3NzY0NzhmZGNiZTVhZmZmYWE5OTk4NGVhMDIwYTY3MmYzMDRhYTNhMzYxMWY4MTRkNjg2YjM1OWJiMmFhZGE4MjRlYjdmZGE1NTM4NDY4ZGRkZWQ2ZTVkYjZlZWNjMDM4ZDYyYTZjYWFlOWQKI0VYVElORjotMSxDaGFubmVsNQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1maXZlNCZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxDaGFubmVsNQpodHRwOi8vMTk4LjE3OS4zMC4xMDgvbGl2ZS8yMi5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmUwMzEyNzc3ZGZhZmM2ZDY0ZGE0ZTRlOTIwNTk4NTFiZTYzOTIzMjU4NjA1OTEwODgxNDM2YTk5ZTg1YWRmYzZjNjI1NDdiNWFiZWU2YmM4ZmExMDZmZDdkYTM3YWYwYzhkZWIxYTVkM2Y4Y2Q3ZTZjMWYwNjc4NDNhZmQyMTk2MzVhZDMzOTY5NTM1MTNkNGUyOWYzYmUyZGMyZjY5ZGQ3MjFkN2Y5Zjc0YmFlN2E0M2NlODcyMjhiMDcwZTg4YjI5MGI5ZDI1OWFlMjM5NGE2ZTliYmI2ZTE1ZmQzODE2MDQ1MzhhMTIxNzc2YjQ5ODE4OGRiODUxYzg2NmUwZmExMzE2ZmE4OTI4YThmNTkwNjczNjJkY2EyNzE1MDIyMjIKI0VYVElORjotMSxEYXZlCmh0dHA6Ly9saXZlMzA4LmVkZ2UuZmlsbW9uLmNvbS9saXZlLzM3MC5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmVkNjlhNDc1MGU1NzUyNjY3ODAzZjllYTk3ZTc2ZTM1ZjgyMGNkN2VkNmI1NmQzYTQ5YmQzY2M3ZjZlYzdmYzZjNDJiZGJkYzY1YzA1ODk0YmNiZjIzNjEyMGI1NWRjZWZjMDk5N2JkZDJiYmNlNDRiMmM3NGEzODM0YjgxMWE2MGFjMGI3NDU4YzM5Mzg5YjU0YTQ2MzlhNWZmZTBkN2ExNzVjNmVlYTQwYWE5YmY5Zjc4NDcyYjc0YmMyYTAwYWUwZDEyYmMwOGVmNWVkMzAyZmFhYTc3NDM1MTMxMDZiZWVkYjcyOTdmZTU5YWRiN2I5MDA2YTZiNDlmMmMzYmE3YjNlNzliZWUyNmE3MzJlY2Y2NjJkMzgwMDM5NGQ4M2QKI0VYVElORjotMSxTIE9uZQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1za3kxdWsmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsUyBUd28KaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9c2t5MnVrJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLFMgQXJ0cyAxCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXNreWFydHMxJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLFMgQXRsYW50aWMKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9c2t5YXRsYW50aWMmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsUyBMaXZpbmcKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9c2t5bGl2aW5nJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLENvbWVkeSBDZW50cmFsCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWNjNjk4JnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLFBpY2tUVgpodHRwOi8vbGl2ZTMwOC5lZGdlLmZpbG1vbi5jb20vbGl2ZS8zNzEuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlNTkyZGQ0ZmM1NWUwY2ZlZDJjMTdmZjNkOWMzYzllNjBkNDdiM2Y4MWI1ZjRkOTI5ZjUxZmQyYTFlNWE5Y2FlM2JjOGVjMWI0Y2Y2NTJmYmEzYmVlNGNlYzZmMzg5ZDE3YzFhYTcwMjZmNjZlNmY5YTI5NWYzYTE3MDc5YTA3ODQyNGY1ZmEwYThkMzRhZjJmYTVhZTIxNzBlMzllMzU4OTkyMmQ1ODc3MDU1MDgxNjYwODQ4MTYxOGZjMmY3NDZjNWYzZDBmY2IxOTNjMDBhY2JjZWNmZTg3YWQyMTk5ZDk5YWYwOGJhOTY0YTBhNjExZTc2Zjk2MmMzM2RjNWEwMmNmYmQ2MmNkNGViNjRkYjVmNTMzNWFkNDdiY2MxMjdmCiNFWFRJTkY6LTEsUmVhbGx5Cmh0dHA6Ly9saXZlMzA4LmVkZ2UuZmlsbW9uLmNvbS9saXZlLzM3Mi5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmVkNmY5ZmVmNGYwNzE1MDAyZmQwZjdjNThhNjcwOWFmOWQ4NWZhNjUwYmYwYTBkOTAyMjExMjlmMjViM2JmYTkxNjVmYjNiYWI4MmU1NTNiYWEyYTJmYTUxZmZhOWMyMTIwZDUzY2NjMTYyNmUyYmMyNWMwMzMzOWIyOTUzNmYwN2JjNTIzNjE0ZDUzNzFiODM2MWEyZmU2OWRlNGQwNDBmYzVmNDZjYTg2MWZlMDBkM2I3Y2Y0MDhlNzM3M2Q3YzY2NGYwOWE4Y2VmOTU3YmI5ZDI4OTkyZTFlN2QxOGQyODg1ZGRhMTJlMWZlNDFhNDhkMjU4YzMzMTI5ZWY4Y2Y5NjI2YWY5YTYwYWY4YmE5MjE4MTFkNDVmZmU5MTc2ZDYKI0VYVElORjotMSxFNApodHRwOi8vbGl2ZTMwNC5lZGdlLmZpbG1vbi5jb20vbGl2ZS82NS5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmUyZDc4ZmVjM2U2OWRkZDdiOTQwMzcwNTcyYjBmMzgyNzJlYTdiZDI3YzgyNjQ1YzYzZWU3NjUwZDRjNDQwMWRhYTZmNThkNGY1NmM2MDkxMWJkYjA2OGFiMjYzMjhiN2Y4ZTRlMGJjMzVlYzllYjJiNjEwZGYwYjdlZTY1N2IzYzVjMWJjMDY3MmZjNDgyMTZmZDQ4MTBkY2I3NzY4YWQxYWZmMWRlNGYzNTUzODlkNDJhOWQ2YmRjYTI4MjE2Y2Q2NDlkNTk5ODAwMmViMmU1ODBjNzliM2IxNWQ2MzA3NjQzNjJkNTQ0YzA1YTk3NDk2ZWIzMTEyOTlmMjlkNTNlNjMyZDc4Yjg0ZThlMDFlYWZiYzMxN2UzMzRjNjY3NTMKI0VYVElORjotMSxGaWxtNApodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1maWxtNCZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxGaWxtNApodHRwOi8vMTk4LjE3OS4zMC4xMDgvbGl2ZS8xMy5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmU2NDIxYmY2M2FkZTRkMGM5ZDRhMjJkNGE3MTIwMzA0YzQyMTUxZmIxNjVmZTlmZTIzMDU2YzRlOThkNjdiZWFiZmY2NTEwODM1MjZiMjJjMWIwMjE2Mjk0NmYwZGQwZTQ5MDY2NTAxODNmNTM5YzQxMzM5NGEzYWY0MzY3NjM3MTMxMGRjZmJjMmQxZjVlNTc2ODI4NTBkYTY4MmNkNWY2ODYwMTczM2M3MjRhYThhNjAyNjE4ZDAyMWMzNmY1MmJlZWI5MTI3NTk0MmVlNjNkYTYxMTc4YTAwOGM0NzEyNzVlMzBlYTVmMmNkOTIwZjZiZTAxZmExODcxNjFlMGEwMzk1Y2UwYTdjMmM2Y2UyMmEzYzhjOWRiMjFlYzBhNjcKI0VYVElORjotMSxTIEFjdGlvbgpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1za3ltYSZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxTIEFjdGlvbiAoQUxUKQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzE2NjUmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KI0VYVElORjotMSxTIENvbWVkeQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1za3ltY2Mmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsUyBDb21lZHkgKEFMVCkKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcxNjY0JmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCiNFWFRJTkY6LTEsUyBDcmltZQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1za3ltY2Mmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsUyBEcmFtYQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1za3ltZCZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxTIERyYW1hIChBTFQpCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MTY2NyZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwojRVhUSU5GOi0xLFMgRmFtaWx5Cmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXNreW1mJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLFMgUHJlbWllcmUKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9c2t5cG0mdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsUyBTaG93Y2FzZQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzE4ODEmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KI0VYVElORjotMSxTIFNjaS1GaQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1za3ltaCZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxTIFNjaS1GaSAoQUxUKQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzE3MzEmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KI0VYVElORjotMSxGb29kIE5ldHdvcmsKaHR0cDovLzE5OC4xNzkuMzAuMTEwL2xpdmUvMjAuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlZTIyNWNmM2E3MmRmZTY0NmE5NjFjMzE0OTBlNTg3OTYwN2ZjNjVhOGU3OWY3OGE3NTk5NDM5MTRiYjU0NDAwOGRiODJkZWU4MzQzYzFjOTU2NzkzZGEzODVkMTdhMTc1MzMzMmZhZDY5M2MxNWY0YTA4YjUxNDQ3N2JlNDcyNzU3YjJkNWQyM2M1YmE3YzJkN2UwMmYzZGQ1OGI3MDZhYzM2MjYyMjczMmJmY2RmMzYzM2NlMzY0YjIxMDRhYmJkOWY3NmE2YTNhYjM0Njk4ODE4ODI2OWNkMmMxZGM1ZDc5MGY1YzU3ZmQyZGU0ZjNkNDNmMmI1ZTcyNjA4NjA5NmU3ZDUyMDdmMDdjZGRkMjMzOGY1MzdhMzYyZWVjZGU2CiNFWFRJTkY6LTEsSVRWMgpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1pdHYybCZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxJVFYyCmh0dHA6Ly8xOTguMTc5LjMwLjEwOC9saXZlLzY3LmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZWIzNzMyNDBiNDkwY2Y3OGQyYzIwZmIwZGQ2NTE0MTlmMGY0YjJlNmVmMjVlMWVhOTA1NjM0MzIwMzdmY2VkNzk3NjVlYTkxYWIwZTk3NzMwNzY4MzVmYzAxMmJiNjQxNGViYjFmMTgyOTAzZDljMDYxZmFkMTUzZDcxZTgxMWY2ZTc3ZjAzZDE2MjQzOGI2NzU2ZTdlN2U3Njc3NDM3MjNmODk5NjBmNDUyZjBhNDJlMGQ2ZTU1ZTEyMzRjZTAxMjM1MTYzY2Q1NjYwNWU0NmU3Mzg1ZGU3MGU5NDU0Y2QyZTBkZjczYjdkNDY4ZTU4NmJiZDMzOGQ3N2IzYmJlZjQ5NDY0YTgyODc3MjMxY2E5YTNjYjZiMWRmYTkxMjVlOQojRVhUSU5GOi0xLElUVjMKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9aXR2M2wmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsSVRWMwpodHRwOi8vMTk4LjE3OS4zMC4xMDgvbGl2ZS8yNi5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmViMzczMjQwYjQ5MGNmNzhkNTY4MDhlYmVhNmU5ZjgwMWEyMWI3Nzc1MmU4OGM3MGU4ODJhYmQxZmQxNWViNWM3ZDNlMmYwNGEyYTg3MmNhNWNiYjI0ZTc3OTAxMDdjZmFiY2VkYjQ1YzFkMDgwNmM5NWM3ZTY4Y2RkMDcxNmJkODM1YWZhZjU0NmFlMzg0OTU5MDJmZjJkOGQ5OGQ2MmM5YjAxYWQzNmIxMTQxMzhmZDYwMGJkZDYzMzFhNmQ3ZWJiMjUxODY3N2I3MGM5YjE3NWEyNDQ2NDMyMjJiOTIwYTVlNTVhYWU0YWRlMzQ4NTYyNDY2NzQ5NTM1YWU3ODg5ZWNiMDY3ZjNiOTA1Yjc2ZTlmNDZmNzA4MzQyNDc1M2MKI0VYVElORjotMSxJVFY0Cmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWl0djQ0OCZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxJVFY0Cmh0dHA6Ly8xOTguMTc5LjMwLjEwOC9saXZlLzEwMS5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmVlYzg0ZjI5MDY1ZDJjNzAxNzhiZjY4ZDdkM2E3MjM2ZjE4YjJlMDExOGNiZDNhN2ZkZjFiZTFkOThkMTE0YWRjMmMzZTczMTY4ODgwOTgwOWVkYWE4YTU4YTUwNTQxODYyNDFlNjBhMDU3YTUyNmEzNTIxOWM3ZWM1MzUxMzEzNGRjZjIxNTIzMTliYzQ3ODczYjJiMjNkNGM2ODA1NWIzOWQzMGJkMDI1ZWYxNDIwNzVlYzUxZjQ5ODU2N2ZmZmNhMmI1OGQ1NmMyZjZiNmExNzVhNzY0N2RhZWFlY2M1OWRiMjA4YTQ1MjAzMDJiYTE5OGM1OTU2NjFiZjhlNGNmOTNiOWVjZDljNWQ5MmZlZThjNWMwZDczOWNlMGNjYjUKI0VYVElORjotMSw0IE11c2ljCmh0dHA6Ly9saXZlMzA4LmVkZ2UuZmlsbW9uLmNvbS9saXZlLzk1LmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZTBjMjYyYzA2MzcyOTAxZDJmYWM2YWM3Y2E2NDk3MDNhMmU0YzE2OTllYzM4MGQ3MmIwNTY5NGQ1YmZiMDQ0NWRkNmVmNGQzMzQwZGFiM2EwMzJhNjliNzA3NjIwZTUzMjE2MmE0YmE4MTBmZmMxMzQ5OWUwZWNkOTJmMTU3YmNkMTdiOGQ1MDY5OGIxNTk4MjNjZmM0ZjJiYmJkMjRjNWI5MTA2NWUwZGM4NTMyN2IwYTZjZmYxMTBiNjZlNWZlMTNhMzAxZTc1MmNjMzc5ZjcxNWEwMmUxY2Y2ZmQ1MzBjOTQ0ODAyZjRiZDliZmMyNjFhYzczNDYwM2FjNWUxOWI0Njc4ZTY4MWIxMjYwZDg2OTUzZWI0NjJhY2UwNWRiZAojRVhUSU5GOi0xLE1vcmU0Cmh0dHA6Ly9saXZlMzA0LmVkZ2UuZmlsbW9uLmNvbS9saXZlLzk3LmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZTA5YmY5MjJjNjIxNWU4ODE4ODBlYTgxY2M5YWU4ZTUzZTczMGFlNjNhNDA1ZmVhODNlZWJhODkxYTNlMDlhODAyZDlhMWRhZjI4ZDc0ODllMWQxMzVjMTg4MzBhMWYwZWJkYmY5ZDQ4MGZjN2FmMjkxYjJhMjA2OTcyYmVmZDliYzFmYWJhMzk0ZDYxOWM2ZTJlMWJmZjdmMmRkMjllYzAxMzFlNTYwZmFjZjZhYjM4NzJmNjZlODk4ZTZhMjM5NWE2ZmVmZDhlNjIwMmMwNjIwZWI5OTU2M2I4MWVlM2ZlNjJmZjM4YzQ3ZTA2NzEwZTVjYjQzODExY2RlMmI2OGYwMjUyNDExYmNkNDQ1NjRmNTQ2M2FhNGJmNjIyYWZkZQojRVhUSU5GOi0xLElUVisxCmh0dHA6Ly8xOTguMTc5LjMwLjExMC9saXZlLzE4MTcuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlYjJlMzc3NjYxYmVkODkxN2U0NDVmYmUwMDkwNGYxYzU5MjVlOTlmNjc4MjkyZGQ4MTFmZTM5Y2QzYmEwMWNkM2FiODAyNjUwMzdiN2ZlMjhiYWZkOGQ0ZmU5YTJlNzI4ZTI3YWU4YTEzOTE1OTE5MWI0OThjYmRjZmYwNzdjYTk5YWZlN2Y3N2FmNzNhNzg1ODE5MzY1YjAxOGZhNGIxODk0OTc5YjEwZWZhNmQxMDllOGIzNTUyODRjNTZiY2JkYTAwOGM1MmIwM2E0YTRmYmYwYmU5OWJhMzIxNjI3ZDU5NGQxYWU5MjU1MTA4NDU3N2U0NzA0MTMwNDMyZDE2MDk2M2ZjOThkNjExM2M5ODg1YTRkMTk5MTgzYWVkMjdlCiNFWFRJTkY6LTEsSVRWMisxCmh0dHA6Ly8xOTguMTc5LjMwLjExMC9saXZlLzE4MjAuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlYjZiOWU1YTBkNGY0ZGY0ZGZmOTdkMTcxODc1NTQxMjM1ZGYyMTEyMjYwZTI3ZTg2ODM2MTk5ZjYwMzU2Nzg0MWM1YjllMjFjMTJmYWY4MWY2YzdhODdmMTY5MGVlMDgyNGE5YjNmZjZjMzFmOTAzYTUwOTYwZDY2NTZlYzZjZTEyMjc0YzhmYTQ0NjJjNmVlZWZjOWQ0NTYzNDRlNWQ3M2E0NTk4YTNjYTY1YzhmMjNkZGQ4MmY0YzVlYzcxMDYxMmRhMDAyY2I1ZmZjOTI4NzkwYTA5MGYzNzAwYTNmMDM2MGQ3MjIzNmRmNTRkNGFkZjA2NDExY2QzYWNhZGIxOTY1MDU3ZjQzZWUzYzFkYmZjYjg1NjBmYTE0NDQ4NzVjCiNFWFRJTkY6LTEsSVRWMysxCmh0dHA6Ly8xOTguMTc5LjMwLjExMC9saXZlLzE4MjMuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlOWJmZjkxYzg2NzI0MDg3Y2U3N2MzNjgyY2MzNTIzNThmZjFjOGVjYjRkNzBhYmFkOGRjODE5NjAzZjg3ZWNmYWYwODBjZTRjY2JjMjQyMDZkYTY3NDdlMDUyYTEwZjJmOTYzNDI5YzA5NTgyYjRhZTlhNjE2NmFjYWExNTIxNzQ4MmRlM2NjMDRmNjgwZjYxMTJkZjczNTliODcxMzIwZjVkMzkzMzhhNTVmZjIwOWE5ZmJjMDQwMzYxODZlZmI4NGE4YjVlMDgyNGU3NDg2YzZiMDNmMTg4ZGE2ZDgzNjc0ZjViNzYzZTRlYjE1OTMzYjQ1ZWYyNDc3MmZiNjkyZDAwOTJhZjBjNjRhMDc4YjFlZjA3Y2JiYWUxMWRkM2Y1CiNFWFRJTkY6LTEsSVRWNCsxCmh0dHA6Ly8xOTguMTc5LjMwLjExMC9saXZlLzE4MjYuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlMmM2YTdmNzg2YTE2MDExMzI0YTJjOWVjN2Y5MzE0MzY0ZjMwNzgyYjA4M2JjYzVjNTY2ZDAyZWJmYzI1ZjhiMTQ1M2I1N2UyYjJjNGQ4ODhlM2E4OWY2MTM2NmI2OTQ0YzM3M2EzNjg4NDI2YzMyMWIyYjNkZTBjYjBhYWZlODNhZGUzNjI0NjY1YzU3MWQxMmIzZTNmNWM0MTAyMGIxODMzZWEwZmJhYTkxOGQ2Yzk0MjdjNDJkZjhlMzE4YWFiNGNiNjZhMmEyMGNkYTQ0MGI5YWFiYzVjNTdiY2M3OWRiMDQzOTg3OWMxZmZiMDM5OGUwMTFmNDY5NjM1NTRmZDBiZTE2OGI4Y2U4YzZlMmY0MjlmZDFmMDQxMzBiYWQyCiNFWFRJTkY6LTEsQ0JTIERyYW1hCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWNic2RyYW1hJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLENCUyBEcmFtYQpodHRwOi8vMTk4LjE3OS4zMC4xMTAvbGl2ZS8xODA1LmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZWVmOWM2YTQwZmU3NTI0ODE4YWJiZDFiNDMxMGUyM2ZkNzQ2NGVhMjY1MzgxOGUzYzQ4MWIwNmNiZjRjMDU2MWEyMzdhZGE0MDEwZTZiYTQ4ZmNlNGQyZGNkOTdjZTBmMGIxMjA0YzQ0NGYxMTFmOTgxNjJiMWRmNDFhZWJjODY3ODdlNDQzNzhmODZkMjJkOTdhNzIzOTZiYzBmNTlkNWI3M2I5ZDNmZWZkMTE2OGY5NGE0YTRkMjNmMzY5YjM5MWJhNzYzNzlhZmE1YmE1OTExYzcwM2Q3NmJhZThkMTU0ZDhiMjI4MjA1NDhkOGJmYThlYzJmMjkyOGZlMDJkOGQxNTYwM2I5MTBlYjJmYzNiZDIzOWIwNDY0ZTI5NTlhMAojRVhUSU5GOi0xLENCUyBSZWFsaXR5Cmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWNic3JlYWxpdHkmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsQ0JTIFJlYWxpdHkKaHR0cDovLzE5OC4xNzkuMzAuMTEwL2xpdmUvMTgwOC5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmVlZjljNmE0MGZlNzUyNDgxNzI2OGE5NjI1OTQ1MDViZDYwODg3Nzc3NDFiNzZiZWRhMWUwNWQyZmViODM5NzI3ZTM1NjJkOTk4MTk5NzlmN2M5NzIzMzlkNzA0MDI2ZTY0ZTc1YzVjN2ZiZjdlYjA2YzNmMmEzZTFjNTBkMjYxZmJiYTMxZTZlMzU5MDUxZGMzNGQ4ZWU1ZjU3MGZkNGQyNjNiN2YyZGQzZjlmYzg4ZTU2NTI4NWVmMzU2M2FhZGVhNGY3M2QwYzU0M2E5YmY1Y2Q4NGVmM2FmNTg0NTVkODNmMWE2YTZkZDhhOWMwMTdkZDM1YzE0MzBmMDIzNWU5MTlhZmY5YmM3YjFkMjExY2RiMGE0ZjA1ZmZhMDI0ZDYKI0VYVElORjotMSxDQlMgUmVhbGl0eSsxCmh0dHA6Ly8xOTguMTc5LjMwLjExMC9saXZlLzE4MTEuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlMTY5Y2IxYjc4MTJiNmIyYzA4ZjA4MjU5NjA4N2ExNzBjMTM2ZTgyOWUyNGE0OWFkMzA3NTUxNzg3MzJiZjYwOTI1YmYwMjcwZWQ2OWJkM2YyYTE1ODdjMjIxNTVmNGE1NDJhYjFhMDk2OTVkMzU2N2UzN2Q1ZTc1ZDQ0ODVjZTY0OGExYTNhYmUyMjYwOWQ3OWNjODBmMzk5MWIxODNjN2MyMWQ0NWZkMTMxODE3OTA1ODFmYTk4NzgyNmYyMjA5ZmZlMjcxMTk1NWMwYjcxZTQyNDViYTRjYWVhNTAwZTQ0OTFjOTA4ZDY1ZTRjM2E3OTNhNzI2MjEwNzkyZDMxMzI4ZmNjNmU2OTkxNWJhZTM5YWRhZWNiMTEzODM2NmU5CiNFWFRJTkY6LTEsRE1heApodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1kbWF4NCZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxEcmFtYQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1kcmFtYSZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSw1VVNBCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PTV1c2E0JnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLDVVU0EKaHR0cDovLzE5OC4xNzkuMzAuMTEwL2xpdmUvODQ1LmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZTIxNmJiNDVlYzMwZmY0MTNiNjEzOGJlNTRlMTAwMzMyMTJkNzc0NDdhMTMwN2IzNDk2MmM5ZjZmNWViMmQ4OGE3YTEzZmE1MTk3ZmRlZWY2NjQ5MDUwZDNkNmQ1ZWQ1OGFkNjdiMzQ0Yzg3Mzg4OWQ2YWFkNWU3YjM1ZjkwNWNmZDdkNzQzMmZiNjA5ZGEwY2U4ZDk4YjVlZWRjYTcyNmZhNmE2NWJkMTc5ZTk1NzE4YjA5NjMwYTgyNTE2NzMxNjk4ZmI4Y2Q0NjliODA5ZGMyYjJjZmUxMjgxMTdjOGVlNWI0NDVlNGEzYWQ5YmZhZWQ1NTI2NWIyYTRlMjk1ZmZmYTlhYTljYWI2N2NiNTMzNDJhNGY2Y2E4ZDc2ZDJkYQojRVhUSU5GOi0xLFllc3RlcmRheQpodHRwOi8vbGl2ZTMwNy5lZGdlLmZpbG1vbi5jb20vbGl2ZS8xMDM5LmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZWMzNTU1ZTZhN2Y0NzViNmMzZGQ0MjhlZWFhNThhZjFmYTljMDI3ZTJmZmIxMTI4Mzk5ODk4YjkyMmVlMTQ3N2ViZTdhOTIzOWViZDQ0NWM4Njk0YTY2MDYwNGFiZjU2NjIyMzNiOGIyYWI1MGJmZjU2OTRlNDYzZWFmZTQ5MmRkNmQwMTEyZWNiN2E2MDU4YjM4OWM3MDY3NjZlNjExODQ1Y2JhOTNjMDc0ZWU0OTM4MjJhYzE3N2MyZTQzM2M0OGFkMDliMjUxZDY4MjJkYmU4NDI0ZTIxNzdjYzY5OTk0ZWU1NGM4NzYzOWY5ZTY5M2VlYTMwYTZkMWJlM2MxYmJlMDNlMmVkNWJmZGNiMTdjODY5NDhjNjA5N2IwYzQ2YwojRVhUSU5GOi0xLFRydWUgTW92aWVzIDEKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9dHJ1bTEmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsVHJ1ZSBNb3ZpZXMgMgpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT10cnVtMiZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxHb2xkCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXVrZ29sZCZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxRdWVzdApodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1xdWVzdCZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxNVFYKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY5MDM3JmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgoKI0VYVElORjotMSxbQ09MT1IgeWVsbG93XS0tIEJlbG93IEFyZSBIRCBVayBUdiBTb21lIEFyZSBHZW8gTG9ja2VkIC0tWy9DT0xPUl0KaHR0cDovLzAuMC4wLjAvdmR1YnQyNQojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CQkMgT25lIEhEWy9DT0xPUl0KaHR0cDovL3ZzLWhkcy11ay1saXZlLmVkZ2VzdWl0ZS5uZXQvcG9vbF80L2xpdmUvYmJjX29uZV9oZC9iYmNfb25lX2hkLmlzbWwvYmJjX29uZV9oZC1hdWRpb18xJTNEMTI4MDAwLXZpZGVvJTNEMzUwMDAwMC5tM3U4fFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQkJDIFR3byBIRFsvQ09MT1JdCmh0dHA6Ly92cy1oZHMtdWstbGl2ZS5lZGdlc3VpdGUubmV0L3Bvb2xfNS9saXZlL2JiY190d29faGQvYmJjX3R3b19oZC5pc21sL2JiY190d29faGQtYXVkaW9fMSUzRDEyODAwMC12aWRlbyUzRDM1MDAwMDAubTN1OHxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJCQyBUaHJlZSBIRFsvQ09MT1JdCmh0dHA6Ly92cy1oZHMtdWstbGl2ZS5lZGdlc3VpdGUubmV0L3Bvb2xfMS9saXZlL2JiY190aHJlZV9oZC9iYmNfdGhyZWVfaGQuaXNtbC9iYmNfdGhyZWVfaGQtYXVkaW9fMSUzRDEyODAwMC12aWRlbyUzRDM1MDAwMDAubTN1OHxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJCQyBGb3VyIEhEWy9DT0xPUl0KaHR0cDovL3ZzLWhkcy11ay1saXZlLmVkZ2VzdWl0ZS5uZXQvcG9vbF8yL2xpdmUvYmJjX2ZvdXJfaGQvYmJjX2ZvdXJfaGQuaXNtbC9iYmNfZm91cl9oZC1hdWRpb18xJTNEMTI4MDAwLXZpZGVvJTNEMzUwMDAwMC5tM3U4fFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQ0JCQyBIRFsvQ09MT1JdCmh0dHA6Ly92cy1oZHMtdWstbGl2ZS5lZGdlc3VpdGUubmV0L3Bvb2xfMS9saXZlL2NiYmNfaGQvY2JiY19oZC5pc21sL2NiYmNfaGQtYXVkaW9fMSUzRDEyODAwMC12aWRlbyUzRDM1MDAwMDAubTN1OHxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUNCZWViaWVzIEhEWy9DT0xPUl0KaHR0cDovL3ZzLWhkcy11ay1saXZlLmVkZ2VzdWl0ZS5uZXQvcG9vbF8yL2xpdmUvY2JlZWJpZXNfaGQvY2JlZWJpZXNfaGQuaXNtbC9jYmVlYmllc19oZC1hdWRpb18xJTNEMTI4MDAwLXZpZGVvJTNEMzUwMDAwMC5tM3U4fFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQkJDIE5ld3MgSERbL0NPTE9SXQpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzUvbGl2ZS9iYmNfbmV3c19jaGFubmVsX2hkL2JiY19uZXdzX2NoYW5uZWxfaGQuaXNtbC9iYmNfbmV3c19jaGFubmVsX2hkLWF1ZGlvXzElM0QxMjgwMDAtdmlkZW8lM0QzNTAwMDAwLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CQkMgb25lIEhEIChVSylbL0NPTE9SXQpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzUvbGl2ZS9iYmNfb25lX2xvbmRvbi9iYmNfb25lX2xvbmRvbi5pc21sL2JiY19vbmVfbG9uZG9uLWF1ZGlvXzI9OTYwMDAtdmlkZW89MTM3NDAwMC5mNG18WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CQkMgVHdvIEhEIChVSylbL0NPTE9SXQpodHRwOi8vdnMtaGRzLXVrLWxpdmUuYmJjZm10LnZvLmxsbndkLm5ldC9wb29sXzUvbGl2ZS9iYmNfdHdvX2hkL2JiY190d29faGQuaXNtbC9iYmNfdHdvX2hkLWF1ZGlvXzE9MTI4MDAwLXZpZGVvPTM1MDAwMDAuZjRtfFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQ0JCQyBIRCAoVUspWy9DT0xPUl0KaHR0cDovL3ZzLWhkcy11ay1saXZlLmVkZ2VzdWl0ZS5uZXQvcG9vbF8xL2xpdmUvY2JiY19oZC9jYmJjX2hkLmlzbWwvY2JiY19oZC1hdWRpb18yPTk2MDAwLXZpZGVvPTEzNzQwMDAuZjRtfFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQ0JlZWJpZXMgSEQgKFVLKVsvQ09MT1JdCmh0dHA6Ly92cy1oZHMtdWstbGl2ZS5lZGdlc3VpdGUubmV0L3Bvb2xfMi9saXZlL2NiZWViaWVzX2hkL2NiZWViaWVzX2hkLmlzbWwvY2JlZWJpZXNfaGQtYXVkaW9fMj05NjAwMC12aWRlbz0xMzc0MDAwLmY0bXxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJCQyBOZXdzIEhEIChVSylbL0NPTE9SXQpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzUvbGl2ZS9iYmNfbmV3c19jaGFubmVsX2hkL2JiY19uZXdzX2NoYW5uZWxfaGQuaXNtbC9iYmNfbmV3c19jaGFubmVsX2hkLWF1ZGlvXzI9OTYwMDAtdmlkZW89MTM3NDAwMC5mNG18WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CQkMgUGFybGlhbWVudCBIRCAoVUspWy9DT0xPUl0KaHR0cDovL3ZzLWhkcy11ay1saXZlLmJiY2ZtdC52by5sbG53ZC5uZXQvcG9vbF8xL2xpdmUvYmJjX3BhcmxpYW1lbnQvYmJjX3BhcmxpYW1lbnQuaXNtbC9iYmNfcGFybGlhbWVudC1hdWRpb18yPTk2MDAwLXZpZGVvPTgyNzAwMC5mNG18WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CQkMgQWxiYSBIRCAoVUspWy9DT0xPUl0KaHR0cDovL3ZzLWhkcy11ay1saXZlLmVkZ2VzdWl0ZS5uZXQvcG9vbF8xL2xpdmUvYmJjX2FsYmEvYmJjX2FsYmEuaXNtbC9iYmNfYWxiYS1hdWRpb18xPTEyODAwMC12aWRlbz0xMzc0MDAwLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CQkMgQWxiYSBIRCAoVUspIDFbL0NPTE9SXQpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzEvbGl2ZS9iYmNfYWxiYS9iYmNfYWxiYS5pc21sL2JiY19hbGJhLWF1ZGlvXzI9OTYwMDAtdmlkZW89MTM3NDAwMC5mNG18WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1TNEMgSEQgKFVLKVsvQ09MT1JdCmh0dHA6Ly92cy1oZHMtdWstbGl2ZS5iYmNmbXQudm8ubGxud2QubmV0L3Bvb2xfOS9saXZlL3M0Y3Bicy9zNGNwYnMuaXNtbC9zNGNwYnMtYXVkaW9fMj05NjAwMC12aWRlbz0xMzc0MDAwLmY0bXxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUxvbmRvbiBMaXZlWy9DT0xPUl0KaHR0cDovL2Jjb3ZlbGl2ZWlvcy1pLmFrYW1haWhkLm5ldC9obHMvbGl2ZS8yMTc0MzQvMzA4MzI3OTg0MDAwMS9tYXN0ZXJfOTAwLm0zdTgKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRmlsbTQgSERbL0NPTE9SXQpodHRwOi8vcGViYmxlczEyNC1saC5ha2FtYWloZC5uZXQvaS9maWxtNF8xQDEzNzc5MC9tYXN0ZXIubTN1OHxYLUZvcndhcmRlZC1Gb3I9ODUuNS44Ny4yMTgKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRTQgSERbL0NPTE9SXQpodHRwOi8vcGViYmxlczEyNC1saC5ha2FtYWloZC5uZXQvaS9lNF8xQDEzNzc4OS9tYXN0ZXIubTN1OHxYLUZvcndhcmRlZC1Gb3I9ODUuNS44Ny4yMTgKCgoKQEBAQEAKCkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gVUsgU3BvcnRzIFR2IC0tWy9DT0xPUl0KCiNFWFRJTkY6LTEsU2t5IFNwb3J0cyAxCmh0dHA6Ly9kZWx0YXR2LnB3L3N0cmVhbS5waHA/aWQ9MTMyNTQ3JndpZHRoPTY0MCZoZWlnaHQ9NDgwICZSRUYmaHR0cDovL3d3dy5kZWx0YXR2LnB3LwojRVhUSU5GOi0xLFNreSBTcG9ydHMgMQpydG1wZTovLzEzNC4xOS4xODUuMjAzOjE5MzUvbGl2ZWRnZSBwbGF5cGF0aD1tYW1haGRza3kxIHN3ZlVybD1odHRwOi8vcGxheWVyLmhkY2FzdC5vcmcvXy5zd2YgbGl2ZT0xIGZsYXNodmVyPVdJTi8xNiwwLDAsMjU3IiB0aW1lb3V0PTE1IHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGxpdmU9dHJ1ZSBzd2ZWZnk9MSBwYWdlVXJsPWh0dHA6Ly93d3cuaGRjYXN0Lm9yZy98cmVmZXJlcj1tYW1haGQuY29tCiNFWFRJTkY6LTEsU2t5IFNwb3J0cyAyCmh0dHA6Ly9kZWx0YXR2LnB3L3N0cmVhbS5waHA/aWQ9MTMzODMyJndpZHRoPTY0MCZoZWlnaHQ9NDgwICZSRUYmaHR0cDovL3d3dy5kZWx0YXR2LnB3LwojRVhUSU5GOi0xLFNreSBTcG9ydHMgMgpodHRwOi8vdGd1bi50di9tZW51cy9wbGF5ZXJzL3N0cmVhbWxpdmUuaHRtbD82ODQyNCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KI0VYVElORjotMSxTa3kgU3BvcnRzIDIKcnRtcGU6Ly8xMzQuMTkuMTg1LjIwMzoxOTM1L2xpdmVkZ2UgcGxheXBhdGg9bWFtYWhkc2t5MiBzd2ZVcmw9aHR0cDovL3BsYXllci5oZGNhc3Qub3JnL18uc3dmIGxpdmU9MSBmbGFzaHZlcj1XSU4vMTYsMCwwLDI1NyIgdGltZW91dD0xNSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBsaXZlPXRydWUgc3dmVmZ5PTEgcGFnZVVybD1odHRwOi8vd3d3LmhkY2FzdC5vcmcvfHJlZmVyZXI9bWFtYWhkLmNvbSAKI0VYVElORjotMSxTa3kgU3BvcnRzIDMKaHR0cDovL2RlbHRhdHYucHcvc3RyZWFtLnBocD9pZD0xMzM5NjImd2lkdGg9NjQwJmhlaWdodD00ODAgJlJFRiZodHRwOi8vd3d3LmRlbHRhdHYucHcvCiNFWFRJTkY6LTEsU2t5IFNwb3J0cyAzCnJ0bXBlOi8vMTM0LjE5LjE4NS4yMDQ6MTkzNS9saXZlZGdlIHBsYXlwYXRoPW1hbWFoZHNreTMgc3dmVXJsPWh0dHA6Ly9wbGF5ZXIuaGRjYXN0Lm9yZy9fLnN3ZiBsaXZlPTEgZmxhc2h2ZXI9V0lOLzE2LDAsMCwyNTciIHRpbWVvdXQ9MTUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggbGl2ZT10cnVlIHN3ZlZmeT0xIHBhZ2VVcmw9aHR0cDovL3d3dy5oZGNhc3Qub3JnL3xyZWZlcmVyPW1hbWFoZC5jb20gCiNFWFRJTkY6LTEsU2t5IFNwb3J0cyA0Cmh0dHA6Ly9kZWx0YXR2LnB3L3N0cmVhbS5waHA/aWQ9MTMyNDgyJndpZHRoPTY0MCZoZWlnaHQ9NDgwICZSRUYmaHR0cDovL3d3dy5kZWx0YXR2LnB3LwojRVhUSU5GOi0xLFNreSBTcG9ydHMgNApydG1wZTovLzEzNC4xOS4xODUuMjA0OjE5MzUvbGl2ZWRnZSBwbGF5cGF0aD1tYW1haGRza3k0IHN3ZlVybD1odHRwOi8vcGxheWVyLmhkY2FzdC5vcmcvXy5zd2YgbGl2ZT0xIGZsYXNodmVyPVdJTi8xNiwwLDAsMjU3IiB0aW1lb3V0PTE1IHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGxpdmU9dHJ1ZSBzd2ZWZnk9MSBwYWdlVXJsPWh0dHA6Ly93d3cuaGRjYXN0Lm9yZy98cmVmZXJlcj1tYW1haGQuY29tCiNFWFRJTkY6LTEsU2t5IFNwb3J0cyA1CnJ0bXBlOi8vMTM0LjE5LjE4NS4yMDQ6MTkzNS9saXZlZGdlIHBsYXlwYXRoPW1hbWFoZHNreTUgc3dmVXJsPWh0dHA6Ly9wbGF5ZXIuaGRjYXN0Lm9yZy9fLnN3ZiBsaXZlPTEgZmxhc2h2ZXI9V0lOLzE2LDAsMCwyNTciIHRpbWVvdXQ9MTUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggbGl2ZT10cnVlIHN3ZlZmeT0xIHBhZ2VVcmw9aHR0cDovL3d3dy5oZGNhc3Qub3JnL3xyZWZlcmVyPW1hbWFoZC5jb20gCiNFWFRJTkY6LTEsU2t5IFNwb3J0cyBGMQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1za3lmMTQ4OCZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxTa3kgU3BvcnRzIEYxCnJ0bXBlOi8vMTM0LjE5LjE4NS4yMDQ6MTkzNS9saXZlZGdlIHBsYXlwYXRoPW1hbWFoZHNreXNwb3J0c2YxIHN3ZlVybD1odHRwOi8vcGxheWVyLmhkY2FzdC5vcmcvXy5zd2YgbGl2ZT0xIGZsYXNodmVyPVdJTi8xNiwwLDAsMjU3IiB0aW1lb3V0PTE1IHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGxpdmU9dHJ1ZSBzd2ZWZnk9MSBwYWdlVXJsPWh0dHA6Ly93d3cuaGRjYXN0Lm9yZy98cmVmZXJlcj1tYW1haGQuY29tIAojRVhUSU5GOi0xLFNreSBTcG9ydHMgTmV3cwpydG1wZTovLzEzNC4xOS4xODUuMjA0OjE5MzUvbGl2ZWRnZSBwbGF5cGF0aD1zc2t5c24gc3dmVXJsPWh0dHA6Ly9wbGF5ZXIuaGRjYXN0Lm9yZy9fLnN3ZiBsaXZlPTEgZmxhc2h2ZXI9V0lOLzE2LDAsMCwyNTciIHRpbWVvdXQ9MTUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggbGl2ZT10cnVlIHN3ZlZmeT0xIHBhZ2VVcmw9aHR0cDovL3d3dy5oZGNhc3Qub3JnL3xyZWZlcmVyPXd3dy5zdHJlYW1raW5nLm9yZwojRVhUSU5GOi0xLFNreSBTcG9ydHMgTmV3cwpydG1wZTovLzEzNC4xOS4xODUuMjA0OjE5MzUvbGl2ZWRnZSBwbGF5cGF0aD1tYW1haGRza3luZXdzIHN3ZlVybD1odHRwOi8vcGxheWVyLmhkY2FzdC5vcmcvXy5zd2YgbGl2ZT0xIGZsYXNodmVyPVdJTi8xNiwwLDAsMjU3IiB0aW1lb3V0PTE1IHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGxpdmU9dHJ1ZSBzd2ZWZnk9MSBwYWdlVXJsPWh0dHA6Ly93d3cuaGRjYXN0Lm9yZy98cmVmZXJlcj1tYW1haGQuY29tCiNFWFRJTkY6LTEsQlQgU3BvcnRzIDEKcnRtcGU6Ly8xMzQuMTkuMTg1LjIwNDoxOTM1L2xpdmVkZ2UgcGxheXBhdGg9bWFtYWhkYnRzcG9ydDEgc3dmVXJsPWh0dHA6Ly9wbGF5ZXIuaGRjYXN0Lm9yZy9fLnN3ZiBsaXZlPTEgZmxhc2h2ZXI9V0lOLzE2LDAsMCwyNTciIHRpbWVvdXQ9MTUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggbGl2ZT10cnVlIHN3ZlZmeT0xIHBhZ2VVcmw9aHR0cDovL3d3dy5oZGNhc3Qub3JnL3xyZWZlcmVyPW1hbWFoZC5jb20KI0VYVElORjotMSxCVCBTcG9ydHMgMQpydG1wOi8vMTk1LjE1NC4xNjIuMTU3OjgwL2xpdmVyZXBlYXRlciBwbGF5cGF0aD0xMzM2NDEgc3dmVXJsPWh0dHA6Ly9jZG4uZ29vZGNhc3QuY28vcGxheWVycy5zd2YgbGl2ZT10cnVlIHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGZsYXNodmVyPVdJTi8yMDE4LDAsMCwxNjAgdGltZW91dD0xMyBzd2ZWZnk9MSBwYWdlVXJsPWh0dHA6Ly9kZWx0YXR2LnB3L3xyZWZlcmVyPWh0dHA6Ly9zcG9ydHM0dS50dgojRVhUSU5GOi0xLEJUIFNwb3J0cyAyCnJ0bXBlOi8vMTM0LjE5LjE4NS4yMDQ6MTkzNS9saXZlZGdlIHBsYXlwYXRoPW1hbWFoZGJ0c3BvcnQyIHN3ZlVybD1odHRwOi8vcGxheWVyLmhkY2FzdC5vcmcvXy5zd2YgbGl2ZT0xIGZsYXNodmVyPVdJTi8xNiwwLDAsMjU3IiB0aW1lb3V0PTE1IHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGxpdmU9dHJ1ZSBzd2ZWZnk9MSBwYWdlVXJsPWh0dHA6Ly93d3cuaGRjYXN0Lm9yZy98cmVmZXJlcj1tYW1haGQuY29tCiNFWFRJTkY6LTEsQlQgU3BvcnRzIEV1cm9wZQpydG1wOi8vNjIuMjEwLjEwNS42MDo4MC9saXZlcmVwZWF0ZXIgcGxheXBhdGg9MTMzNjc2IHN3ZlVybD1odHRwOi8vY2RuLmdvb2RjYXN0LmNvL3BsYXllcnMuc3dmIGxpdmU9dHJ1ZSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBmbGFzaHZlcj1XSU4vMjAxOCwwLDAsMTYwIHRpbWVvdXQ9MTMgc3dmVmZ5PTEgcGFnZVVybD1odHRwOi8vZGVsdGF0di5wdy98cmVmZXJlcj1odHRwOi8vc3BvcnRzNHUudHYKI0VYVElORjotMSxQcmVtaWVyIFNwb3J0cwpodHRwOi8vd3d3LmhkY2FzdC5vcmcvZW1iZWRsaXZlNC5waHA/dT1zcHJlbXNwJnZ3PTg1NCZ2aD00ODAgJlJFRiZodHRwOi8vd3d3LmhkY2FzdC5vcmcvCiNFWFRJTkY6LTEsU2V0YW50YSBTcG9ydHMKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9c2V0YW50YWEmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsRXVyb1Nwb3J0IDIKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9ZXVyb3Nwb3J0dDImdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsRVNQTiAoVUspCnJ0bXBlOi8vMTM0LjE5LjE4NS4yMDU6MTkzNS9saXZlZGdlIHBsYXlwYXRoPW1hbWFoZHZlc3BudWsgc3dmVXJsPWh0dHA6Ly9wbGF5ZXIuaGRjYXN0Lm9yZy9fLnN3ZiBsaXZlPTEgZmxhc2h2ZXI9V0lOLzE2LDAsMCwyNTciIHRpbWVvdXQ9MTUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggbGl2ZT10cnVlIHN3ZlZmeT0xIHBhZ2VVcmw9aHR0cDovL3d3dy5oZGNhc3Qub3JnL3xyZWZlcmVyPW1hbWFoZC5jb20KI0VYVElORjotMSxBdCBUaGUgUmFjZXMKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9YXRyNSZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxCb3ggTmF0aW9uCnJ0bXBlOi8vMTM0LjE5LjE4NS4yMDY6MTkzNS9saXZlZGdlIHBsYXlwYXRoPW1hbWFoZGJveG5hdGlvbiBzd2ZVcmw9aHR0cDovL3BsYXllci5oZGNhc3Qub3JnL18uc3dmIGxpdmU9MSBmbGFzaHZlcj1XSU4vMTYsMCwwLDI1NyIgdGltZW91dD0xNSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBsaXZlPXRydWUgc3dmVmZ5PTEgcGFnZVVybD1odHRwOi8vd3d3LmhkY2FzdC5vcmcvfHJlZmVyZXI9bWFtYWhkLmNvbQojRVhUSU5GOi0xLEJveCBOYXRpb24KaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9Ym94b28mdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsTEZUVgpydG1wOi8vMzEuNy41Ni4yNTQ6MTkzNS9zdHJlYW0vIHBsYXlwYXRoPTBWbVUxYnBTTlEuc3RyZWFtIHN3ZlVybD1odHRwOi8vdGhlY2RuLjA0c3RyZWFtLmNvbS9wL29vb2xvMS5zd2YgcGFnZVVybD1odHRwOi8vd3d3LjA0c3RyZWFtLmNvbS9lYmIucGhwP2Fkc3A9b3RoZXIgbGl2ZT10cnVlIHRpbWVvdXQ9MTUKI0VYVElORjotMSxFdXJvU3BvcnQgSW50LgpodHRwOi8vZXNpb3NsaXZlNi1pLmFrYW1haWhkLm5ldC9obHMvbGl2ZS8yMDI4NzQvQUxfUF9FU1AxX0lOVEVSX0VORy9wbGF5bGlzdF8xODAwLm0zdTgKCkBAQEBACgpHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIFVTQSBMaXZlIFR2IC0tWy9DT0xPUl0KCiNFWFRJTkY6MCxBQkMgMjIKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY4OTY5ICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLEFCQyBGYW1pbHkKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTMwMzAzJmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsQUJDIEZhbWlseQpodHRwOi8vemVyb2Nhc3QudHYvZW1iZWQucGhwP2E9MTg1MiZpZD0md2lkdGg9NzAwJmhlaWdodD00ODAmYXV0b3N0YXJ0PXRydWUmc3RyZWNoPSAmUkVGJmh0dHA6Ly93d3cuemVyY2FzdC50di8KCiNFWFRJTkY6MCxBQkMgTmV3cwpodHRwOi8vYWJjbGl2ZS5hYmNuZXdzLmNvbS9pL2FiY19saXZlNEAxMzYzMzAvaW5kZXhfMTIwMF9hdi1iLm0zdTgKCiNFWFRJTkY6LTEsQW5pbWFsIFBsYW5ldCBVUwpodHRwOi8vODAuODAuMTYwLjE2OC9saXZlLzEvbGl2ZS5tM3U4CgojRVhUSU5GOjAsQSZFCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02ODk1MiZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLEFNQwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9Njg5NjMmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxCbG9vbWJlcmcKaHR0cDovL2NkbjMudmlkZW9zLmJsb29tYmVyZy5jb20vYnR2L3VzL21hc3Rlci5tM3U4CgojRVhUSU5GOjAsQ2FydG9vbiBOZXR3b3JrCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MTYzMiZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLENCUwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9Njk5NTYgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsQ05OIFVTQQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9Njg5NjcmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxDTk4gSW50ZXJuYXRpb25hbApodHRwOi8vZWRnZTEuZXZlcnlvbi50di9ldHYxc2IvcGhkMTYvcGxheWxpc3QubTN1OAoKI0VYVElORjowLENUViBFZG1vbnRvbgpodHRwOi8vMTk4LjE3OS4zMS4xOTgvbGl2ZS8yMDUzLmhpZ2guc3RyZWFtLzIwNTMuaGlnaC5zdHJlYW0vaW5kZXgubTN1OAoKI0VYVElORjowLENUViBMZXRoYnJpZGdlCmh0dHA6Ly8xOTguMTc5LjMxLjE5OC9saXZlLzIwNTkuaGlnaC5zdHJlYW0vMjA1OS5oaWdoLnN0cmVhbS9pbmRleC5tM3U4CgojRVhUSU5GOjAsQ1RWIFlvcmt0b24KaHR0cDovLzE5OC4xNzkuMzEuMTk4L2xpdmUvMjA2Mi5oaWdoLnN0cmVhbS8yMDYyLmhpZ2guc3RyZWFtL2luZGV4Lm0zdTgKCiNFWFRJTkY6MCxDVFYgUmVnaW5hCmh0dHA6Ly8xOTguMTc5LjMxLjE5OC9saXZlLzIwNTYuaGlnaC5zdHJlYW0vMjA1Ni5oaWdoLnN0cmVhbS9pbmRleC5tM3U4CgojRVhUSU5GOjAsQ1cKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY4OTcwICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLENXIDkgQ2hpY2FnbwpodHRwOi8vd2dudHJpYnVuZS1saC5ha2FtYWloZC5uZXQvaS9XR05QcmltYXJ5XzFAMzA0NjIyL2luZGV4XzM1MF9hdi1wLm0zdTg/CgojRVhUSU5GOjAsRGlzY292ZXJ5IENoYW5uZWwKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY5MTEwICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRGlzY292ZXJ5IENoIFVTIEhEWy9DT0xPUl0gCmh0dHA6Ly84MC44MC4xNjAuMTY4L2xpdmUvOC9saXZlLm0zdTggCgojRVhUSU5GOi0xLERpc2NvdmVyeSBJRCBVUwpodHRwOi8vODAuODAuMTYwLjE2OC9saXZlLzUvbGl2ZS5tM3U4CgojRVhUSU5GOi0xLERpc2NvdmVyeSBTYyBVUyAKaHR0cDovLzgwLjgwLjE2MC4xNjgvbGl2ZS85L2xpdmUubTN1OCAKCiNFWFRJTkY6MCxEaXNuZXkganIvY2hhbm5lbApodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9Mzg4MDQgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsRm94IE5ldHdvcmsKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcwMDQ4ICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLEhpc3RvcnkgQ2hhbm5lbApodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzA2MzMgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsSFNOCmh0dHA6Ly9oc24ubXBsLm1paXNvbHV0aW9ucy5uZXQvaHNuLWxpdmUwMS9fZGVmaW5zdF8vbXA0OjQyMHA1MDBrQjMxL3BsYXlsaXN0Lm0zdTgKCiNFWFRJTkY6MCxIU04gMgpodHRwOi8vaHNuLm1wbC5taWlzb2x1dGlvbnMubmV0L2hzbi1saXZlMDEvX2RlZmluc3RfL21wNDo0NjhwNTAwa0IzMS9wbGF5bGlzdC5tM3U4CgojRVhUSU5GOjAsTVNOQkMKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY5MDI0ICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLE1UVgpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NjkwMzcgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsTmF0aW9uYWwgR29lZ3JhcGhpYwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NjkwMTggJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsW0NPTE9SIGdyZWVuXU5BU0EgVFYgSERbL0NPTE9SXQpodHRwOi8vbmFzYXR2LWxoLmFrYW1haWhkLm5ldC9pL05BU0FfMTAxQDMxOTI3MC9pbmRleF8xMDAwX2F2LWIubTN1OD9oZD0xMCZyZWJhc2U9b24KCiNFWFRJTkY6MCxOaWNrZWxvZGVvbgpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzExMTIgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsT1dOCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD01Mzg1NyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6LTEsUGxhbmV0IEdyZWVuIFVTIApodHRwOi8vODAuODAuMTYwLjE2OC9saXZlLzQvbGl2ZS5tM3U4IAoKI0VYVElORjotMSxSVCBUb2RheQpodHRwOi8vcnQuYXBpLnZpc2lvbmlwLnR2L2xpdmUvQVNIVFRQL1JUX0FtZXJpY2EtTUIvcGxheWxpc3QubTN1OAoKI0VYVElORjotMSxTaG93dGltZSBVUwpodHRwOi8vODAuODAuMTYwLjE2OC9saXZlLzcvbGl2ZS5tM3U4CgojRVhUSU5GOjAsU3Bpa2UgVHYKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTUyNDc5ICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLHN5ZnkKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY4OTY2ICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLHN5ZnkKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcxMjA2ICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLHN5ZnkKaHR0cDovLzM3LjQ4LjgzLjEzMToxOTM1L2xpdmUvc3lmeTc3L3BsYXlsaXN0Lm0zdTgKCiNFWFRJTkY6MCxUQlMKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTUzMTYxICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLFRGMQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzA0NjggJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOi0xLFRMQyBVUyAKaHR0cDovLzgwLjgwLjE2MC4xNjgvbGl2ZS8yL2xpdmUubTN1OAoKI0VYVElORjotMSxUTlQKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY5MDIwJmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOi0xLFRyYXZlbCBDaC5VUyAKaHR0cDovLzgwLjgwLjE2MC4xNjgvbGl2ZS8zL2xpdmUubTN1OCAKCiNFWFRJTkY6LTEsVHJhdmVsIENoLlVTIApodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NjkwMTkmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6LTEsVFYgTGFuZApodHRwOi8vMTg0LjE3My44NS45MToxOTM1L2VkZ2UvX2RlZmluc3RfLzd5eGlycjQwNDZuazVjYS9wbGF5bGlzdC5tM3U4P3dvd3phc2Vzc2lvbmlkPTE0MTk5MDg0MDEKCiNFWFRJTkY6MCxVU0EgTmV0d29yawpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9Mzg3NjggJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsVVNBIE5ldHdvcmsKaHR0cDovLzM3LjQ4LjgzLjEzMToxOTM1L2xpdmUvdXNhNzcvcGxheWxpc3QubTN1OD93b3d6YXNlc3Npb25pZD0yNDQxNjAyOQoKI0VYVElORjowLFZIMQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NTI5ODggJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgpAQEBAQApHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIFVTQSBTcG9ydHMgLS1bL0NPTE9SXQoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTkJDU04gSERbL0NPTE9SXSBbQ09MT1IgeWVsbG93XSAxMDgwcCBOTyBWUE4gTkVFREVEIFsvQ09MT1JdCmh0dHA6Ly90dmVuYmNzbi1pLkFrYW1haWhkLm5ldC9obHMvbGl2ZS8yMTgyMzUvbmJjc254LzQyOTZrL3Byb2cubTN1OHxYLUZvcndhcmRlZC1Gb3I9NjYuMTcxLjIyOC4xMDIKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTkJDU04gSERbL0NPTE9SXSBbQ09MT1IgeWVsbG93XSA3MjBwIE5PIFZQTiBORUVERUQgWy9DT0xPUl0KaHR0cDovL3R2ZW5iY3NuLWkuQWthbWFpaGQubmV0L2hscy9saXZlLzIxODIzNS9uYmNzbngvMjU5NmsvcHJvZy5tM3U4fFgtRm9yd2FyZGVkLUZvcj02Ni4xNzEuMjI4LjEwMgojRVhUSU5GOi0xLE5CQ1NOIFNEW0NPTE9SIHllbGxvd10gTk8gVlBOIE5FRURFRCBbL0NPTE9SXQpodHRwOi8vdHZlbmJjc24taS5Ba2FtYWloZC5uZXQvaGxzL2xpdmUvMjE4MjM1L25iY3NueC8xODk2ay9wcm9nLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTY2LjE3MS4yMjguMTAyCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Hb2xmIENoYW5uZWwgMTA4MCBIRCBbL0NPTE9SXSAoRU5HKShOTyBWUE4gUkVRVUlSRUQpCmh0dHA6Ly90dmVnb2xmLWkuQWthbWFpaGQubmV0L2hscy9saXZlLzIxODIyNS9nb2xmeC80Mjk2ay9wcm9nLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTY2LjE3MS4yMjguMTAyCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUdvbGYgQ2hhbm5lbCA3MjAgSEQgWy9DT0xPUl0gKEVORykoTk8gVlBOIFJFUVVJUkVEKQpodHRwOi8vdHZlZ29sZi1pLkFrYW1haWhkLm5ldC9obHMvbGl2ZS8yMTgyMjUvZ29sZngvMjU5NmsvcHJvZy5tM3U4fFgtRm9yd2FyZGVkLUZvcj02Ni4xNzEuMjI4LjEwMgojRVhUSU5GOi0xLEdvbGYgQ2hhbm5lbCBTRCAoRU5HKShOTyBWUE4gUkVRVUlSRUQpCmh0dHA6Ly90dmVnb2xmLWkuQWthbWFpaGQubmV0L2hscy9saXZlLzIxODIyNS9nb2xmeC8xODk2ay9wcm9nLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTY2LjE3MS4yMjguMTAyCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Gb3ggU3BvcnRzIDEgR28gVVNBIDcyMEhEWy9DT0xPUl0KaHR0cDovLzU0LjE3Ny4xOTUuODIvc2VydmVyL3BsYXkvZnMxY3RnLzM5NjQwMDAvcHJvZy5tM3U4P2Fudj0xNDI3NDE1MjE5ODk2fFgtRm9yd2FyZGVkLUZvcj02Ni4xNzEuMjI4LjEwMgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Gb3ggU3BvcnRzIDIgR28gVVNBIDcyMEhEWy9DT0xPUl0KaHR0cDovLzU0LjE3Ny4xOTUuODIvc2VydmVyL3BsYXkvZnMyY3RnLzM5NjQwMDAvcHJvZy5tM3U4P2Fudj0xNDI3NDE1MjE5ODk2fFgtRm9yd2FyZGVkLUZvcj02Ni4xNzEuMjI4LjEwMgoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRm94IFNwb3J0cyAxIFVTQSA3MjBIRFsvQ09MT1JdCmh0dHA6Ly90aGV0aGFvaGQubmV0L3YvZm94c3BvcnQxLnBocCAmUkVGJmh0dHA6Ly90aGV0aGFvaGQubmV0LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Gb3ggU3BvcnRzIDIgVVNBIDcyMEhEWy9DT0xPUl0KaHR0cDovL3RoZXRoYW9oZC5uZXQvdi9mb3hzcG9ydDIucGhwICZSRUYmaHR0cDovL3RoZXRoYW9oZC5uZXQvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CaWcgVGVuIE5ldHdvcmsgNzIwSERbL0NPTE9SXQpodHRwOi8vYmlndGVuMjQ3LmNkbmFrLmJpZ3RlbmhkLm5ldWxpb24uY29tL25sZHMvYnRuMmdvL2J0bm5ldHdvcmsvYXMvbGl2ZS9idG5uZXR3b3JrX2hkXzMwMDAubTN1OAoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTkVTTiA3MjBIRFsvQ09MT1JdCnJ0bXA6Ly8yMDkuMTMzLjIwOC4xNzgvYXBwL3hyaXZvNzZzLWNoYW5uZWwgbGl2ZT10cnVlIHN3ZlZmeT10cnVlIHBhZ2VVcmw9aHR0cDovL3d3dy5teWJlc3RzdHJlYW1zLmNvbS9wL215YmVzdGhkNC5odG1sIHRpbWVvdXQ9MTUKCiNFWFRJTkY6LTEsVFNOIDEKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9dHNubjEmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsVFNOIDIKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9dHNubjImdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsRm94IFNwb3J0cyAxCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWZveHNwMSZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxGb3ggU3BvcnRzIDIKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9Zm94c3AyJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLEVTUE4gMgpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1lc25wMjImdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsTUxCIE5FVFdPUksgTGl2ZQpydG1wOi8vMTA5LjEyMy43MC4zODo4MC9saXZlIHBsYXlwYXRoPW1sYnh4IHN3ZlVybD1odHRwOi8vcC5qd3BjZG4uY29tLzYvMTIvandwbGF5ZXIuZmxhc2guc3dmIGxpdmU9MSBwYWdlVXJsPWh0dHA6Ly9yZXl0di5jby9lbWJlZG8ucGhwP2xpdmU9bWxieHgmdnc9NjIwJnZoPTQ5MCB0b2tlbj0lWnJleShuS2FAI1ogdGltZW91dD0xMAoKI0VYVElORjowLEVTUE4KaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTQ4MDUxICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjotMSxFU1BOIEhEIFVTIApodHRwOi8vODAuODAuMTYwLjE2OC9saXZlLzYvbGl2ZS5tM3U4CgojRVhUSU5GOjAsR29sZiBDaGFubmVsCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02OTAyNiAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxOQkEgVFYKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcxNTYyICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLE5CQSBUViBPbmxpbmUKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY5MzEwICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLE5CQ1NOCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02NDIzMiAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxORkwgTmV0d29yawpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzAyOTUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOi0xLCBQYWMgTmF0aW9uYWwgMTA4MCBIRApodHRwOi8veHJ4cy5uZXQvdmlkZW8vbGl2ZS1wMTJuZXR3LTQ3MjgubTN1OD9WZD91I2J0ITI1CiAKI0VYVElORjotMSwgUGFjIEFyaXpvbmEgMTA4MCBIRApodHRwOi8veHJ4cy5uZXQvdmlkZW8vbGl2ZS1wMTJhcml6LTQ3MjgubTN1OD9WZD91I2J0ITI1CiAKI0VYVElORjotMSwgUGFjIEJheSBBcmVhIDcyMCBIRApodHRwOi8veHJ4cy5uZXQvdmlkZW8vbGl2ZS1wMTJiYXlhLTIzMjgubTN1OD9WZD91I2J0ITI1CiAKI0VYVElORjotMSwgUGFjIExvcyBBbmdlbGVzIDEwODAgSEQKaHR0cDovL3hyeHMubmV0L3ZpZGVvL2xpdmUtcDEybG9zYS00NzI4Lm0zdTg/VmQ/dSNidCEyNQogCiNFWFRJTkY6LTEsIFBhYyBNb3VudGFpbiAxMDgwIEhECmh0dHA6Ly94cnhzLm5ldC92aWRlby9saXZlLXAxMm1vdW4tNDcyOC5tM3U4P1ZkP3UjYnQhMjUKIAojRVhUSU5GOi0xLFBBQy0xMiBOZXQuIChOYXRpb25hbCkKaHR0cDovL3hyeHMubmV0L3ZpZGVvL2xpdmUtcDEybmV0dy00NzI4Lm0zdTg/VmQ/dSNidCEyNQogCiNFWFRJTkY6LTEsUEFDLTEyIE5ldC4gKEFyaXpvbmEpCmh0dHA6Ly94cnhzLm5ldC92aWRlby9saXZlLXAxMmFyaXotNDcyOC5tM3U4P1ZkP3UjYnQhMjUKIAojRVhUSU5GOi0xLFBBQy0xMiBOZXQuIChCYXkgQXJlYSkKaHR0cDovL3hyeHMubmV0L3ZpZGVvL2xpdmUtcDEyYmF5YS00NzI4Lm0zdTg/VmQ/dSNidCEyNQogCiNFWFRJTkY6LTEsUEFDLTEyIE5ldC4gKExvcyBBbmdlbGVzKQpodHRwOi8veHJ4cy5uZXQvdmlkZW8vbGl2ZS1wMTJsb3NhLTQ3MjgubTN1OD9WZD91I2J0ITI1CiAKI0VYVElORjotMSxQQUMtMTIgTmV0LiAoTW91dGFpbikKaHR0cDovL3hyeHMubmV0L3ZpZGVvL2xpdmUtcDEybW91bi00NzI4Lm0zdTg/VmQ/dSNidCEyNQogCiNFWFRJTkY6LTEsUEFDLTEyIE5ldC4gKE9yZWdvbikKaHR0cDovL3hyeHMubmV0L3ZpZGVvL2xpdmUtcDEyb3JlZy00NzI4Lm0zdTg/VmQ/dSNidCEyNQogCiNFWFRJTkY6LTEsUEFDLTEyIE5ldC4gKFdhc2hpbmd0b24pCmh0dHA6Ly94cnhzLm5ldC92aWRlby9saXZlLXAxMndhc2gtNDcyOC5tM3U4P1ZkP3UjYnQhMjUKCiNFWFRJTkY6LTEsV1dFIE5ldHdvcmsKaHR0cDovLzM3LjQ4LjgzLjEzMToxOTM1L2xpdmUvd3dlZS9wbGF5bGlzdC5tM3U4P3dvd3phc2Vzc2lvbmlkPTIwNTY4OTU2NTMKCkBAQEBACgpHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIENBTkFEQSBTcG9ydHMgJiBUViAtLVsvQ09MT1JdCgojRVhUSU5GOi0xLENIQ0ggSGFtaWx0b24gSEQKcnRtcDovLzU0Ljg1LjE5Ny4yMToxOTM1L2xpdmUvbmV3cyBsaXZlPTEgdGltZW91dD0xNQojRVhUSU5GOi0xLEdsb2JhbCBUViBWYW5jb3V2ZXIgSEQKaHR0cDovL2xpbmsudGhlcGxhdGZvcm0uY29tL3MvZHRqc0VDL0VxQlBHWUxZNmZFeD9mZWVkPURFViUyMExpdmUlMjBTdHJlYW0lMjBGZWVkCiNFWFRJTkY6LTEsR2xvYmFsIFRWIFRvcm9udG8gSEQKaHR0cDovL2xpbmsudGhlcGxhdGZvcm0uY29tL3MvZHRqc0VDL2hkU0gzaXp0el9qXz9mZWVkPURFViUyMExpdmUlMjBTdHJlYW0lMjBGZWVkCiNFWFRJTkY6LTEsR2xvYmFsIFRWIEhhbGlmYXggSEQKaHR0cDovL2xpbmsudGhlcGxhdGZvcm0uY29tL3MvZHRqc0VDLzc3bDFLQV9HXzVQMT9mZWVkPURFViUyMExpdmUlMjBTdHJlYW0lMjBGZWVkCiNFWFRJTkY6LTEsQ0JDIE5ld3N3b3JsZApydG1wOi8vZC5jZG4ubmV3c2NoYXQudHYvZWRnZSBwbGF5cGF0aD1jYW5hZGFzX2xpdmUgc3dmVXJsPWh0dHA6Ly9tc25iY2xpdmUuZXUvcGxheWVyLnN3ZiBsaXZlPTEgbGl2ZT10cnVlIHBhZ2VVcmw9aHR0cDovL3d3dy5saXZlbmV3c2NoYXQuZXUvY2FuYWRhLwojRVhUSU5GOi0xLENCQyBOZXdzIENoYW5uZWwKcnRtcDovL2MuY2RuLm5ld3NjaGF0LnR2L2VkZ2UgcGxheXBhdGg9Y2JjX2xpdmUgc3dmVXJsPWh0dHA6Ly9uZXdzY2hhdC50di9wbGF5ZXIuc3dmIGxpdmU9MSBsaXZlPXRydWUgcGFnZVVybD1odHRwOi8vd3d3LmxpdmVuZXdzY2hhdC5ldS9jYW5hZGEvCiNFWFRJTkY6LTEsQ1RWIE5ld3MgKE5FVykKaHR0cDovL2NhcGkuOWM5bWVkaWEuY29tL2Rlc3RpbmF0aW9ucy9jdHZuZXdzX3dlYi9wbGF0Zm9ybXMvZGVza3RvcC9jb250ZW50cy82MDg5NDAvY29udGVudHBhY2thZ2VzLzY3ODU3NS9zdGFja3MvMTU2NjA1My9tYW5pZmVzdC5mNG0KI0VYVElORjotMSxDUCBOZXdzIGxpdmUgMSA3MjAgSEQKaHR0cDovL2Ftcy1scDEwLjljOW1lZGlhLmNvbS9oZHMtbGl2ZS9saXZlcGtnci9fZGVmaW5zdF8vbGl2ZU5ld3MvQ1AyNE5ld3MxOC5mNG0KI0VYVElORjotMSxDUDI0IE5ld3MgTGl2ZSAyIDcyMEhECmh0dHA6Ly9hbXMtbHA3LjljOW1lZGlhLmNvbS9oZHMtbGl2ZS9saXZlcGtnci9fZGVmaW5zdF8vbGl2ZU5ld3MvQ1AyNE5ld3MyOC5mNG0KI0VYVElORjotMSxIaXN0b3J5IChDYW5hZGEpIEhECmh0dHA6Ly9saW5rLnRoZXBsYXRmb3JtLmNvbS9zL2R0anNFQy9jaGpkWUp4S2I0NFY/bWFuaWZlc3Q9bTN1JmZlZWQ9SGlzdG9yeSUyMExpdmUlMjBTdHJlYW0lMjBGZWVkCiNFWFRJTkY6LTEsVFNDIExpdmUgSEQKaHR0cDovL3RzY3N0cmVhbWluZy1saC5ha2FtYWloZC5uZXQvaS9UU0NMaXZlU3RyZWFtaW5nXzFAOTEwMzEvaW5kZXhfM19hdi1wLm0zdTgKI0VYVElORjotMSxFdXJvU3BvcnQgSEQgKCBGUkVOQ0ggKQpodHRwOi8vZXNpb3NsaXZlNi1pLmFrYW1haWhkLm5ldC9obHMvbGl2ZS8yMDI4OTIvQUxfUF9FU1AxX0ZSX0ZSQS9wbGF5bGlzdC5tM3U4IAojRVhUSU5GOi0xLEZveCBTcG9ydHMgSEQKaHR0cDovL2ZveHNwb3J0c2hkaGxzLWxoLmFrYW1haWhkLm5ldC9pL2ZzbmV3c2hsc18wQDEzNjQyNy9pbmRleF8yMTI4X2F2LXAubTN1OAojRVhUSU5GOi0xLFNwb3J0c25ldCBPbmUKcnRtcDovLzEwOS4xMjMuNzAuMzg6ODAvbGl2ZSBwbGF5cGF0aD1zcG9ydHNuZXR3IHN3ZlVybD1odHRwOi8vcC5qd3BjZG4uY29tLzYvMTIvandwbGF5ZXIuZmxhc2guc3dmIGxpdmU9MSBwYWdlVXJsPWh0dHA6Ly9yZXl0di5jby9lbWJlZG8ucGhwP2xpdmU9c3BvcnRzbmV0dyZ2dz02MjAmdmg9NDkwIHRva2VuPSVacmV5KG5LYUAjWiB0aW1lb3V0PTEwCiNFWFRJTkY6LTEsU3BvcnRzbmV0IE9udGFyaW8KcnRtcDovLzMxLjIyMC4wLjE5NTo4MC9saXZlIHBsYXlwYXRoPXNubyBzd2ZVcmw9aHR0cDovL3AuandwY2RuLmNvbS82LzEyL2p3cGxheWVyLmZsYXNoLnN3ZiBsaXZlPTEgcGFnZVVybD1odHRwOi8vcmV5dHYuY28vZW1iZWRvLnBocD9saXZlPXNubyZ2dz02MjAmdmg9NDkwIHRva2VuPSVacmV5KG5LYUAjWiB0aW1lb3V0PTEwCiNFWFRJTkY6LTEsU3BvcnRzbmV0IFdvcmxkCnJ0bXA6Ly8xNzguMTguMzEuNTM6NDQzL2xpdmVyZXBlYXRlciBwbGF5cGF0aD0xOTEzMDQgc3dmVXJsPWh0dHA6Ly9iZXJuYXJkb3R2LmNsdWIvZnVja2luZ2NvcHkuc3dmIGxpdmU9MSBwYWdlVXJsPWh0dHA6Ly9iaWdnZXN0cGxheWVyLm1lL3N0cmVhbWNyLnBocD9pZD0xOTEzMDQmd2lkdGg9NjIwJmhlaWdodD00OTAgdG9rZW494oCqI+KAjmF0ZOKArCUjJFpIIHRpbWVvdXQ9MTAKI0VYVElORjotMSwzNjAgTm9ydGggKEFMQVNLQSkKaHR0cDovL3N0YXRlLmFrLnR2d21lZGlhLm5ldDoxOTM1L2t0b28tbGl2ZS9fZGVmaW5zdF8vMzYwbm9ydGgvcGxheWxpc3QubTN1OAojRVhUSU5GOi0xLFNwb3J0c25ldCAzNjAgNzIwIEhECmh0dHA6Ly9ubGRzMTg3LmNkbmFrLm5ldWxpb24uY29tL25sZHMvc3BvcnRzbmV0bm93L3NuXzM2MC9hcy9saXZlL3NuXzM2MF9oZF9pcGFkLm0zdTgKI0VYVElORjotMSxUU04gMQpydG1wOi8vOTMuMTU4LjIxNy4yMDI6ODAvbGl2ZSBwbGF5cGF0aD10eDEgc3dmVXJsPWh0dHA6Ly9wLmp3cGNkbi5jb20vNi8xMi9qd3BsYXllci5mbGFzaC5zd2YgbGl2ZT0xIGxpdmU9dHJ1ZSBwYWdlVXJsPWh0dHA6Ly9yZXl0di5jby9lbWJlZG8ucGhwP2xpdmU9dHgxJnZ3PTYyMCZ2aD00OTAgdG9rZW49JVpyZXkobkthQCNaIHRpbWVvdXQ9MTAKI0VYVElORjotMSxUU04gMgpydG1wOi8vMTc4LjE4LjMxLjU1OjQ0My9saXZlcmVwZWF0ZXIgcGxheXBhdGg9MTkxNzg0IHN3ZlVybD1odHRwOi8vYmlnZ2VzdHBsYXllci5jYWNoZWZseS5uZXQvZ29mdWNreW91cnNlbGYuc3dmIGxpdmU9MSBsaXZlPXRydWUgcGFnZVVybD1odHRwOi8vYmlnZ2VzdHBsYXllci5tZS9zdHJlYW1jci5waHA/aWQ9MTkxNzg0JndpZHRoPTYyMCZoZWlnaHQ9NDkwIHRva2VuPeKAqiPigI5hdGTigKwlIyRaSCB0aW1lb3V0PTEwCiNFWFRJTkY6LTEsQ0lDQyBDVFYgWW9ya3RvbgpodHRwOi8vMTk4LjE3OS4zMS4xOTgvbGl2ZS8yMDUzLmhpZ2guc3RyZWFtLzIwNTMuaGlnaC5zdHJlYW0vaW5kZXgubTN1OAojRVhUSU5GOi0xLENGUk4gQ1RWIEVkbW9udG9uCmh0dHA6Ly8xOTguMTc5LjMxLjE5OC9saXZlLzIwNTYuaGlnaC5zdHJlYW0vMjA1Ni5oaWdoLnN0cmVhbS9pbmRleC5tM3U4CiNFWFRJTkY6LTEsQ0tDSyBDVFYgUmVnaW5hCmh0dHA6Ly8xOTguMTc5LjMxLjE5OC9saXZlLzIwNTkuaGlnaC5zdHJlYW0vMjA1OS5oaWdoLnN0cmVhbS9pbmRleC5tM3U4CiNFWFRJTkY6LTEsQ0ZDTi01IENUViBMZXRoYnJpZGdlCmh0dHA6Ly8xOTguMTc5LjMxLjE5OC9saXZlLzIwNjIuaGlnaC5zdHJlYW0vMjA2Mi5oaWdoLnN0cmVhbS9pbmRleC5tM3U4CiNFWFRJTkY6LTEsVGhlIFNob3BwaW5nIENoYW5uZWwgSEQKaHR0cDovL3RzY3N0cmVhbWluZy1saC5ha2FtYWloZC5uZXQvaS9UU0NMaXZlU3RyZWFtaW5nXzFAOTEwMzEvaW5kZXhfM19hdi1wLm0zdTgKI0VYVElORjotMSxUaGUgU2hvcHBpbmcgQ2hhbm5lbCBIRApodHRwOi8vdHNjc3RyZWFtaW5nLWxoLmFrYW1haWhkLm5ldC9pL1RTQ0xpdmVTdHJlYW1pbmdfMUA5MTAzMS9pbmRleF8zX2F2LWIubTN1OAojRVhUSU5GOi0xLENQQUMgSEQKaHR0cDovL2JjbGl2ZXVuaXYtbGguYWthbWFpaGQubmV0L2kvY3BhYzFlbmcyMDE0XzAxQDExOTMzMC9pbmRleF8yMDAwX2F2LXAubTN1OAojRVhUSU5GOi0xLENQQUMgSEQKaHR0cDovL2JjbGl2ZXVuaXYtbGguYWthbWFpaGQubmV0L2kvY3BhYzFmbHIyMDE0XzAxQDUxMjMwL2luZGV4XzIwMDBfYXYtcC5tM3U4CiNFWFRJTkY6LTEsV2VhdGhlciBOZXR3b3JrIEhEIChmaXhlZCkKaHR0cDovL2Jjb3ZlbGl2ZWlvcy1pLmFrYW1haWhkLm5ldC9obHMvbGl2ZS8yMDc3MzcvMTk0MjIwMzQ1NTAwMS9uYXQvbWFzdGVyX0xheWVyNS5tM3U4IAojRVhUSU5GOi0xLENCQyBOZXdzCnJ0bXA6Ly9hLmNkbi5uZXdzY2hhdC50di9lZGdlIHBsYXlwYXRoPWNiY19saXZlIHN3ZlVybD1odHRwOi8vbXNuYmNsaXZlLmV1L3BsYXllci5zd2YgcGFnZVVybD1odHRwOi8vd3d3LmxpdmVuZXdzY2hhdC5ldS9jYW5hZGEvIGxpdmU9MSB0aW1lb3V0PTE1CiNFWFRJTkY6LTEsQVJURSAoRnJlbmNoKQpodHRwOi8vZnJsaXZlLmFydGVzdHJhcy5jc2hscy5sbGRucy5uZXQvYXJ0ZXN0cmFzL2NvbnRyaWIvZnJsaXZlL2ZybGl2ZV85MjUubTN1OAojRVhUSU5GOi0xLExDTiBOZXdzIChGcmVuY2gpCnJ0bXA6Ly9jcDM5NDE0LmxpdmUuZWRnZWZjcy5uZXQvbGl2ZS8gcGxheXBhdGg9bGNuMkA5NzU0IHN3ZlVybD1odHRwOi8vd3d3LmNlbnRyYWx0di5mci9qd3BsYXllci9qd3BsYXllci5mbGFzaC5zd2YgbGl2ZT0xIHBhZ2VVcmw9aHR0cDovL3d3dy5jZW50cmFsdHYuZnIvY2FuYWRhLXRlbGV2aXNpb24vbGNuLW5ld3MgdGltZW91dD0xNQojRVhUSU5GOi0xLEFyZ2VudCAoRnJlbmNoKQpydG1wOi8vY3AzOTQxNC5saXZlLmVkZ2VmY3MubmV0OjQ0My9saXZlIHBsYXlwYXRoPWFyZ2VudEA5NzUxIHN3ZlVybD1odHRwOi8vZnBkb3dubG9hZC5hZG9iZS5jb20vc3Ryb2JlL0ZsYXNoTWVkaWFQbGF5YmFja18xMDEuc3dmL1tbRFlOQU1JQ11dLzEgbGl2ZT0xIHBhZ2VVcmw9aHR0cDovL3RlbGUtZW4tZGlyZWN0LmJsb2dzcG90LmNvbS8yMDE0LzA1L2FyZ2VudC10di1jYW5hZGEtZW4tZGlyZWN0Lmh0bWwgdGltZW91dD0xNQojRVhUSU5GOi0xLENUViBOZXdzIExpdmUgSEQKaHR0cDovL2Ftcy1scDEwLjljOW1lZGlhLmNvbS9obHMtbGl2ZS9saXZlcGtnci9fZGVmaW5zdF8vbGl2ZU5ld3MvTmV3czE4Lm0zdTgKI0VYVElORjotMSxDVFYgTmV3cyBMaXZlIEhECmh0dHA6Ly9hbXMtbHA3LjljOW1lZGlhLmNvbS9obHMtbGl2ZS9saXZlcGtnci9fZGVmaW5zdF8vbGl2ZU5ld3MvTmV3czI4Lm0zdTgKCgpAQEBAQApHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIE5ld3MgLS1bL0NPTE9SXQojRVhUSU5GOi0xLFNreSBOZXdzCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXNreW5ld3Mmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QubmV0LwojRVhUSU5GOi0xLENOQkMgTmV3cwpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1jbmJjJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0Lm5ldC8KI0VYVElORjotMSxDTk4KaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9Y245OSZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC5uZXQvCiNFWFRJTkY6LTEsQkJDIE5ld3MKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9YmJjbmV3cyZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC5uZXQvCiNFWFRJTkY6LTEsQmxvb21iZXJnCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWJsb29tYmVyZyZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC5uZXQvCiNFWFRJTkY6LTEsRm94IE5ld3MKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9Zm94bmVlcyZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC5uZXQvCiNFWFRJTkY6LTEsQ05OIEV1cm9wZQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1jbjk5JnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0Lm5ldC8KCgpAQEBAQApHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIEtJRFMgLS1bL0NPTE9SXQojRVhUSU5GOi0xLENhcnRvb24gTmV0d29yawpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1jbjg4OCZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC5uZXQvCiNFWFRJTkY6LTEsRGlzbmV5IENoYW5uZWwKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9ZGlzbmV5JnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0Lm5ldC8KI0VYVElORjotMSxEaXNuZXkgSnIKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9ZGlzbmV5anImdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QubmV0LwojRVhUSU5GOi0xLE5pY2tlbG9kZW9uCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PW5pY2s2NjYmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QubmV0LwojRVhUSU5GOi0xLE5pY2tlbG9kZW9uCmh0dHA6Ly96ZXJvY2FzdC50di9lbWJlZC5waHA/YT0xNCZpZD0md2lkdGg9NTgwJmhlaWdodD00MDAmYXV0b3N0YXJ0PXRydWUmc3RyZWNoPSAmUkVGJmh0dHA6Ly96ZXJvY2FzdC50di8KI0VYVElORjotMSxOaWNrZWxvZGVvbgpodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02MjAmaGVpZ2h0PTQ3MCZpZD1raWNuaWNrJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL3VzYWNoYW5uZWxzLnR2L25pY2sucGhwCgpAQEBAQApHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIERPQ1VNRU5UQVJJRVMgLS1bL0NPTE9SXQojRVhUSU5GOi0xLEFuaW1hbCBQbGFuZXQKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9YW5pbWFsJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0Lm5ldC8KI0VYVElORjotMSxEaXNjb3ZlcnkgQ2hhbm5lbApodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1kaXNjb3Zlcnkmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QubmV0LwojRVhUSU5GOi0xLERpc2NvdmVyeSBJRApodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1kaXNjb3ZlcnlpJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0Lm5ldC8KI0VYVElORjotMSxEaXNjb3ZlcnkgU2NpZW5jZQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1kaXNjb3ZlcnlzJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0Lm5ldC8KI0VYVElORjotMSxOYXRpb25hbCBHZW9ncmFwaGljIENoYW5uZWwKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9bmF0Z2VvJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0Lm5ldC8KI0VYVElORjotMSxOYXQgR2VvIFdpbGQKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9bmF0Z2VvaGQmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QubmV0LwoKQEBAQEAKR0VOUkUsIFtDT0xPUiBncmVlbl0tLSBNdXNpYyAtLVsvQ09MT1JdCgojRVhUSU5GOi0xLEhlYXJ0Cmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWhlYXJ0JnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0Lm5ldC8KI0VYVElORjotMSxGbGF2YQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1mbGF2YSZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC5uZXQvCiNFWFRJTkY6LTEsTWFnaWMKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9bWFnaWMmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QubmV0LwojRVhUSU5GOi0xLE1UViBDbGFzc2ljCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PW10dmNsYXNzaWMmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QubmV0LwojRVhUSU5GOi0xLE1UViBIaXRzCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PW10dmhpdHMmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QubmV0LwojRVhUSU5GOi0xLE1UViBNdXNpYwpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1tdHZtdXNpYyZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC5uZXQvCiNFWFRJTkY6LTEsVmF1bHQKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9dGhldmF1bHQmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QubmV0LwoKQEBAQEAKCkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gT3RoZXIgTGl2ZSBTcG9ydHMgLS1bL0NPTE9SXQoKI0VYVElORjotMSxEaWdpIFNwb3J0IDEKcnRtcDovLzE5NS4xNTQuMTYyLjE1OTo4MC9saXZlcmVwZWF0ZXIgcGxheXBhdGg9MTI4NzQ2IHN3ZlVybD1odHRwOi8vY2RuLmdvb2RjYXN0LmNvL3BsYXllcnMuc3dmIGxpdmU9dHJ1ZSBwYWdlVXJsPWh0dHA6Ly9kZWx0YXR2LnB3LyB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCB0aW1lb3V0PTE1CiNFWFRJTkY6LTEsRElHSSBTUE9SVCAxCnJ0bXA6Ly8xOTUuMTU0LjE2Mi4xNTk6ODAvbGl2ZXJlcGVhdGVyIHBsYXlwYXRoPTEyODc0NiBzd2ZVcmw9aHR0cDovL2Nkbi5nb29kY2FzdC5jby9wbGF5ZXJzLnN3ZiBsaXZlPXRydWUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggZmxhc2h2ZXI9V0lOLzIwMTgsMCwwLDE2MCB0aW1lb3V0PTEzIHN3ZlZmeT0xICBwYWdlVXJsPWh0dHA6Ly9kZWx0YXR2LnB3LwojRVhUSU5GOi0xLERJR0kgU1BPUlQgMgpydG1wOi8vMTk1LjE1NC4xNjIuMTU5OjgwL2xpdmVyZXBlYXRlciBwbGF5cGF0aD0xMjg3NDcgc3dmVXJsPWh0dHA6Ly9jZG4uZ29vZGNhc3QuY28vcGxheWVycy5zd2YgbGl2ZT10cnVlIHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGZsYXNodmVyPVdJTi8yMDE4LDAsMCwxNjAgdGltZW91dD0xMyBzd2ZWZnk9MSAgcGFnZVVybD1odHRwOi8vZGVsdGF0di5wdy8KI0VYVElORjotMSxESUdJIFNQT1JUIDMKcnRtcDovLzE5NS4xNTQuMTYyLjE1OTo4MC9saXZlcmVwZWF0ZXIgcGxheXBhdGg9MTI4NzQ4IHN3ZlVybD1odHRwOi8vY2RuLmdvb2RjYXN0LmNvL3BsYXllcnMuc3dmIGxpdmU9dHJ1ZSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBmbGFzaHZlcj1XSU4vMjAxOCwwLDAsMTYwIHRpbWVvdXQ9MTMgc3dmVmZ5PTEgIHBhZ2VVcmw9aHR0cDovL2RlbHRhdHYucHcvCgpAQEBAQApHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIDI0LzcgU3RyZWFtcyAtLVsvQ09MT1JdCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1BZHZlbnR1cmUgVGltZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvYWR2ZW50dXJlLXRpbWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1BbHdheXMgU3VubnkgaW4gUGhpbGFkZWxwaGlhIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9hbHdheXMtc3VubnktaW4tcGhpbGFkZWxwaGlhICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQW1lcmljYW4gRGFkIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9hbWVyaWNhbi1kYWQgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1BcmNoZXIgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2FyY2hlciAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUFxdWEgVGVlbiBIdW5nZXIgRm9yY2UgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2FxdWEtdGVlbi1odW5nZXItZm9yY2UgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CZXR0ZXIgQ2FsbCBTYXVsIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9iZXR0ZXItY2FsbC1zYXVsICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQm9icyBCdXJnZXJzIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9ib2JzLWJ1cmdlcnMgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CcmVha2luZyBCYWQgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2JyZWFraW5nLWJhZCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJyaWNrbGViZXJyeSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvYnJpY2tsZWJlcnJ5ICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dR3JlZW5kYWxlIENvbGxlZ2UgKCBDb21tdW5pdHkgKSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZ3JlZW5kYWxlLWNvbGxlZ2UgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1GYW1pbHkgR3V5IEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9mYW1pbHktZ3V5ICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRnV0dXJhbWEgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2Z1dHVyYW1hICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dR2FtZSBPZiBUaHJvbmVzIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9nYW1lLW9mLXRocm9uZXMgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1IZXJvZXMgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2hlcm9lcyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUhvdyBJIE1ldCBZb3VyIE1vdGhlciBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvaGlteW0gJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Ib3VzZSBNRCBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvaG91c2UtbWQgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Ib3VzZSBPZiBDYXJkcyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvaG91c2Utb2YtY2FyZHMgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1LaW5nIE9mIFRoZSBIaWxsIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9raW5nLW9mLXRoZS1oaWxsICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTG9zdCBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvbG9zdCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU1hZCBNZW4gSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L21hZC1tZW4gJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1NYW4gVnMgV2lsZCBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvbWFuLXZzLXdpbGQtZW4gJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Qb2tlciBDaGFubmVsIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9wb2tlci1zdHJlYW0gJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1SaWNrIEFuZCBNb3J0eSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvcmljay1hbmQtbW9ydHkgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1TY3J1YnMgTUQgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3NjcnVicyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVNtYWxsdmlsbGUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3NtYWxsdmlsbGUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Tb25zIE9mIEFuYXJjaHkgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3NvbnMtb2YtYW5hcmNoeSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVNvdXRoIFBhcmsgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3NvdXRoLXBhcmstaGQgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1TcGFydGFjdXMgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3NwYXJ0YWN1cyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVN0YXJnYXRlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9zdGFyZ2F0ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVN1cGVybmF0dXJhbCBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvc3VwZXJuYXR1cmFsICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVGhlIDEwMCBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdGhlLTEwMCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVRoZSBCaWcgQmFuZyBUaGVvcnkgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3RoZS1iaWctYmFuZy10aGVvcnkgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1UaGUgQ2xldmVsYW5kIFNob3cgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3RoZS1jbGV2ZWxhbmQtc2hvdyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVRoZSBPZmZpY2UgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3RoZS1vZmZpY2UgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1UaGUgU2ltcHNvbnMgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3NpbXBzb25zLWhkICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVGhlIFdhbGtpbmcgRGVhZCBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdGhlLXdhbGtpbmctZGVhZCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVRyaXAgVGFuayBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdHJpcHRhbmsgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1XZWVkcyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvd2VlZHMgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Xb3JrYWhvbGljcyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvd29ya2Fob2xpY3MgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLDMwIFJvY2sKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9MzByb2NrJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KI0VYVElORjotMSxBbGllbnMgJiBVZm8ncwpodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9hbGllbnNhbmR1Zm9zP2FsaWVuc2FuZHVmb3MgJlJFRiZodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9hbGllbnNhbmR1Zm9zCiNFWFRJTkY6LTEsQWR2ZW50dXJlIFRpbWUKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19hdD9sbXNob3dzX2F0ICZSRUYmaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19hdAojRVhUSU5GOi0xLEFycmVzdGVkIERldmVsb3BtZW50IApodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1hcnJlc3RlZCZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdCAmUkVGJmh0dHA6Ly9oZGNhc3QubWUvCiNFWFRJTkY6LTEsQmVhc3QgV2FycwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzIwMzkmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KI0VYVElORjotMSxHYW1lIE9mIFRocm9uZXMKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9Z290aWImYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vaGRjYXN0Lm1lLwojRVhUSU5GOi0xLENodWNrIApodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1jaHVjayZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdCAmUkVGJmh0dHA6Ly9oZGNhc3QubWUvCiNFWFRJTkY6LTEsQ3JpbWUgQ2VudHJhbApodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9jcmltZWNlbnRyYWw/bG1zaG93c19uZ2JiYyAmUkVGJmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2xtc2hvd3NfbmdiYmMKI0VYVElORjotMSxEZXh0ZXIgCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWRleHRlciZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdCAmUkVGJmh0dHA6Ly9oZGNhc3QubWUvCiNFWFRJTkY6LTEsRGlzY292ZXJ5IEhvdXNlCmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2Rpc2NvdmVyeWhvdXNlP2Rpc2NvdmVyeWhvdXNlICZSRUYmaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vZGlzY292ZXJ5aG91c2UKI0VYVElORjotMSxEcmFnb25CYWxsIEdUCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD01MzEwNSZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwojRVhUSU5GOi0xLERyIFdobyAKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9ZHJ3aG8mYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vaGRjYXN0Lm1lLwojRVhUSU5GOi0xLEZhbWlseSBHdXkKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTU1MTgyJmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCiNFWFRJTkY6LTEsRnJpZW5kcyAKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9ZnJpZW5kcyZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdCAmUkVGJmh0dHA6Ly9oZGNhc3QubWUvCiNFWFRJTkY6LTEsRnJpbmdlIApodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1mcmluZ2UmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vaGRjYXN0Lm1lLwojRVhUSU5GOi0xLEZsaW50c3RvbmVzIApodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1mbGludHN0b25lcyZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdCAmUkVGJmh0dHA6Ly9oZGNhc3QubWUvCiNFWFRJTkY6LTEsSGF1bnRlZCBIb3VzZQpodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9oYXVudGVkaG91c2U/aGF1bnRlZGhvdXNlICZSRUYmaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vaGF1bnRlZGhvdXNlCiNFWFRJTkY6LTEsSG9tZSBJbXByb3ZlbWVudHMKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19oaT9sbXNob3dzX2hpICZSRUYmaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19oaQojRVhUSU5GOi0xLEhvdXNlCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWhvdXNlJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KI0VYVElORjotMSxIYXJkY29yZSBQYXduL1Bhd24gU3RhcnMvU3RvcmFnZSBXYXJzL0Zhc3QgTiBMb3VkCmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2xtc2hvd3NfaHBzP2xtc2hvd3NfaHBzICZSRUYmaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19ocHMKI0VYVElORjotMSxJbXByYWN0aWNhbCBKb2tlcnMKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19paj9sbXNob3dzX2lqICZSRUYmaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19pagojRVhUSU5GOi0xLEphY2tpZSBDaGFuIE1vdmllcyAoIDE5OTEtMjAwOCApCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD0zNzAwMiZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwojRVhUSU5GOi0xLExhdyAmIE9yZGVyCmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2dldHlvdXJkb2Nzb2ZmP2dldHlvdXJkb2Nzb2ZmICZSRUYmaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vZ2V0eW91cmRvY3NvZmYKI0VYVElORjotMSxMb29uZXkgVG9vbnMKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9bG9vbmV5JmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KI0VYVElORjotMSxNYW4gV29tYW4gV2lsZC8gU3Vydml2b3JtYW4KaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19td3M/bG1zaG93c19td3MgJlJFRiZodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX213cwojRVhUSU5GOi0xLE1hcnJpZWQgV2l0aCBDaGlsZHJlbgpodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX213Yz9sbXNob3dzX213YyAmUkVGJmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2xtc2hvd3NfbXdjCiNFWFRJTkY6LTEsTmF0aW9uYWwgR2VvZ3JhcGhpYy8gQkJDIE5hdHVyZQpodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX25nYmJjP2xtc2hvd3NfbmdiYmMgJlJFRiZodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX25nYmJjCiNFWFRJTkY6LTEsUmVndWxhciBTaG93Cmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2xtc2hvd3NfcnM/bG1zaG93c19ycyAmUkVGJmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2xtc2hvd3NfcnMKI0VYVElORjotMSxTZWluZmllbGQKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9c2VpbmZpZWxkJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KI0VYVElORjotMSxTY3J1YnMKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9c2NydWJzJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KI0VYVElORjotMSxTdGFyZ2F0ZSBTRzEKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vc2cxZ2F0ZT9zZzFnYXRlICZSRUYmaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vc2cxZ2F0ZQojRVhUSU5GOi0xLFN1aXRzCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPXN1aXRzJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0CiNFWFRJTkY6LTEsU291dGggUGFyawpodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1zb3V0aHBhcmsmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQKI0VYVElORjotMSxUaGUgS2luZyBPZiBRdWVlbnMKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19rb3E/bG1zaG93c19rb3EgJlJFRiZodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX2tvcQojRVhUSU5GOi0xLFRoZSBLaW5nIE9mIFF1ZWVucwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9MzgyMTMmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KI0VYVElORjotMSxUaGUgU2ltcHNvbnMKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9c2ltcHNvbnMmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vaGRjYXN0Lm1lLwojRVhUSU5GOi0xLFRoZSBCaWcgQmFuZyBUaGVvcnkKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9YmlnYmFuZyZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdCAmUkVGJmh0dHA6Ly9oZGNhc3QubWUvCiNFWFRJTkY6LTEsVGhlIEJ1Z3MgQnVubnkgU2hvdwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzIwNDAmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KI0VYVElORjotMSxUb20gJiBKZXJyeQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzIwMzgmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KI0VYVElORjotMSxUb20gJiBKZXJyeSAoIG1pZ2h0IGNoYW5nZSB0byBvdGhlciBjYXJ0b29ucykKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9dG9tamVycnkmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vaGRjYXN0Lm1lLwojRVhUSU5GOi0xLFN1cHJhbm9zCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPXNvcHJhbm9zJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KCgpAQEBAQAoKR0VOUkUsIFtDT0xPUiBncmVlbl0tLSBGcmVuY2ggTGl2ZSBUdiAtLVsvQ09MT1JdCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl02IFRlciBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvNnRlciAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUFydGUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2FydGUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CZWluIEZyYW5jZSAxIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9iZWluLWZyYW5jZS0xICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQmVpbiBGcmFuY2UgMiBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvYmVpbi1mcmFuY2UtMiAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJGTSBUdiBOZXdzIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9iZm0tdHYgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1DYW1lcmEgQ2FmZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvY2FtZXJhLWNhZmUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1DYW5hbCsgU3BlY2lhbCBJbnZlc3RpZ2F0aW9uIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9zcGVjaWFsLWludmVzdGlnYXRpb24gJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1EMTcgTGl2ZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZDE3ICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRDggTGl2ZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZDgtbGl2ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXURpdmVycyBEb2NzIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9kaXZlcnMtZG9jcyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXURyYWdvbmJhbGwtWiBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZHJhZ29uYmFsbC1kYnogJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1EaXNjb3ZlcnkgQ2hhbm5lbCBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZGlzY292ZXJ5ICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRXVyb05ld3MgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2V1cm9uZXdzICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRXVyb1Nwb3J0IEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9ldXJvc3BvcnQgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1FdXJvU3BvcnQgMiBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZXVyb3Nwb3J0LTIgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1GaW5hbmNlIEV0IE1vbmRpYWxpc21lIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9maW5hbmNlLWV0LW1vbmRpYWxpc21lICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRnJhbmNlIDI0IExpdmUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2ZyYW5jZS0yNCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUZyYW5jZSAwIExpdmUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2ZyYW5jZS1vICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRnJhbmNlIDIgTGl2ZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZnJhbmNlLTItZGlyZWN0ICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRnJhbmNlIDIgTGl2ZSBIRCAoQUxUKVsvQ09MT1JdCmh0dHA6Ly9zdHJlYW0uc3RyZWFtaW5nLWh1Yi5jb206ODA4MC9zaW11bGNhc3QvRnJhbmNlXzIvaGxzX3YxL0ZyYW5jZV8yLWF1ZGlvX0FBQ0xfZnJhXzcwMDAwXzMxNT03MDAwMC12aWRlbz0xMTgwMDAubTN1OHxYLUZvcndhcmRlZC1Gb3I9NS4xNTMuMTI3LjI1NQojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1GcmFuY2UgMyBMaXZlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9mcmFuY2UtMy1saXZlICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRnJhbmNlIDMgTGl2ZSBIRCAoQUxUKVsvQ09MT1JdCmh0dHA6Ly9zdHJlYW0uc3RyZWFtaW5nLWh1Yi5jb206ODA4MC9zaW11bGNhc3QvRnJhbmNlXzMvaGxzX3YxL0ZyYW5jZV8zLWF1ZGlvX0FBQ0xfZnJhXzcwMDAwXzMyNT03MDAwMC12aWRlbz0xMTgwMDAubTN1OHxYLUZvcndhcmRlZC1Gb3I9NS4xNTMuMTI3LjI1NQojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1GcmFuY2UgNCBMaXZlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9mcmFuY2UtNCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUZyYW5jZSA1IExpdmUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2ZyYW5jZS01LWxpdmUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1IaXN0b2lyZSBMaXZlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9oaXN0b2lyZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUhISCBJTlTDiUdSQUxFIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9oLWludGVncmFsZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUkgVMOJTMOJIE5ld3MgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2ktdGVsZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUogaXJhaSBkb3JtaXIgY2hleiB2b3VzIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9qLWlyYWktZG9ybWlyLWNoZXotdm91cyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUthYW1lbG90dCBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUva2FhbWVsb3R0ICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTCfDqXF1aXBlIDIxIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9sLWVxdWlwZS0yMSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUwnIFVuaXZlcnMgZXQgc2VzIE15c3TDqHJlcyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvbC11bml2ZXJzLWV0LXNlcy1teXN0ZXJlcyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUxDUCBIRFsvQ09MT1JdCmh0dHA6Ly9zdHJlYW0tMDkudnR5LmRhaWx5bW90aW9uLmNvbS8xNS9kbS8xL3hqaTNxeS9saXZlLmlzbWwvbGl2ZS5mNG0KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTTYgTGl2ZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvbTYtbGl2ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU02IE11c2ljIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9tNi1tdXNpYyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU1hbiBWcyBXaWxkIEZSIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9tYW4tdnMtd2lsZCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU5hdHVyZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvbmF0dXJlLWhkICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTmF0aW9uYWwgZ2VvZ3JhcGhpYyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvbmF0aW9uYWwtZ2VvZ3JhcGhpYyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU5hdCBnZW8gV2lsZCBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvbmF0LWdlby13aWxkICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTlJKMTIgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L25yai0xMiAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVBsYW5ldGUgKyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvcGxhbmV0ZS1wbHVzICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dUGxhbmV0ZSArIFRoYWxhc3NhIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9wbGFuZXRlLXRoYWxhc3NhICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dUk1DIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9ybWMgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1SVEw5IEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9ydGw5ICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dU29kYSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvc29kYSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVNvdXRoIFBhcmsgRlIgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3NvdXRoLXBhcmstZnIgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1TdGFyZ2F0ZSBTZzEgU2dhIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9zdGFyZ2F0ZS1zZzEtc2dhICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVEYxIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS90ZjEgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1UaGF0IDcwJ3MgU2hvdyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvNzAtc2hvdyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVRNQyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdG1jICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVFY1IEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS90djUtaGQgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1UdiBSZXBsYXkgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3R2LXJlcGxheSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVR2IFNjaWVuc2VzIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS90di1zY2llbmNlcyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVVOREVSR1JPT1YgQ0hBTk5FTCBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdW5kZXJncm9vdi1taWtlZGFzaWxrICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVW4gZ2FycyBVbmUgZmlsbGUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3VuLWdhcnMtdW5lLWZpbGxlICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVzkgTGl2ZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdzktbGl2ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLENhbmFsKyBDaW5lbWEKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcwNzMxJmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCiNFWFRJTkY6LTEsQ2FuYWwrIFNwb3J0cwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzA0NjcmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KI0VYVElORjotMSxDYW5hbCsgRmFtaWx5Cmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MTgzMSZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwojRVhUSU5GOi0xLERpc2NvdmVyeSBDaGFubmVsIEZyYW5jZQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzAyMTImYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KI0VYVElORjotMSxTeUZ5Cmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MDczMCZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKQEBAQEAKR0VOUkUsIFtDT0xPUiBncmVlbl0tLSBTcGFuaXNoIExpdmUgVHYgLS1bL0NPTE9SXQojRVhUSU5GOi0xLENpbmUKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19oaT9jaW5lbXVuZG8gJlJFRiZodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX2hpCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUxhIFNleHRhWy9DT0xPUl0KaHR0cDovL2EzbGl2ZS1saC5ha2FtYWloZC5uZXQvaS9sYXNleHRhXzFAMzUyNzIvbWFzdGVyLm0zdTgKQEBAQEA=