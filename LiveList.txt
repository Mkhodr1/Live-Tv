77u/R0VOUkUsIFtDT0xPUiB5ZWxsb3ddKioqKioqKioqIFRISVMgTElTVCBJUyBGT1IgVkRVQlQyNSBBRERPTiAqKioqKioqKlsvQ09MT1JdCgpAQEBAQApHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIExpdmUgU3BvcnRzIC0tWy9DT0xPUl0KCgpAQEBAQApHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIEFjZXN0cmVhbXMgKCBwMnAtc3RyZWFtcyBtdXN0IGJlIGluc3RhbGxlZCkgLS1bL0NPTE9SXQojRVhUSU5GOi0xLFNwb3J0c25ldCBvbmUKcGx1Z2luOi8vcGx1Z2luLnZpZGVvLnAycC1zdHJlYW1zLz91cmw9aHR0cDovL2NvbnRlbnQudG9ycmVudC10di5ydS8xMzA5NC5hY2VsaXZlJm1vZGU9MSZuYW1lPVNwb3J0c05ldCtIRAojRVhUSU5GOi0xLFNwb3J0c25ldCBXb3JsZApwbHVnaW46Ly9wbHVnaW4udmlkZW8ucDJwLXN0cmVhbXMvP3VybD1odHRwOi8vY29udGVudC50b3JyZW50LXR2LnJ1LzEzMDI4LmFjZWxpdmUmbW9kZT0xJm5hbWU9U3BvcnRzTmV0K1dvcmxkK0hECiNFWFRJTkY6LTEsVFNOIDEgSEQKcGx1Z2luOi8vcGx1Z2luLnZpZGVvLnAycC1zdHJlYW1zLz91cmw9aHR0cDovL2NvbnRlbnQudG9ycmVudC10di5ydS8xMzA5MS5hY2VsaXZlJm1vZGU9MSZuYW1lPVRTTisxK0hECiNFWFRJTkY6LTEsVFNOIDIgSEQKcGx1Z2luOi8vcGx1Z2luLnZpZGVvLnAycC1zdHJlYW1zLz91cmw9aHR0cDovL2NvbnRlbnQudG9ycmVudC10di5ydS8xMzA5Mi5hY2VsaXZlJm1vZGU9MSZuYW1lPVRTTisyK0hECiNFWFRJTkY6LTEsVFNOIDMgSEQKcGx1Z2luOi8vcGx1Z2luLnZpZGVvLnAycC1zdHJlYW1zLz91cmw9aHR0cDovL2NvbnRlbnQudG9ycmVudC10di5ydS8xMzA5My5hY2VsaXZlJm1vZGU9MSZuYW1lPVRTTiszK0hECiNFWFRJTkY6LTEsVFNOIDQgSEQKcGx1Z2luOi8vcGx1Z2luLnZpZGVvLnAycC1zdHJlYW1zLz91cmw9aHR0cDovL2NvbnRlbnQudG9ycmVudC10di5ydS8xMzA5Ni5hY2VsaXZlJm1vZGU9MSZuYW1lPVRTTis0K0hECiNFWFRJTkY6LTEsVFNOIDUgSEQKcGx1Z2luOi8vcGx1Z2luLnZpZGVvLnAycC1zdHJlYW1zLz91cmw9aHR0cDovL2NvbnRlbnQudG9ycmVudC10di5ydS8xMzA5Ny5hY2VsaXZlJm1vZGU9MSZuYW1lPVRTTis1K0hECgpAQEBAQApHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIElyZWxhbmQgTGl2ZSBUdiAtLVsvQ09MT1JdCgoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dUlRFIEpyIEhEWy9DT0xPUl0gKFdPUkxEV0lERSkjSU1HOmh0dHA6Ly9ydGVqci5ydGUuaWUvd3AtY29udGVudC9ibG9ncy5kaXIvMjIvZmlsZXMvMjAxMy8xMi9ydGVqci5qcGcKaHR0cDovL3d3dy5ydGUuaWUvbWFuaWZlc3RzL3JzdzUuZjRtfFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzIKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dUlRFIE5FV1MgSERbL0NPTE9SXShXT1JMRFdJREUpI0lNRzpodHRwczovL3Bicy50d2ltZy5jb20vcHJvZmlsZV9pbWFnZXMvNTM1MDM1MDEwNTk2NjMwNTI5LzNTbVlMQmVOLnBuZwpodHRwOi8vd3d3LnJ0ZS5pZS9tYW5pZmVzdHMvbmV3c25vdy5mNG18WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzMgojRVhUSU5GOi0xLFRWMyAoV09STERXSURFKSNJTUc6aHR0cDovL3d3dy5hc3Ryby5jb20ubXkvd2hhdHMtb24vbG9nb2ltYWdlcy9DaGFubmVsTG9nby9Qb3MvMTAzXzMwMC5wbmcKcnRtcGU6Ly9mbWwuNTAxMS5lZGdlY2FzdGNkbi5uZXQvMjA1MDExL2xpdmUgcGxheXBhdGg9bXA0OnR2My5tcDQgYXBwPTIwNTAxMS9saXZlIHBhZ2VVUkw9aHR0cDovL3d3dy50djMuaWUvM3BsYXllci9saXZlLyBzd2ZVcmw9aHR0cDovL3d3dy50djMuaWUvcGxheWVyL2Fzc2V0cy9mbG93cGxheWVyL2ZsYXNoL2Zsb3dwbGF5ZXIuY29tbWVyY2lhbC0zLjIuNy5zd2Ygc3dmVmZ5PXRydWUgbGl2ZT10cnVlIHRpbWVvdXQ9MTAKI0VYVElORjotMSxURzQjSU1HOmh0dHA6Ly93d3cuaWlhLmllL2ZpbGVzdG9yZS9pbWFnZXMvbWVtYmVyL1RHNC1CbGFjay1vbi1XaGl0ZS5qcGcKaHR0cDovL2NzbS1lLmNkczEueW9zcGFjZS5jb20vY3NtL2xpdmUvNzQyNDY1NDAubTN1OAojRVhUSU5GOi0xLFRHNCNJTUc6aHR0cDovL3d3dy5paWEuaWUvZmlsZXN0b3JlL2ltYWdlcy9tZW1iZXIvVEc0LUJsYWNrLW9uLVdoaXRlLmpwZwpodHRwOi8vdGc0LWxoLmFrYW1haWhkLm5ldC9JZGlCZW8xXzEyMDBfdGc0QDExODY5Mz92aWRlb0lkPTI1MzkwOTg0OTYwMDEmbGluZVVwSWQ9JnB1YklkPTEyOTA4NjI1NjcwMDEmcGxheWVySWQ9MTM2NDEzODA1MDAwMSZhZmZpbGlhdGVJZD0mdj0zLjQuMCZmcD1XSU4lMjAxNywwLDAsMTg4JnI9TlRQRVcmZz1HTVhXRUVZWk9UUUsKCiNFWFRJTkY6LTEsUlRFIE9uZSNJTUc6aHR0cDovL3d3dy5hdHZ0b2RheS5jby51ay93cC1jb250ZW50L3VwbG9hZHMvMjAxMy8wMi9ydGUtb25lLmdpZgpodHRwOi8vMjEyLjI1MC40Ni4zNTo0MjUyL2J5c2lkLzk2MDEgCgojRVhUSU5GOi0xLFJURSBUd28jSU1HOmh0dHA6Ly93d3cuc2FvcnZpZXcuaWUvd3AtY29udGVudC91cGxvYWRzLzIwMTQvMDkvUlQlQzMlODkyX0hEX1RBR19PdXRsaW5lZF9NQVNURVIucG5nCmh0dHA6Ly8yMTIuMjUwLjQ2LjM1OjQyNTIvYnlzaWQvOTYwMiAKCiNFWFRJTkY6LTEsVFYzI0lNRzpodHRwOi8vd3d3LmFzdHJvLmNvbS5teS93aGF0cy1vbi9sb2dvaW1hZ2VzL0NoYW5uZWxMb2dvL1Bvcy8xMDNfMzAwLnBuZwpodHRwOi8vMjEyLjI1MC40Ni4zNTo0MjUyL2J5c2lkLzk2MDUgCgojRVhUSU5GOi0xLFRHNCNJTUc6aHR0cDovL3d3dy5paWEuaWUvZmlsZXN0b3JlL2ltYWdlcy9tZW1iZXIvVEc0LUJsYWNrLW9uLVdoaXRlLmpwZwpodHRwOi8vMjEyLjI1MC40Ni4zNTo0MjUyL2J5c2lkLzk2MDMgCgojRVhUSU5GOi0xLFJURSBKci4jSU1HOmh0dHA6Ly9ydGVqci5ydGUuaWUvd3AtY29udGVudC9ibG9ncy5kaXIvMjIvZmlsZXMvMjAxMy8xMi9ydGVqci5qcGcKaHR0cDovLzIxMi4yNTAuNDYuMzU6NDI1Mi9ieXNpZC85NjA2IAoKQEBAQEAKR0VOUkUsIFtDT0xPUiBncmVlbl0tLSBVSyBMaXZlIFR2IC0tWy9DT0xPUl0KCiNFWFRJTkY6LTEsQkJDIE5ld3MjSU1HOmh0dHA6Ly9kYXZlYnVycm93cy5maWxlcy53b3JkcHJlc3MuY29tLzIwMTAvMDcvYzg1Zjg5MDQtMTMzZS00OTZlLThkOWQtOTk3ZDA3OGM3ZDQ2aXBob25lX3Bob3RvLmpwZwpodHRwOi8vbGl2ZTMwNC5lZGdlLmZpbG1vbi5jb20vbGl2ZS8yNy5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmViNDJlZWE3MGU5NGUxY2Q3YzgzMTBjZDEyYTQzNmNmMmI4MTczZTdjZmVhODRkYTUwMzViNDc4MzcxNDllOGE2ODI3Y2Q5ZTZlNmU5ZTdlNDgzYzAyZWQ4Njc0MDQ5ZjEyZDc2ZjYyMjQwZjI5MzUxNDIzNDBiMGU0NmU0ZDhiMGRjMDg4NWQ0NDBmZDk5OWQ0OWUxYTRkNWU0MmRjNDlkZTJjNTY4NWEyNzRkNWY3NzI4MmU5Mzk0MjJlMjUzNzNhMDQxNmM3YTg0ZmJhMDVhZTlkYzNhZmQzYzI5M2NjNTRiNDQxZWM4NTc3ODJhNmI1ZWQ1MWY2OGEzMzc3NDdlNDg4NGY3NjkwNmU1YjIzNmY1YzVlMDc4ZGI4NGVmMjAKCiNFWFRJTkY6LTEsQkJDIDEgTm9ydGggSXJlbGFuZCNJTUc6aHR0cDovL3ZpZ25ldHRlNC53aWtpYS5ub2Nvb2tpZS5uZXQvbG9nb3MyL2ltYWdlcy8zLzM5L0JiY19vbmVfbmkucG5nCmh0dHA6Ly9saXZlOC5ndi5lZGdlLmZpbG1vbi5jb20vbGl2ZS8zNjEuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlMzY4YTdlYzZhZjFjZmFmYzE0YTNmOTc0NzllNGZiMWI5ZjMxNDc1ZDJlYTgzZjM1NmU5Nzk2M2U5N2Q4OTBmM2VjMmViZTg4MDE1NDZjODBkMzVkOTQ2OWQ5OGRkNjExMjA5Njg4ZDhkZjAxODUzOTZhZjIyZjlhOTg0MmMzYzYzNGI2NDMyZDNmYWZiYTJmNDU4MjA1OTZjZTRmMzRlZjliOTgxNGE5N2I3MzM2YTZjMzc1NzViNmJlYzU5Y2VmMjBhZTFmZDQyNzNiZDc5NzRmMmFlZTIwMDE4MDZlOGRhNWFlMjZkOTM3NzA2MzQxNzcxMmU3ZjNmNjkzYjQ0N2M0MzkxNGE2OTg4ZGE0Yzk4YjkwOTM0YjM4ZWQ3Nzg3CgojRVhUSU5GOi0xLEJCQyBPbmUgU2NvdGxhbmQjSU1HOmh0dHA6Ly9pY2hlZi5iYmNpLmNvLnVrL2ltYWdlcy9pYy80MDZ4MjI4L3AwMjdicm5rLmpwZwpodHRwOi8vMjA0LjEwNy4yNy4yMzMvbGl2ZS8zMTY2LmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZTQ5ZDA2OWZlMTFmNjdhNWIwOTE4NTAyZWNmZjE3OGFiNWMwODY2NzYxMGY3MDI1ZmVlYjE0NDdjOTdlM2U1NGI1YTU0MWU4MWRjZGQ1ZDZiZDc3OTQwYTZjMzQxMTJlNzcwZDk0OTYwYzFmODU3MDNlYmE2N2U2YzBkZjRkNDU0NzQxYjZhYjgwMDFiMmVlYjk0Yjc1ZWVlODQ1MzA3OTdlYjllNTY5ODQwYzI2NjE4YTUyZmNjYmRlMWE0NTQ5NTcwMTdhNmZlMTQ1MjNlNDM3NWUwNWI4NGQ4MDcyMGM2ZDYzYTU4YzUyMjFjOGIwMjg4ZGNiMzQ1MmRhYTBlZjY3MDYzZDgzMmFhM2MxZDEzNzUxY2I2ZjE5YTJmZjRlYwoKI0VYVElORjotMSxCQkMgT25lI0lNRzpodHRwOi8vdXAubWV0cm9wb2wyNDcuY28udWsvTWFhcnRlbjEvYmJjLW9uZV8yLnBuZwpodHRwOi8vMTk4LjE3OS4zMC4xMDkvbGl2ZS8xNC5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmU3OTFmMjc3MWMzMzU0OTk3ZTc5ZTJkNTU1ZTI2Yzk0MjdhYzUxYTI4NjY3MjE2ZTBkN2JjMjQ3ZTg1ODZjNGM2ODI5OTg4NTNkZGE5M2NhMGVhNTA5MDQ3MTNlMDc0MGVlMTkxY2Q5Mzk2MjY4YWQ4ZjhjN2U1NTE4OGU2YmJjNjU4YmIyNWVkMzI4MGViYWFjZWU5ZWJmNDU0ZjkyZmUyMTZhYjZjNGQxMmIwODNhNmE4ODNkMjk0OTFmOGFjNTA0ZjcwMWE4NzBmNDdmOTM2ZTdiNTY2MGQwZmIyNzJhMDMyM2MzZTFjNDc1NTkxNmIxMjJlNTJkNGFlZjc2OTgyNzc1MmUxN2M4NjdjMGFlMTE3ZjBkNGNlMmFjODg2OGMKCiNFWFRJTkY6LTEsQkJDIFR3byNJTUc6aHR0cDovL3d3dy5sZWFhbmRzYW5kZW1hbi5jby51ay9ibG9nL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDEzLzEyL0JCQzJfR3VzYm91cm5lLUVzdGF0ZS1HaWxlcy1Db3Jlbi1BbGV4YW5kZXItQXJtc3Ryb25nLUxlYS1hbmQtU2FuZGVtYW4uanBnCmh0dHA6Ly8xOTguMTc5LjMwLjEwOS9saXZlLzI1LmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZTcwMjMzMzAzMjM0ZGJhMTg2ZmUyM2ViYzJmMTlmNzNmNzFhYWZiOWJhM2Y1NDgyZmYxMDFhYzhjNTM4YTBmZjMxNDYwMWQ3ZjI4MWQyMzlkOWZiMWM2MzdmNjg4ZWViYzM0ODU0ZjY5YjEzMzVkODRhM2UyMzM1ZWI3NGIzMWI0ZmNmYzI5Mjc5YzU0Mjk4MGUyYjBkZGNjNDExYTgwNmE3MTM2ZTEzMmZmYTYzY2QyMzM5NzQ1NDI1OGQ1YjNhYWZjYTljYjg1YzZkOTQ2OWNkZjk2YWZlMzI1ZDMwMjNiZWZkYWNlNmI1NDE1N2FmNmU3YTk2MDNiNTExYWU3MWIwMjZkOGIyMGQzYWQ2MDkzOGZmNzRjNDY3ZDVhYTE3NQoKI0VYVElORjotMSxJVFYxI0lNRzpodHRwOi8vd3d3LnRoZWlucXVpcmVyLm5ldC9JTUcvODk5LzI2MDg5OS9pdHYtbG9nby5qcGcKaHR0cDovLzE5OC4xNzkuMzAuMTA4L2xpdmUvMTEuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlNzAyMzMzMDMyMzRkYmExODk2MzMzOGI2ZWU0ODk2YmRhYjQ5ODEzM2M1YTQxNWNlYTBmNGNlNWQ5MTJmYjkxODNiYzlkMmUxYWQyODk5MzEwODMwNjY4ZTU5NDI4MTkzZWY2NzdjNDU1NTJhZWQzY2FlYjhlYTViYzIyNWQ5MGQ1YjViMzgwMTNmY2NkMzY5MWQyNThmNTMyMzBiZjAyYjI5ZjI5NGFhOTNiZDBiZWFkMGExNzJlYzc1MWRkMDEwMGIxZjQ3ZDczZDA4Zjc5MDZlNWMyNjlhYjBiYThmZWMzYmE5OWRlMjg3MDBlZjQ3Y2MzOTlmYWJkMzM3ZTQ0ODFmYTNkY2Q5YzU3ZGFmMDY4MmZkYTA2YWM5MjhiNmI5CgojRVhUSU5GOi0xLENoYW5uZWw0I0lNRzpodHRwOi8vd3d3LnBhcmtlci13aWxzb24uY28udWsvd3AtY29udGVudC91cGxvYWRzLzIwMTUvMDYvYzQuanBnCmh0dHA6Ly8xOTguMTc5LjMwLjEwOC9saXZlLzIuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlOTMxMTY0YjVhNTJkOGNlOGY5NTliNjYwNzJiYWY4MzRkM2ZhZmY4ZjIxMzFlNzFiOGU2ZWJhMzZlNjU1MmJjZjY5OTg4ZWU3NjFlZDcyYzUzMDQyMGZlYmZiNWUxZTAxN2EwNzc1YmRiZWMzOTBkMjlkNjNiMDJlZDg2YTVhZTU3MGFhOGRmOWNkNWVlYjE4ZTRmMWY1NzUxMzNiZWMwNzBkMWIxMTNlNDI4OTU2MzQ3YjU4NzZkN2JlMWZjNzA2NWEyMzQ0MjE0NTdmZjcxYThhOTU5NTJhNDY0ZTk1NjBiYzE0NWExM2RlMWQ2MTM5NWVkMmU4YjEzNzM1MTRmOGNhNzllYmRhMmNlOTg4MjQ4NmI5YTMxODZiYjJmMTg4CgojRVhUSU5GOi0xLENoYW5uZWw1I0lNRzpodHRwOi8vaTIuY2RuZHMubmV0LzExLzA5L2Jyb2FkY2FzdGluZ19jaGFubmVsXzVfbG9nby5qcGcKaHR0cDovLzE5OC4xNzkuMzAuMTA4L2xpdmUvMjIuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlZTk0MTk1N2E3NTIxZmI2NWU2YTk1ODdlNGRmMWRmY2E5YzRhMGQ4NDk5NDZkNmI5MmZjOTMwYmIzOWM4NDIxZjEyYjFhZTY0YTU3OWE5NjU5NjZiYTZhZjI4YzJjYzQzODA1ZDZmYzg1NzVjZmU2OTU2OGZhODRjMWE0ZDcxYmFmNzdiMWE1NjM0MGZlN2VkN2MyYWZlYjNjNDFhZDkwM2ZmOWIxMTU2NGU4ZTdiZmYyNGRlNGI1NmNhODkzMzcwMjQ2OGFjOGI1ZmVhN2IzNWEyMzJkYzA2NzhkYjFmMDU2Yjg4MjBjY2FmNjllMDcyYmYzNzk2ZmQ2MTMxNjkzNDk0YWFjMGE0MzE5MzdmYjkyNjU2MGJkM2ZlNjA5YmJhCgojRVhUSU5GOi0xLERhdmUjSU1HOmh0dHA6Ly9pMS5jZG5kcy5uZXQvMTMvMDYvNjE4eDQ2NC9tZWRpYS1kYXZlLWxvZ28uanBnCmh0dHA6Ly9saXZlMzA4LmVkZ2UuZmlsbW9uLmNvbS9saXZlLzM3MC5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmUxNzc4YzI2NDVmZDk3NmJjNDE3YzcyYWU5OTUxOGU2NDI4ZGRjMGM0NjAyMjRmZjQ0NGMzNGUzNDM4ZGI0OTNkNjMzY2E0MzY2ZDJiNjk0ZDAzYjU2NWY1MmU5NTI5MjA5YTYyNjRlZGNmZjMxNTUyMDk1ZDEyNWYwNjc3OTU1YTljMGVmZTgzMjg0NzQ0OTVjZmU5ZDhlMmIyMzIxYmZjNjRjMmQzYmJlZjE1Yjg1MWNhZjc0OGU0NTc3YmZkOWFjZGFmZTc1Njk3ZWY4MDI4NmVkOTJhN2Q2YWExMDE5YzEwOTEwNTUxZGMzM2I1ZDBmZDEwOWE2NWU4YjE4NDRhZDg0Y2U1MGI5ZmNkOGEyMWU5NjMwN2YyZGVjZmI5MmYKCiNFWFRJTkY6LTEsUGlja1RWI0lNRzpodHRwOi8vcHJlc2VudGF0aW9uYXJjaGl2ZS5jb20vcGljazIwMTEvbWFpbi1mLmpwZwpodHRwOi8vbGl2ZTMwOC5lZGdlLmZpbG1vbi5jb20vbGl2ZS8zNzEuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlYjUzMmVmNjllYmQwOGJmNzExYjRhOTE3NzQxMjY5OTQwZTM2OWZmNWJhYjQ0YTE0Zjc5MzJhOWI5OGQ2ZjdkNjQ1OWVkOGViNGUxODc4YjhlZDE5NDRmMTlhODI1MGRjMzE4ZjhlNmZkODc2YjZhNTdlMTUzOWFkNGZhNzhmY2IyYzIxYTQ0NWQwNGYwMTA5YmE5NjVhMWFhYTVkOGI2MmJlNDRhMDMyZDZmNTYzY2NlZTUzN2RmOWRlNWRiMjEwYTljZDBhN2NmMTA2NDM5N2UwZGIwOGM2MWZmYzI1ZjEyY2QxZWQ1ODdlNDMzZmUyZWFjZjA2NDkzMmQ2ZTJiMGE2ZGFjODZjYmQ2YThjNTZhY2U4MDg4ZjVlYWEwY2ExCgojRVhUSU5GOi0xLFJlYWxseSNJTUc6aHR0cDovL3JlYWxseS51a3R2LmNvLnVrL3N0YXRpYy9pbWcvZGVmYXVsdF9pbWFnZS5qcGcKaHR0cDovL2xpdmUzMDguZWRnZS5maWxtb24uY29tL2xpdmUvMzcyLmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZWE1YWYwOTNkNjU2MjE1NmU5MzcyNDNiNzdlOGQxMmExM2M3MzhjNjZmYWRjMDM5M2VlOTAwN2MwN2JjYjY4NjE4NGY3NTU3Zjg0MzhiOGMxODAwZmVkM2EyYWM0MTE2Yjg0MmRmYjg4ODZlYjdhZmFkYzk0MzAyNTU1YjkxNDM4NGYzMmMzOGY0OTRjM2NhZWFmMzczMjg2NDNjNWI4MDZjMmU4YWYzYjI1MjczM2VmNGM0MjRhNjFkYzI5NWEyMDZjYWU0ZDcwNzBmOTg5MTU0N2FlMjJiZGI4MjhmN2QxM2Y3MjgxOGZlMjE0ZjM1OTM0ODhjNjc5ZWMzOTgyMmY5NjMxNjhkZTAzZjY4MDY2MmI5NzE1N2MyMDM2YThiZQoKI0VYVElORjotMSxFNCNJTUc6aHR0cHM6Ly9wYnMudHdpbWcuY29tL3Byb2ZpbGVfaW1hZ2VzLzE0NjQ0MTI0MTYvT1N0SEd5czRwbTZmb1VNdHBycm1DQy5qcGcKaHR0cDovL2xpdmUzMDQuZWRnZS5maWxtb24uY29tL2xpdmUvNjUuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlNDFhZTA3YzU3N2MyZGIyODlhNmMwNTc5YzgxM2QxYjkzNWU1ZTAyOTU3MWI0NDk5ZTBjNjg5NzUzNWJiODMyMzg1MTY2YjY3NzExZTU0MWM5OTg3YTViN2RhNjY2YWRmZmNlMDNjNjYxZGI2MGY0Y2RhMTUwOTQ3YjEwNDg2NTAwNWJiMGNjMTgwNjM0ZTU5OGI2NGZjNzNhMzI4N2M4NDU4MTg0ODgxYzY0Yjg0Y2FlNzY2NzU4NTFkOTA4MDc1YTI3N2Y1NWJlYWNjYjFlYWVmYTk5ODIyZmJkMjJjNTgyNmFiMDFjZGNjNzk0MjFhZjJkZDNkN2Y1NGQwMmVjMGI2YjcwYjNhZTdlMTYxZGNmNDE4N2FmZDhjZjQ4NzMxCgojRVhUSU5GOi0xLEZpbG00I0lNRzpodHRwczovL2ZpbG1kb2N0b3IuZmlsZXMud29yZHByZXNzLmNvbS8yMDEzLzA3L2ZpbG00LWxvZ28uanBnCmh0dHA6Ly8xOTguMTc5LjMwLjEwOC9saXZlLzEzLmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZWE1NmQxMzY0Yzg3ZjdiYmZiMDIzMTA0N2YxMmIyZWI2ODkwMzQ0YTY1MTdkMDA3MDQ3NjZhNmQ2NWFmYzk5MDY0YTcyNzVmOWMwMzU5NzU5ZTcyZWRlMDE5N2M2MTM1Y2ZiZmM4OWQ5NTUyNGRlYTcwMjhkZGZjMGUwMDY4YjE1YzUzM2VlNzViY2I3NTJlMTRlMmUyZDgyZTAzNWQ2M2M1NzJmMDZiNzU3Mjg4OThiOGVlMDE1NTMwNjMyNWYxZTZmNWMxNzdiZWYyZmY4YjY0Njk2MjYzMDRjYjc2MWI3OGM4ODExNzljOWM3NDdkMTY0MWI2MmNhN2ViMTk5ZThlNWExYjljYzUzMGU4OTBiYWZmMDIxNzkzZDI1NWI3NQoKI0VYVElORjotMSxTIEFjdGlvbiNJTUc6aHR0cDovL2ltZzIud2lraWEubm9jb29raWUubmV0L19fY2IyMDEzMDcxOTE1NTUxMS9sb2dvcGVkaWEvaW1hZ2VzL2UvZTUvU2t5X0FjdGlvbi5wbmcKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcxNjY1JmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOi0xLFMgQ29tZWR5I0lNRzpodHRwOi8vaW1nMy53aWtpYS5ub2Nvb2tpZS5uZXQvX19jYjIwMTMwNzE5MTU1NzAyL2xvZ29wZWRpYS9pbWFnZXMvYi9iNi9Ta3lfQ29tZWR5LnBuZwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzE2NjQmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6LTEsUyBEcmFtYSNJTUc6aHR0cDovL2ltZzIud2lraWEubm9jb29raWUubmV0L19fY2IyMDExMTExODE5MDIxNS9sb2dvcGVkaWEvaW1hZ2VzLzQvNDYvU2t5LU1vdmllcy1EcmFtYVJvbWFuY2UucG5nCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MTY2NyZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjotMSxTIFNob3djYXNlI0lNRzpodHRwOi8vaW1nMS53aWtpYS5ub2Nvb2tpZS5uZXQvX19jYjIwMTExMTE4MTkwNTM4L2xvZ29wZWRpYS9pbWFnZXMvNC80MS9Ta3ktTW92aWVzLVNob3djYXNlLnBuZwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzE4ODEmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6LTEsUyBTY2ktRmkjSU1HOmh0dHA6Ly9pbWFnZXMuYXRsYXMubWV0YWJyb2FkY2FzdC5jb20vcHJlc3Nhc3NvY2lhdGlvbi5jb20vY2hhbm5lbHMvcDIwNTQyNi5wbmcKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcxNzMxJmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOi0xLEZvb2QgTmV0d29yayNJTUc6aHR0cHM6Ly9saDQuZ2dwaHQuY29tL1ZEZV9tOU1NbThiQUE4cU1LMmpTVDUwb3hxTHRENFZsdndjNFg1T1dBZE5VZk5kMHlsdThDZXNEMmJzbVRTSGduelZIPXczMDAKaHR0cDovLzE5OC4xNzkuMzAuMTEwL2xpdmUvMjAuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlZjM3OGYxMGU2NGFiNDYxODM0MmFlMGVmNThmMGUzYjczM2JjMTY3ZDdmMTVmOTczNTY2MzY4YmRjMzc4Y2RlZDdiMDU5MjA2OGZmYjA0MWQ2NWU2NmFiMjA0YjE5ZGNhY2FmMTY5NjBhODZiZjYzNWI3ZWViN2M1ODI4NjlmMzc3Yzg4OTdkNjMzMDNhM2YzZWIxNjUwNzViMjcyODAyNTkzNzczZDliYzE5ZjA2MWI3ODYzN2Y3MzhlZDcwYzQzMmE0NGYwODliYjdlZjQ5ZWJkNjg3MzJkY2FhZDI4OGQ0NzQ0NzI3MDhiODUxMDYyYjQxOWQzMzZhYmMzOWQyNmRiNDM3ZmMzNTQ5MTM0YWNkOWM5OTgzOGUyZjdiZDRhCgojRVhUSU5GOi0xLElUVjIjSU1HOmh0dHA6Ly9wbWNkZWFkbGluZTIuZmlsZXMud29yZHByZXNzLmNvbS8yMDExLzExL2l0djItbG9nby13aGl0ZS1maWxsX18xMTExMDkxNDE3MzkuanBnCmh0dHA6Ly8xOTguMTc5LjMwLjEwOC9saXZlLzY3LmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZTdjMWE4ZjE0ZDUzZGZlOTFlYTVkYTlhNTg3YjRiYWVmY2Q4MTc1ZmU4N2Y5NmJkZjI4YjA2NGMzODBiM2Q3YzQ1OTdkNmE3OTFjYTgwMWQ1OWNmMDBmYjcxZTQzZjVkYjNkYzEyYjBjMjQxMGUwN2YxZTFmZjY5OTJmOWE2YzQ1N2ExODNhMWUyM2NhZDc4NTA2ODBiMzk0ZThmM2JmMWIyZmIwMTgyNzA0MjYwNGI3YTUyMDc2NWIzNjg2MGU5ZmU2NzE4YWZjZDgyNzNhYTQzZGU1Zjc5NjY2MWVjNjQ1NjhiOGFmYjU2ZTAxZDBiMGQyMGMxOTFhNDU5ZGIwZjQxMDYwNGExNzUxYjI0ZjRhNDFhYzE2ZjkzZDQyZGUyYwoKI0VYVElORjotMSxJVFYzI0lNRzpodHRwOi8vd3d3LmVudGVydGFpbm1lbnRkb29yLmNvbS5way9pbWFnZXMvY2hhbm5lbF9pbWFnZS9pdHYzX2hkLnBuZwpodHRwOi8vMTk4LjE3OS4zMC4xMDgvbGl2ZS8yNi5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmU3YzFhOGYxNGQ1M2RmZTkxOWU0MjEzYTQ0NTAwMGNiYmU5ODY1NjU4OGU4NzhlN2I5NmY4NmE2ODBlOGYwNzZkODIxYmMxMDZkOWEyMDQxZTNkYTNkY2YzNzNhNmE2YWE1ZmU0NzI1OWI3ZjI2MTEwOTI0MmYxM2FlMWY2MWUxMDlhNmQwZGExZDUwYmU3M2Q5Njg3Yjg0ZWRmMmE2NjQ3ODM0N2E0N2MwNTVjMzQ1OWUzODhiOTAyZGRhM2UwNGIyNWZkMjVjNmEzN2Y5ODQ2MGZjZjQ5M2ViYjM5OGY3YmZhODI2Y2ZjNjdiYTc5NTEwMzNlYzk2YTUyYTEyMDFhZmQ4N2M5ZGU0NTQyZTY1YzdlOTgzODMyMDdmZjZlMTAKCiNFWFRJTkY6LTEsSVRWNCNJTUc6aHR0cDovL3d3dy5idW5kZXNsaWdhbG91bmdlLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxMi8wOC8zMDB4MTk1XzE0NXg5NF9JVFY0X0ZpbmFsTG9nb19XSFRfLmpwZwpodHRwOi8vMTk4LjE3OS4zMC4xMDgvbGl2ZS8xMDEuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlNDA0Yzc1ZDkyOGU3ZGE1NDI0NWQ5NDYyNWI0ZjQwMDVmNjY4NjkxYWQ4MDc2MWVhYzYzNDZlNmFjZDk5OWZhMjU0MDdhYTAwMzUxODI5NzZlNWZmMjkyNzE5NjM0NjI0YTFhOGZhZTE2OTM0MTVlYWE3N2ViMWZkYzVkNzYwMWE5ZGUzODUzYWIxMzFhNjRkMTBmMjQ5NmE1YzU3OTE1NzNjODBlMGYyODExZGY0YmI4MzVlNDFmZGExYzdhZTUzNjJlZDM1YmJlYWI5Mzc5YjA2NzY3MjgwMTI5ODg3NmYxOWE0OGU3YjQwNzcwYTY3MjU2MDliYTVmMDgwZDFkMDg0ZjFiN2FhN2MyODU3NzY5NjA5NDkzNjk3MjA0NjliCgojRVhUSU5GOi0xLDQgTXVzaWMjSU1HOmh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2VuL3RodW1iL2QvZDgvNF9NdXNpY19sb2dvLnN2Zy85ODVweC00X011c2ljX2xvZ28uc3ZnLnBuZwpodHRwOi8vbGl2ZTMwOC5lZGdlLmZpbG1vbi5jb20vbGl2ZS85NS5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmU3Yjk4NDM4YjgzYTdjZTM2MGU4NmE0MTQ3ODEzY2E3ZDY0MjAxYzlhZTliNjM4NGE0OTdlM2UyNDc1MDdlMjFlMWE0MDJmNDJkMDMxNjI1M2E4NmUzNGI5OGM2YTdhZWE5OWI2ZmM3YjA0ZDcyNmM0MjYyMTViY2NhNTlmNmI2MmYxOGUxOTEyYjgyMjczMDdhN2E0YjFlZmZiMzI5MTA3ODg3MWZhODg3MzFjNzU5ODFlMzVmYmU5YTI2NjJmNWI2NmQ2YWM3MjZhMDhhZWY2YzE0YzI4MzI1YWI2MmU2YmVkZWVkMjIzY2I4MjE5NjM3YzA0ZGNmYWZmOTAyMDdlYjMxMjYxYTQwZTlkNzZlNjFjYzk2YzU5M2MxNGFiYjAKCiNFWFRJTkY6LTEsTW9yZTQjSU1HOmh0dHA6Ly93d3cuY3JlYXRpdmVyZXZpZXcuY28udWsvaW1hZ2VzL3VwbG9hZHMvMjAxMi8wMS9tNF9wcmltYXJ5NzEweDM5OV8wLmpwZwpodHRwOi8vbGl2ZTguZ3YuZWRnZS5maWxtb24uY29tL2xpdmUvOTcuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlOTQxYmUwYWJlYWM1NTZlNDk2ZmZjNmYxYzc5NjRhNzJmNzZjODkwYmMyNzM4ODk1MWZhOWM0OTVlODZkNDczYThlN2VlODU2MjJjMmI5YTFmYmU2NmMyODRkYWZiZTM5MThhMTBiYjkxNTVkYmRkNGZkMzk1MmNiY2FhNzU1MWZlZjU3YWI2NjFiZGEzYzdjZGQ4NzQxMWQwOTJhMmU5OGNmNzFkODkzMTk5ZDU5OTU1YzM3MThlNGU2YTVhYjE2MWM5MzhhNGRmMDMyODBkOWY0YTlmZGQ4YzUzZjFhMmM0NDNiMjg5NjE0YTQzM2MzMzQ5MDUzNDZlZGI0ZDJlMDIyNzZmNDk0YTdlNjA5MzE1ZWM2M2VmNzJjOGFlNmJjCgojRVhUSU5GOi0xLElUVisxI0lNRzpodHRwOi8vbXVsdGlkcmVhbS10di5lLW1vbnNpdGUuY29tL21lZGlhcy9pbWFnZXMvaXR2LTEucG5nCmh0dHA6Ly8xOTguMTc5LjMwLjExMC9saXZlLzE4MTcuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlZjAyMTBmOTY5OWFjYTI0Mzk2MWUyNzA2NGVmZDA1ZTY1NTBjYzgxNTg1N2E5ZjQzODZkNTVhNTQyYmQ1ZmRhYWVhNjZkY2U2Mzc4YjI5NWMwYjNlODYzNWFmNzQ0NTdlZGU5ZmFhNGJjMDRiNzVkN2MxZmNkODYwOGYwYTE4YzI5YzdiODUyNmRiYzY1M2EyZTFkNGFkODQzZDUxYjMwNTgxNDk0N2U2NzIwZTNjMjYyZmFjYjE3MjcwZmEwYTYzY2M3ZmZhMDIwNGYxMDdiNmIzNTYwODIwNDA4MmNhZTdmY2QxZjc3NTIxZTNmNGIwNThjYTMxMDk2OTg1YWUyMGU5MzRjYzdkNWJmMzQ2NThkMTI3ZTljYjc4ZmUyOGQzCgojRVhUSU5GOi0xLElUVjIrMSNJTUc6aHR0cDovL2ltYWdlcy5hdGxhcy5tZXRhYnJvYWRjYXN0LmNvbS9wcmVzc2Fzc29jaWF0aW9uLmNvbS9jaGFubmVscy9wMjE5MTIzLnBuZwpodHRwOi8vMTk4LjE3OS4zMC4xMTAvbGl2ZS8xODIwLmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZTE5NDA0YjIxOTdkODdiZjI5NDVmYmZhN2YyZTk3YzgxNGJiNGY4MjAwNjQ4Y2Q4MmIxY2MyMjQ4MzhiMDMzYjYzYjY1ZjM1YzVlMjFhNTk1ZWRhNDEwZjg1MDIwNDQyYWIzMzNlMGEwOTM3NDliMWVmNWZmNjliNzlkMzMxNDZjZTNhMDk2ZDNiMmM3NDgwMjRjOGYxYzUwMmJhMjUxM2Q1Y2NmZDgzNWFhYmY0MGE2YWU0MGFiODQzNGE0MTRmOWE2M2IyZDI1NWUyNDlkYWY4NjAxODcwZmQ0MWY2NTQ3NGFjYzM1NDdkMmU4MjE2YzRhMTkxMzQ4NmE4YWRiNGY2ZWU3Yzk3OTFlMDA5NzI0ZmUzZGJiODEwYjY0MDA0ZQoKI0VYVElORjotMSxJVFYzKzEjSU1HOmh0dHA6Ly93d3cuc2F0LWFkZHJlc3MuY29tL2YvcGljcy9sb2dvdGlwaS9JVFYzLVBsdXMxX28uanBnCmh0dHA6Ly8xOTguMTc5LjMwLjExMC9saXZlLzE4MjMuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlMDlkZWU0YzU4MzQyMzRmN2UxNzFmMTQ3OGQ0OGViZGIyY2NkMGE1NzA3MGFkMzk4YmI1NzhkODBiODdiZTY2YzU5YWY5ZmQxNmI0NjkyYmNiNDM2YzE2MTkzYjkzMGNkNDAwYjI1ZDkzMTU2MWI2NWJlOTU0ZDZjODU3MDkyZDg4YThhZmNhYmNkYWY4MmM5YTg0NWY5ODE5YzhhYTg4OTE5MDVmYjg5ZWY0OTQyZjRmNTJlNGQ2MTMwMDczMmVmYjRjYWQwMTM0MmM3OTc3Y2E5MGYxMTIzZmFiYjE0MjkxNmM3OTQzYTZjNDk5ZDQ0YjFlZGNiMjc2N2EzOWMxMjlkNWQzYmMzYTA1MTQyODJkZGFjMGE3MWY2M2M3MjE2CgojRVhUSU5GOi0xLElUVjQrMSNJTUc6aHR0cDovL25vd3dhdGNodHZsaXZlLm1lL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDEzLzA1L1dhdGNoLUxpdmUtSVRWNC0rMS1VSy1sb2dvLnBuZwpodHRwOi8vMTk4LjE3OS4zMC4xMTAvbGl2ZS8xODI2LmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZTE0NDlkYzllNDA5OTc1Y2UwZjU4OTcwNTk5OTc0MjU2ZTk5OGVjZTE0YWYyY2MyN2Y3MGNiYjI1MTU5ZmZiNGU1MWQ4OWU2Y2VkMzI0OTk3ZWYzZjdhODMwMjZmYWFkMDgxNDAzNTI5NGYxYjA1Njg4NjNlMzVhMTgyYmU2MWQyZWM5ZDUyMzcyMjJmOTZhZWRhZDcxZmE2ZWE2YzQwNDVjZGVmNzZiZjY0OGMyMTgyOWEwNzRkNzUxNGZkYzdiYmUwNGNmOTQwYjdkZjM5ZjUxOGExNGM4ZjNhNjgxZTk4OWQzMjJjYjFiNzliY2Y2NzQwOWNiMjRiNDM1ZjEzZGQyYTNkMWU1M2QzODM4NGY2M2Y2YThlMTkxNTUwNDJjYgoKI0VYVElORjotMSxDQlMgQWN0aW9uI0lNRzoKaHR0cDovLzE5OC4xNzkuMzAuMTEwL2xpdmUvMTk1Mi5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmVkYWUzZTZiM2E4NDM4ZGRiMGE0NTdjNmE1MTI1MWY3MjY0NTYzNmRkMmY1NjhlZmZjODA5NGE1MjIxZWE2ZjRjYWZhYmI0NmVmYWJlYjgyYjZjNTZkNDE2ZWEyZjdhMjgxNzc4NzJjNzA4ODQ2NmJjZjQ4N2Q5YzAyMjdlYmYyOGZmMjU1ZjRkOGVkNjllYjMwYTk3OWRjNzEyZGZkNGUzM2MzZTFmYmRiZDExYWE4OTM3YTQ1MmFjOTg2MGJmNTNhMzM5NjcwNDVlZWNmZWNmNTJmNDkyMzkwYzI4MzdkOTVmN2FjOGExZmQwYTNlNTAwN2ViMWVlZDVhYmIxMzJjMzVmZDFmZGFjNmQ2NjFjZGQ3ZjNiN2QzZmU5MDUwZTkKCiNFWFRJTkY6LTEsQ0JTIERyYW1hI0lNRzpodHRwOi8vd3d3LmNic2RyYW1hLnR2L3BpY3R1cmVzL3Byb2dyYW1zL2JpZy9jYnNkcmFtYS5qcGcKaHR0cDovLzE5OC4xNzkuMzAuMTEwL2xpdmUvMTgwNS5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmVkYWUzZTZiM2E4NDM4ZGRiYmViOWViMTNhNGFiNzk5MDQ2OGEyMmJlZDAzNmY2NjFlMmE1YTJiNWU3OGRjNTNlNDQ5Y2NmODQ4NDZjOTdiNDU0YTEzMTRhMWE1Mjk3ZGY2NDE2NzlmNzcxN2VmMDY3N2I3NTRkZTk4ODRhOTc0MzA1YTg5NGE1ODEyZDE1YTBlZTU3ZmU3ODY0ZGJhYzRhY2JmOTI4MWJjNzU5NThjMDliNzhkMjExOWI5NTgwMjJiMjMxODQ0ZTM3OTdkNjAzODUyZDk3MzIwOTQyZTlkY2NhZTVkYjliMWI0MGNlNTkwYThhMzkxZDEwNTVjZDkwYjBmMTYwZTNhNDVlZGRkNWNkYzkzODA5ZjFhYzAwMmMKCiNFWFRJTkY6LTEsQ0JTIFJlYWxpdHkjSU1HOmh0dHA6Ly93d3cud2F0Y2hhbGxjaGFubmVscy5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTUvMDIvQ0JTLVJlYWxpdHktVFYuanBnCmh0dHA6Ly8xOTguMTc5LjMwLjExMC9saXZlLzE4MDguaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlYzA3MWViMjA3MjIzMTc1ZmRhYTdlMGUzOGQ5ODc4MzMzNzNiNTRmNmE0NGE0ZGU5MmE1NGNlY2IzODg2MzdkZTRjYmIyMjFiNTczNGY3NTM0YWQyNDRlNTUyZDUxYzVjNGIxZDY3NTk2Y2RjNzgzNDViMmFjMWI3Njk4MGM0ZTE5MDljYTcyNDUzMTdiODVlZDIwMWE0ZjJhYmI5MDU3NzFmMDQ0MGQ1YjI3NzQzYjJmZTY1OGJjNWZmZjRjNzZhNzU2YzdkNWM3OTY1OWEwZTBiNTQxNTNhZjM2M2UxMDU0NDk2MzM5ODBhOTVkNDlhNjcxYTY3M2FlZWY5YjBkN2UzYTdkNjcyYjIyNDFkZTA3ZDM5OGUxYTMzNjdmMjc2CgojRVhUSU5GOi0xLENCUyBSZWFsaXR5KzEjSU1HOmh0dHA6Ly93d3cud2F0Y2hhbGxjaGFubmVscy5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTUvMDIvY2JzLXJlYWxpdHkuanBnCmh0dHA6Ly8xOTguMTc5LjMwLjExMC9saXZlLzE4MTEuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlYTdkZjZhNjhiMGM0ZTYzNDdiZDUzYzc0YTc1ZmUxZTBiM2Q2ZDkwMTgwMDc4NzIwMTJhMzk2OTI3YWJkODgxYjk3MGIzNDExZDBhNGZmMDY2YWNhZjRjNTgyZGZmZTZiYjNhMmVmMjljNDZkYTY5ZDNiYmNiNmZmYWM5OTY1ZWUyNzk3MDM2MjM1OTE4ODc2OTJhOWU3NThjYzlmZmZmNjkzZTk1YWJjY2YwNTY4ZTFlZGQ0M2I1ZjJlNDY4ZGVkMzY3NDljYmNkZmNjMDBlNzRkNTcwN2YzYTEzMzMyYmU1YWNhYTE3ZTc4MGUwZGUxNjYxMjljMWRiM2FkODFlYjBjNDVjNjA3NGRhOTBiNmViMmY3YzYwYjBlN2QyNWU5CgojRVhUSU5GOi0xLDVVU0EjSU1HOmh0dHA6Ly9zdGF0aWMuaXRucHJvZHVjdGlvbnMuY28udWsvaXRuLzIwMTMvMDIvNVVTQV9sb2dvXzIwMTEtMzAweDExNS5qcGcKaHR0cDovLzE5OC4xNzkuMzAuMTEwL2xpdmUvODQ1LmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZTMzYjI5OGIwYjIyYTI5ZDgwNjZjM2YxYzI2OGE0ZGUzYWRiNjgzZmI1Y2YyM2JhZmY1ZDQwZWZmNjNiNGFlM2Q2NzU2OTYzN2QwNDkxYWViNWY3OGVkYmQwOTAwMmZlM2M4MmI5OTYwYjI4MzFjNjE0MDRiZWMwZTcxZGI4NDViYTM2MjMwY2Q3NzlhNjE4YzBjZTMzODU1ODQ1YTZkMGQ3MDRmMDgxYTc1OTc5NjZjMjY5NjkwZGI0ZGFjYjJlMDc2YWQyZjM1ZmNhMzVkZmY1YTZhNGZiZDNkYTM4MDhlOWJiYjZjNzY1NzE3ODk0MzZjYTM4ODMyMDM5YTdhYThhOTZmODNjY2YyZTQyYjk0OTMwMWVlY2RiNmU2Njc0NAoKI0VYVElORjotMSxZZXN0ZXJkYXkjSU1HOmh0dHA6Ly93d3cudGVsZXZpc3VhbC5jb20vaW1hZ2VzL25ld3MvM18xMzY2MzI3OTU5X1NjcmVlbiUyMHNob3QlMjAyMDEzLTA0LTE4JTIwYXQlMjAyMy40OS41NC5wbmcKaHR0cDovL2xpdmUzMDcuZWRnZS5maWxtb24uY29tL2xpdmUvMTAzOS5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmUwNDAxMjk5MGNiNDZlM2VjZWUwMjEzMjk0YmVjNjMxMzI0NjRiMmEwNmE1NmNmMGFlYjJkZjVjN2Q5ODNlNjY0NzEyNjYxOTdjNGFjOGYzYmMzYzViMDNkZTJmMDExNzkzZjMzNjBkMWNlM2ViMzY4ODcxNDE1MmFkODExOTczN2QxNTdiZDE3NWQwZWM3Njc1NDc0MTI5M2RiZWJiZjVlODVjYjFkMmM0ZDVjMWY4YzE5NGM5ZmRlYTZhMmMwYjEyNjIyMTBiOTZlMTM4ODJiYTVlNzc1MWI5ODY5YTE2ZTEwNGE5ZTUxOWY3ZTJhMjczMmYzNmYwMTlkY2NjMWUyODRkODc3YzE1OGQ4MTNmMzdjZDgzYmUwMDZmNGU0NzIKCgojRVhUSU5GOi0xLFtDT0xPUiB5ZWxsb3ddLS0gQmVsb3cgQXJlIEhEIFVrIFR2IFNvbWUgQXJlIEdlbyBMb2NrZWQgLS1bL0NPTE9SXQpodHRwOi8vMC4wLjAuMC92ZHVidDI1CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJCQyBPbmUgSERbL0NPTE9SXSNJTUc6aHR0cDovL3ZpZ25ldHRlMS53aWtpYS5ub2Nvb2tpZS5uZXQvZWFzdGVuZGVycy9pbWFnZXMvOS85Ny9CQkNfT25lX0hELnBuZwpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzQvbGl2ZS9iYmNfb25lX2hkL2JiY19vbmVfaGQuaXNtbC9iYmNfb25lX2hkLWF1ZGlvXzElM0QxMjgwMDAtdmlkZW8lM0QzNTAwMDAwLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CQkMgVHdvIEhEWy9DT0xPUl0jSU1HOmh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2VuL3RodW1iLzAvMDUvQkJDX1R3b19IRC5zdmcvMTI4MHB4LUJCQ19Ud29fSEQuc3ZnLnBuZwpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzUvbGl2ZS9iYmNfdHdvX2hkL2JiY190d29faGQuaXNtbC9iYmNfdHdvX2hkLWF1ZGlvXzElM0QxMjgwMDAtdmlkZW8lM0QzNTAwMDAwLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CQkMgVGhyZWUgSERbL0NPTE9SXSNJTUc6aHR0cDovL3d3dy50aGVkcnVtLmNvbS91cGxvYWRzL2RydW1fY3JlYXRpdmVfcmV2aWV3LzExODYyMi9tYWluX2ltYWdlcy9CQkMzX2NlbGVicmF0ZV9mdWxsSEQlNUIxJTVEXzAuSlBHCmh0dHA6Ly92cy1oZHMtdWstbGl2ZS5lZGdlc3VpdGUubmV0L3Bvb2xfMS9saXZlL2JiY190aHJlZV9oZC9iYmNfdGhyZWVfaGQuaXNtbC9iYmNfdGhyZWVfaGQtYXVkaW9fMSUzRDEyODAwMC12aWRlbyUzRDM1MDAwMDAubTN1OHxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJCQyBGb3VyIEhEWy9DT0xPUl0jSU1HOmh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2VuL3RodW1iLzUvNTgvQkJDX0ZvdXJfSERfTG9nby5zdmcvMTI4MHB4LUJCQ19Gb3VyX0hEX0xvZ28uc3ZnLnBuZwpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzIvbGl2ZS9iYmNfZm91cl9oZC9iYmNfZm91cl9oZC5pc21sL2JiY19mb3VyX2hkLWF1ZGlvXzElM0QxMjgwMDAtdmlkZW8lM0QzNTAwMDAwLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1DQkJDIEhEWy9DT0xPUl0jSU1HOmh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2VuL3RodW1iL2YvZmUvQ0JCQ19IRC5zdmcvMTI4MHB4LUNCQkNfSEQuc3ZnLnBuZwpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzEvbGl2ZS9jYmJjX2hkL2NiYmNfaGQuaXNtbC9jYmJjX2hkLWF1ZGlvXzElM0QxMjgwMDAtdmlkZW8lM0QzNTAwMDAwLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1DQmVlYmllcyBIRFsvQ09MT1JdI0lNRzpodHRwOi8vd3d3LndhdGNoYWxsY2hhbm5lbHMuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE1LzAyL2NiZWViaWVzX2xvZ29fMzg1LmpwZwpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzIvbGl2ZS9jYmVlYmllc19oZC9jYmVlYmllc19oZC5pc21sL2NiZWViaWVzX2hkLWF1ZGlvXzElM0QxMjgwMDAtdmlkZW8lM0QzNTAwMDAwLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CQkMgTmV3cyBIRFsvQ09MT1JdI0lNRzpodHRwOi8vbmV3cy5iYmNpbWcuY28udWsvbWVkaWEvaW1hZ2VzLzQ4MzUxMDAwL2dpZi9fNDgzNTE1NjlfNjQweDM2MC1uZXdzLmdpZgpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzUvbGl2ZS9iYmNfbmV3c19jaGFubmVsX2hkL2JiY19uZXdzX2NoYW5uZWxfaGQuaXNtbC9iYmNfbmV3c19jaGFubmVsX2hkLWF1ZGlvXzElM0QxMjgwMDAtdmlkZW8lM0QzNTAwMDAwLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CQkMgb25lIEhEIChVSylbL0NPTE9SXSNJTUc6aHR0cDovL3ZpZ25ldHRlMS53aWtpYS5ub2Nvb2tpZS5uZXQvZWFzdGVuZGVycy9pbWFnZXMvOS85Ny9CQkNfT25lX0hELnBuZwpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzUvbGl2ZS9iYmNfb25lX2xvbmRvbi9iYmNfb25lX2xvbmRvbi5pc21sL2JiY19vbmVfbG9uZG9uLWF1ZGlvXzI9OTYwMDAtdmlkZW89MTM3NDAwMC5mNG18WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CQkMgVHdvIEhEIChVSylbL0NPTE9SXSNJTUc6aHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvZW4vdGh1bWIvMC8wNS9CQkNfVHdvX0hELnN2Zy8xMjgwcHgtQkJDX1R3b19IRC5zdmcucG5nCmh0dHA6Ly92cy1oZHMtdWstbGl2ZS5iYmNmbXQudm8ubGxud2QubmV0L3Bvb2xfNS9saXZlL2JiY190d29faGQvYmJjX3R3b19oZC5pc21sL2JiY190d29faGQtYXVkaW9fMT0xMjgwMDAtdmlkZW89MzUwMDAwMC5mNG18WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1DQkJDIEhEIChVSylbL0NPTE9SXSNJTUc6aHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvZW4vdGh1bWIvZi9mZS9DQkJDX0hELnN2Zy8xMjgwcHgtQ0JCQ19IRC5zdmcucG5nCmh0dHA6Ly92cy1oZHMtdWstbGl2ZS5lZGdlc3VpdGUubmV0L3Bvb2xfMS9saXZlL2NiYmNfaGQvY2JiY19oZC5pc21sL2NiYmNfaGQtYXVkaW9fMj05NjAwMC12aWRlbz0xMzc0MDAwLmY0bXxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUNCZWViaWVzIEhEIChVSylbL0NPTE9SXSNJTUc6aHR0cDovL3d3dy53YXRjaGFsbGNoYW5uZWxzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxNS8wMi9jYmVlYmllc19sb2dvXzM4NS5qcGcKaHR0cDovL3ZzLWhkcy11ay1saXZlLmVkZ2VzdWl0ZS5uZXQvcG9vbF8yL2xpdmUvY2JlZWJpZXNfaGQvY2JlZWJpZXNfaGQuaXNtbC9jYmVlYmllc19oZC1hdWRpb18yPTk2MDAwLXZpZGVvPTEzNzQwMDAuZjRtfFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQkJDIE5ld3MgSEQgKFVLKVsvQ09MT1JdI0lNRzpodHRwOi8vbmV3cy5iYmNpbWcuY28udWsvbWVkaWEvaW1hZ2VzLzQ4MzUxMDAwL2dpZi9fNDgzNTE1NjlfNjQweDM2MC1uZXdzLmdpZgpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzUvbGl2ZS9iYmNfbmV3c19jaGFubmVsX2hkL2JiY19uZXdzX2NoYW5uZWxfaGQuaXNtbC9iYmNfbmV3c19jaGFubmVsX2hkLWF1ZGlvXzI9OTYwMDAtdmlkZW89MTM3NDAwMC5mNG18WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CQkMgUGFybGlhbWVudCBIRCAoVUspWy9DT0xPUl0jSU1HOmh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2VuL3RodW1iLzQvNDkvQkJDX1BhcmxpYW1lbnRfTG9nby5zdmcvMTI4MHB4LUJCQ19QYXJsaWFtZW50X0xvZ28uc3ZnLnBuZwpodHRwOi8vdnMtaGRzLXVrLWxpdmUuYmJjZm10LnZvLmxsbndkLm5ldC9wb29sXzEvbGl2ZS9iYmNfcGFybGlhbWVudC9iYmNfcGFybGlhbWVudC5pc21sL2JiY19wYXJsaWFtZW50LWF1ZGlvXzI9OTYwMDAtdmlkZW89ODI3MDAwLmY0bXxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJCQyBBbGJhIEhEIChVSylbL0NPTE9SXSNJTUc6aHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvZW4vdGh1bWIvYS9hNS9CQkNfQWxiYS5zdmcvMTI4MHB4LUJCQ19BbGJhLnN2Zy5wbmcKaHR0cDovL3ZzLWhkcy11ay1saXZlLmVkZ2VzdWl0ZS5uZXQvcG9vbF8xL2xpdmUvYmJjX2FsYmEvYmJjX2FsYmEuaXNtbC9iYmNfYWxiYS1hdWRpb18xPTEyODAwMC12aWRlbz0xMzc0MDAwLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CQkMgQWxiYSBIRCAoVUspIDFbL0NPTE9SXSNJTUc6aHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvZW4vdGh1bWIvYS9hNS9CQkNfQWxiYS5zdmcvMTI4MHB4LUJCQ19BbGJhLnN2Zy5wbmcKaHR0cDovL3ZzLWhkcy11ay1saXZlLmVkZ2VzdWl0ZS5uZXQvcG9vbF8xL2xpdmUvYmJjX2FsYmEvYmJjX2FsYmEuaXNtbC9iYmNfYWxiYS1hdWRpb18yPTk2MDAwLXZpZGVvPTEzNzQwMDAuZjRtfFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dUzRDIEhEIChVSylbL0NPTE9SXSNJTUc6aHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvY29tbW9ucy90aHVtYi8yLzIwL1M0Q19sb2dvXzIwMTQuc3ZnLzIwMDBweC1TNENfbG9nb18yMDE0LnN2Zy5wbmcKaHR0cDovL3ZzLWhkcy11ay1saXZlLmJiY2ZtdC52by5sbG53ZC5uZXQvcG9vbF85L2xpdmUvczRjcGJzL3M0Y3Bicy5pc21sL3M0Y3Bicy1hdWRpb18yPTk2MDAwLXZpZGVvPTEzNzQwMDAuZjRtfFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTG9uZG9uIExpdmVbL0NPTE9SXSNJTUc6aHR0cDovL3d3dy5mb3VydGhkYXkuY28udWsvbWVkaWEvMjA5MjgvbG9uZG9uLWxpdmUuanBnCmh0dHA6Ly9iY292ZWxpdmVpb3MtaS5ha2FtYWloZC5uZXQvaGxzL2xpdmUvMjE3NDM0LzMwODMyNzk4NDAwMDEvbWFzdGVyXzkwMC5tM3U4CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUZpbG00IEhEWy9DT0xPUl0jSU1HOmh0dHA6Ly93d3cuZmlsbTQuY29tL21lZGlhL2ltYWdlcy9DaGFubmVsNC9GaWxtNC9Mb2dvcyUyMGV0Yy9maWxtNGhkLmpwZwpodHRwOi8vcGViYmxlczEyNC1saC5ha2FtYWloZC5uZXQvaS9maWxtNF8xQDEzNzc5MC9tYXN0ZXIubTN1OHxYLUZvcndhcmRlZC1Gb3I9ODUuNS44Ny4yMTgKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRTQgSERbL0NPTE9SXSNJTUc6aHR0cDovL3d3dy5jaGFubmVsNC5jb20vbWVkaWEvaW1hZ2VzL0NvcnBvcmF0ZVBvcnRhbC9CZW5qaS9OZXdzJTIwQXJjaGl2ZS8yMDA5L0U0JTIwSERfQTIuanBnCmh0dHA6Ly9wZWJibGVzMTI0LWxoLmFrYW1haWhkLm5ldC9pL2U0XzFAMTM3Nzg5L21hc3Rlci5tM3U4fFgtRm9yd2FyZGVkLUZvcj04NS41Ljg3LjIxOAoKCgpAQEBAQAoKR0VOUkUsIFtDT0xPUiBncmVlbl0tLSBVSyBTcG9ydHMgVHYgLS1bL0NPTE9SXQojRVhUSU5GOi0xLFNreSBTcG9ydHMgMSNJTUc6aHR0cDovLzQuYnAuYmxvZ3Nwb3QuY29tLy1wY2dSc0o2bUVqWS9VWmRzREJqMEo1SS9BQUFBQUFBQUFMYy9pTlZILWQwYTJGMC9zMTYwMC9Ta3krU3BvcnRzKzEucG5nCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02ODcxMyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6LTEsU2t5IFNwb3J0cyAxI0lNRzpodHRwOi8vNC5icC5ibG9nc3BvdC5jb20vLXBjZ1JzSjZtRWpZL1VaZHNEQmowSjVJL0FBQUFBQUFBQUxjL2lOVkgtZDBhMkYwL3MxNjAwL1NreStTcG9ydHMrMS5wbmcKaHR0cDovL2RlbHRhdHYucHcvc3RyZWFtLnBocD9pZD0xMzI1NDcmd2lkdGg9NjQwJmhlaWdodD00ODAgJlJFRiZodHRwOi8vd3d3LmRlbHRhdHYucHcvCgojRVhUSU5GOi0xLFNreSBTcG9ydHMgMSNJTUc6aHR0cDovLzQuYnAuYmxvZ3Nwb3QuY29tLy1wY2dSc0o2bUVqWS9VWmRzREJqMEo1SS9BQUFBQUFBQUFMYy9pTlZILWQwYTJGMC9zMTYwMC9Ta3krU3BvcnRzKzEucG5nCnJ0bXBlOi8vMTM0LjE5LjE4NS4yMDM6MTkzNS9saXZlZGdlIHBsYXlwYXRoPW1hbWFoZHNreTEgc3dmVXJsPWh0dHA6Ly9wbGF5ZXIuaGRjYXN0Lm9yZy9fLnN3ZiBsaXZlPTEgZmxhc2h2ZXI9V0lOLzE2LDAsMCwyNTciIHRpbWVvdXQ9MTUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggbGl2ZT10cnVlIHN3ZlZmeT0xIHBhZ2VVcmw9aHR0cDovL3d3dy5oZGNhc3Qub3JnL3xyZWZlcmVyPW1hbWFoZC5jb20KCiNFWFRJTkY6LTEsU2t5IFNwb3J0cyAyI0lNRzpodHRwOi8vd3d3LnNreXNwb3J0cy5jb20vY29yZS9pbWcvY2hhbm5lbHMvU2t5LVNwb3J0cy1Bc2hlcy1Mb2dvLnBuZwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9Njg0MjQgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOi0xLFNreSBTcG9ydHMgMiNJTUc6aHR0cDovL3d3dy5za3lzcG9ydHMuY29tL2NvcmUvaW1nL2NoYW5uZWxzL1NreS1TcG9ydHMtQXNoZXMtTG9nby5wbmcKaHR0cDovL2RlbHRhdHYucHcvc3RyZWFtLnBocD9pZD0xMzM4MzImd2lkdGg9NjQwJmhlaWdodD00ODAgJlJFRiZodHRwOi8vd3d3LmRlbHRhdHYucHcvCgojRVhUSU5GOi0xLFNreSBTcG9ydHMgMiNJTUc6aHR0cDovL3d3dy5za3lzcG9ydHMuY29tL2NvcmUvaW1nL2NoYW5uZWxzL1NreS1TcG9ydHMtQXNoZXMtTG9nby5wbmcKaHR0cDovL3RndW4udHYvbWVudXMvcGxheWVycy9zdHJlYW1saXZlLmh0bWw/Njg0MjQgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOi0xLFNreSBTcG9ydHMgMiNJTUc6aHR0cDovL3d3dy5za3lzcG9ydHMuY29tL2NvcmUvaW1nL2NoYW5uZWxzL1NreS1TcG9ydHMtQXNoZXMtTG9nby5wbmcKcnRtcGU6Ly8xMzQuMTkuMTg1LjIwMzoxOTM1L2xpdmVkZ2UgcGxheXBhdGg9bWFtYWhkc2t5MiBzd2ZVcmw9aHR0cDovL3BsYXllci5oZGNhc3Qub3JnL18uc3dmIGxpdmU9MSBmbGFzaHZlcj1XSU4vMTYsMCwwLDI1NyIgdGltZW91dD0xNSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBsaXZlPXRydWUgc3dmVmZ5PTEgcGFnZVVybD1odHRwOi8vd3d3LmhkY2FzdC5vcmcvfHJlZmVyZXI9bWFtYWhkLmNvbSAKCiNFWFRJTkY6LTEsU2t5IFNwb3J0cyAzI0lNRzpodHRwOi8vd3d3LnNreXNwb3J0cy5jb20vY29yZS9pbWcvY2hhbm5lbHMvU2t5LVNwb3J0cy0zLUxvZ28ucG5nCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02ODcxNCZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjotMSxTa3kgU3BvcnRzIDMjSU1HOmh0dHA6Ly93d3cuc2t5c3BvcnRzLmNvbS9jb3JlL2ltZy9jaGFubmVscy9Ta3ktU3BvcnRzLTMtTG9nby5wbmcKaHR0cDovL2RlbHRhdHYucHcvc3RyZWFtLnBocD9pZD0xMzM5NjImd2lkdGg9NjQwJmhlaWdodD00ODAgJlJFRiZodHRwOi8vd3d3LmRlbHRhdHYucHcvCgojRVhUSU5GOi0xLFNreSBTcG9ydHMgMyNJTUc6aHR0cDovL3d3dy5za3lzcG9ydHMuY29tL2NvcmUvaW1nL2NoYW5uZWxzL1NreS1TcG9ydHMtMy1Mb2dvLnBuZwpydG1wZTovLzEzNC4xOS4xODUuMjA0OjE5MzUvbGl2ZWRnZSBwbGF5cGF0aD1tYW1haGRza3kzIHN3ZlVybD1odHRwOi8vcGxheWVyLmhkY2FzdC5vcmcvXy5zd2YgbGl2ZT0xIGZsYXNodmVyPVdJTi8xNiwwLDAsMjU3IiB0aW1lb3V0PTE1IHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGxpdmU9dHJ1ZSBzd2ZWZnk9MSBwYWdlVXJsPWh0dHA6Ly93d3cuaGRjYXN0Lm9yZy98cmVmZXJlcj1tYW1haGQuY29tIAoKI0VYVElORjotMSxTa3kgU3BvcnRzIDQjSU1HOmh0dHA6Ly8zLmJwLmJsb2dzcG90LmNvbS8tTi1oYVZteEZjb0EvVWx1SXRlN2R1YUkvQUFBQUFBQUFBNXcvajdXR01mOUhieFUvczE2MDAvU2t5K1Nwb3J0KzQrbGl2ZStzdHJlYW0rb25saW5lKyVEOCVCMyVEOSU4MyVEOCVBNyVEOSU4OSslRDglQjMlRDglQTglRDklODglRDglQjElRDglQUErJUQ4JUE4JUQ4JUFCKyVEOSU4NSVEOCVBOCVEOCVBNyVEOCVCNCVEOCVCMS5wbmcKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY4NzE1ICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjotMSxTa3kgU3BvcnRzIDQjSU1HOmh0dHA6Ly8zLmJwLmJsb2dzcG90LmNvbS8tTi1oYVZteEZjb0EvVWx1SXRlN2R1YUkvQUFBQUFBQUFBNXcvajdXR01mOUhieFUvczE2MDAvU2t5K1Nwb3J0KzQrbGl2ZStzdHJlYW0rb25saW5lKyVEOCVCMyVEOSU4MyVEOCVBNyVEOSU4OSslRDglQjMlRDglQTglRDklODglRDglQjElRDglQUErJUQ4JUE4JUQ4JUFCKyVEOSU4NSVEOCVBOCVEOCVBNyVEOCVCNCVEOCVCMS5wbmcKaHR0cDovL2RlbHRhdHYucHcvc3RyZWFtLnBocD9pZD0xMzI0ODImd2lkdGg9NjQwJmhlaWdodD00ODAgJlJFRiZodHRwOi8vd3d3LmRlbHRhdHYucHcvCgojRVhUSU5GOi0xLFNreSBTcG9ydHMgNCNJTUc6aHR0cDovLzMuYnAuYmxvZ3Nwb3QuY29tLy1OLWhhVm14RmNvQS9VbHVJdGU3ZHVhSS9BQUFBQUFBQUE1dy9qN1dHTWY5SGJ4VS9zMTYwMC9Ta3krU3BvcnQrNCtsaXZlK3N0cmVhbStvbmxpbmUrJUQ4JUIzJUQ5JTgzJUQ4JUE3JUQ5JTg5KyVEOCVCMyVEOCVBOCVEOSU4OCVEOCVCMSVEOCVBQSslRDglQTglRDglQUIrJUQ5JTg1JUQ4JUE4JUQ4JUE3JUQ4JUI0JUQ4JUIxLnBuZwpydG1wZTovLzEzNC4xOS4xODUuMjA0OjE5MzUvbGl2ZWRnZSBwbGF5cGF0aD1tYW1haGRza3k0IHN3ZlVybD1odHRwOi8vcGxheWVyLmhkY2FzdC5vcmcvXy5zd2YgbGl2ZT0xIGZsYXNodmVyPVdJTi8xNiwwLDAsMjU3IiB0aW1lb3V0PTE1IHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGxpdmU9dHJ1ZSBzd2ZWZnk9MSBwYWdlVXJsPWh0dHA6Ly93d3cuaGRjYXN0Lm9yZy98cmVmZXJlcj1tYW1haGQuY29tCgojRVhUSU5GOi0xLFNreSBTcG9ydHMgNSNJTUc6aHR0cHM6Ly9kMjRqOXI3bGNrOWNpbi5jbG91ZGZyb250Lm5ldC9sL20vMS8xNTU0LjE0MDUzMzk0NDcucG5nCnJ0bXBlOi8vMTM0LjE5LjE4NS4yNDQ6MTkzNS9saXZlZGdlIHBsYXlwYXRoPW1hbWFoZHNreTUgc3dmVXJsPWh0dHA6Ly9wbGF5ZXIuaGRjYXN0Lm9yZy9fLnN3ZiBsaXZlPTEgZmxhc2h2ZXI9V0lOLzE2LDAsMCwyNTciIHRpbWVvdXQ9MTUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggbGl2ZT10cnVlIHN3ZlZmeT0xIHBhZ2VVcmw9aHR0cDovL3d3dy5oZGNhc3Qub3JnL3xyZWZlcmVyPW1hbWFoZC5jb20gCgojRVhUSU5GOi0xLFNreSBTcG9ydHMgNSNJTUc6aHR0cHM6Ly9kMjRqOXI3bGNrOWNpbi5jbG91ZGZyb250Lm5ldC9sL20vMS8xNTU0LjE0MDUzMzk0NDcucG5nCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02ODcxNiZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjotMSxTa3kgU3BvcnRzIEYxI0lNRzpodHRwOi8vd3d3LnNreXNwb3J0cy5jb20vY29yZS9pbWcvY2hhbm5lbHMvU2t5LVNwb3J0cy1GMS1Mb2dvLnN2ZwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9Njg3MTgmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6LTEsU2t5IFNwb3J0cyBGMSNJTUc6aHR0cDovL3d3dy5za3lzcG9ydHMuY29tL2NvcmUvaW1nL2NoYW5uZWxzL1NreS1TcG9ydHMtRjEtTG9nby5zdmcKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9c2t5ZjE0ODgmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCgojRVhUSU5GOi0xLFNreSBTcG9ydHMgRjEjSU1HOmh0dHA6Ly93d3cuc2t5c3BvcnRzLmNvbS9jb3JlL2ltZy9jaGFubmVscy9Ta3ktU3BvcnRzLUYxLUxvZ28uc3ZnCnJ0bXBlOi8vMTM0LjE5LjE4NS4yMDQ6MTkzNS9saXZlZGdlIHBsYXlwYXRoPW1hbWFoZHNreXNwb3J0c2YxIHN3ZlVybD1odHRwOi8vcGxheWVyLmhkY2FzdC5vcmcvXy5zd2YgbGl2ZT0xIGZsYXNodmVyPVdJTi8xNiwwLDAsMjU3IiB0aW1lb3V0PTE1IHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGxpdmU9dHJ1ZSBzd2ZWZnk9MSBwYWdlVXJsPWh0dHA6Ly93d3cuaGRjYXN0Lm9yZy98cmVmZXJlcj1tYW1haGQuY29tIAoKI0VYVElORjotMSxTa3kgU3BvcnRzIE5ld3MjSU1HOmh0dHA6Ly93d3cuZm0tYmFzZS5jby51ay9mb3J1bS9hdHRhY2htZW50cy9mb290YmFsbC1tYW5hZ2VyLTIwMTUtbWFuYWdlci1zdG9yaWVzLzg4MDcyOWQxMzU3NDE0ODMwLWJ1cm5sZXktZmMtbmV3LW1hbmFnZXItbmV3LXN0YXJ0LXNreS1zcG9ydHMtbmV3cy11ay1sb2dvLnBuZwpodHRwOi8vOTMuMTg0LjIyMS4xMzMvMDA1NzNELzE4My8xODMtMC5tM3U4CgojRVhUSU5GOi0xLFNreSBTcG9ydHMgTmV3cyNJTUc6aHR0cDovL3d3dy5mbS1iYXNlLmNvLnVrL2ZvcnVtL2F0dGFjaG1lbnRzL2Zvb3RiYWxsLW1hbmFnZXItMjAxNS1tYW5hZ2VyLXN0b3JpZXMvODgwNzI5ZDEzNTc0MTQ4MzAtYnVybmxleS1mYy1uZXctbWFuYWdlci1uZXctc3RhcnQtc2t5LXNwb3J0cy1uZXdzLXVrLWxvZ28ucG5nCnJ0bXBlOi8vMTM0LjE5LjE4NS4yMzY6MTkzNS9saXZlZGdlICBwbGF5cGF0aD1zc2t5c24gc3dmVXJsPWh0dHA6Ly9wbGF5ZXIuaGRjYXN0Lm9yZy9fLnN3ZiBsaXZlPTEgZmxhc2h2ZXI9V0lOLzE2LDAsMCwyNTciIHRpbWVvdXQ9MTUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggbGl2ZT10cnVlIHN3ZlZmeT0xIHBhZ2VVcmw9aHR0cDovL3d3dy5oZGNhc3Qub3JnL3xyZWZlcmVyPXN0cmVhbWtpbmcub3JnCgojRVhUSU5GOi0xLFNreSBTcG9ydHMgTmV3cyNJTUc6aHR0cDovL3d3dy5mbS1iYXNlLmNvLnVrL2ZvcnVtL2F0dGFjaG1lbnRzL2Zvb3RiYWxsLW1hbmFnZXItMjAxNS1tYW5hZ2VyLXN0b3JpZXMvODgwNzI5ZDEzNTc0MTQ4MzAtYnVybmxleS1mYy1uZXctbWFuYWdlci1uZXctc3RhcnQtc2t5LXNwb3J0cy1uZXdzLXVrLWxvZ28ucG5nCnJ0bXBlOi8vMTM0LjE5LjE4NS4yMDQ6MTkzNS9saXZlZGdlIHBsYXlwYXRoPW1hbWFoZHNreW5ld3Mgc3dmVXJsPWh0dHA6Ly9wbGF5ZXIuaGRjYXN0Lm9yZy9fLnN3ZiBsaXZlPTEgZmxhc2h2ZXI9V0lOLzE2LDAsMCwyNTciIHRpbWVvdXQ9MTUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggbGl2ZT10cnVlIHN3ZlZmeT0xIHBhZ2VVcmw9aHR0cDovL3d3dy5oZGNhc3Qub3JnL3xyZWZlcmVyPW1hbWFoZC5jb20KCiNFWFRJTkY6LTEsQlQgU3BvcnRzIDEjSU1HOmh0dHA6Ly9zcG9ydC5idC5jb20vaW1hZ2VzL2J0LXNwb3J0LTEtbG9nby0xMzYzODE5NzQ4MDM0MTA0MDEtMTMwODAxMTIwMTE4LmpwZwpydG1wZTovLzEzNC4xOS4xODUuMjA0OjE5MzUvbGl2ZWRnZSBwbGF5cGF0aD1tYW1haGRidHNwb3J0MSBzd2ZVcmw9aHR0cDovL3BsYXllci5oZGNhc3Qub3JnL18uc3dmIGxpdmU9MSBmbGFzaHZlcj1XSU4vMTYsMCwwLDI1NyIgdGltZW91dD0xNSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBsaXZlPXRydWUgc3dmVmZ5PTEgcGFnZVVybD1odHRwOi8vd3d3LmhkY2FzdC5vcmcvfHJlZmVyZXI9bWFtYWhkLmNvbQoKI0VYVElORjotMSxCVCBTcG9ydHMgMSNJTUc6aHR0cDovL3Nwb3J0LmJ0LmNvbS9pbWFnZXMvYnQtc3BvcnQtMS1sb2dvLTEzNjM4MTk3NDgwMzQxMDQwMS0xMzA4MDExMjAxMTguanBnCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02ODcyMCZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjotMSxCVCBTcG9ydHMgMSNJTUc6aHR0cDovL3Nwb3J0LmJ0LmNvbS9pbWFnZXMvYnQtc3BvcnQtMS1sb2dvLTEzNjM4MTk3NDgwMzQxMDQwMS0xMzA4MDExMjAxMTguanBnCnJ0bXA6Ly8xOTUuMTU0LjE2Mi4xNTc6ODAvbGl2ZXJlcGVhdGVyIHBsYXlwYXRoPTEzMzY0MSBzd2ZVcmw9aHR0cDovL2Nkbi5nb29kY2FzdC5jby9wbGF5ZXJzLnN3ZiBsaXZlPXRydWUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggZmxhc2h2ZXI9V0lOLzIwMTgsMCwwLDE2MCB0aW1lb3V0PTEzIHN3ZlZmeT0xIHBhZ2VVcmw9aHR0cDovL2RlbHRhdHYucHcvfHJlZmVyZXI9aHR0cDovL3Nwb3J0czR1LnR2CgojRVhUSU5GOi0xLEJUIFNwb3J0cyAyI0lNRzpodHRwOi8vc3BvcnQuYnQuY29tL2ltYWdlcy9idC1zcG9ydC0yLWxvZ28tMTM2MzgxOTc0ODIxOTEwNDAxLTEzMDgwMTEyMDQxNS5qcGcKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcxMzE4JmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOi0xLEJUIFNwb3J0cyAyI0lNRzpodHRwOi8vc3BvcnQuYnQuY29tL2ltYWdlcy9idC1zcG9ydC0yLWxvZ28tMTM2MzgxOTc0ODIxOTEwNDAxLTEzMDgwMTEyMDQxNS5qcGcKcnRtcGU6Ly8xMzQuMTkuMTg1LjIwNDoxOTM1L2xpdmVkZ2UgcGxheXBhdGg9bWFtYWhkYnRzcG9ydDIgc3dmVXJsPWh0dHA6Ly9wbGF5ZXIuaGRjYXN0Lm9yZy9fLnN3ZiBsaXZlPTEgZmxhc2h2ZXI9V0lOLzE2LDAsMCwyNTciIHRpbWVvdXQ9MTUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggbGl2ZT10cnVlIHN3ZlZmeT0xIHBhZ2VVcmw9aHR0cDovL3d3dy5oZGNhc3Qub3JnL3xyZWZlcmVyPW1hbWFoZC5jb20KCiNFWFRJTkY6LTEsQlQgU3BvcnRzIEV1cm9wZSNJTUc6aHR0cDovL2NjLXVtYnJhY28taW1hZ2VzLnMzLmFtYXpvbmF3cy5jb20vYmMvTmV3c0ltYWdlcy9idC1zcG9ydC1ldXJvcGUuanBnCnJ0bXA6Ly82Mi4yMTAuMTA1LjYwOjgwL2xpdmVyZXBlYXRlciBwbGF5cGF0aD0xMzM2NzYgc3dmVXJsPWh0dHA6Ly9jZG4uZ29vZGNhc3QuY28vcGxheWVycy5zd2YgbGl2ZT10cnVlIHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGZsYXNodmVyPVdJTi8yMDE4LDAsMCwxNjAgdGltZW91dD0xMyBzd2ZWZnk9MSBwYWdlVXJsPWh0dHA6Ly9kZWx0YXR2LnB3L3xyZWZlcmVyPWh0dHA6Ly9zcG9ydHM0dS50dgoKI0VYVElORjotMSxQcmVtaWVyIFNwb3J0cyNJTUc6aHR0cDovL3d3dy5lbGl0ZWxlYWd1ZS5jby51ay9pbWFnZS1QcmVtaWVyX1Nwb3J0cy5qcGVnCmh0dHA6Ly93d3cuaGRjYXN0Lm9yZy9lbWJlZGxpdmU0LnBocD91PXNwcmVtc3Amdnc9ODU0JnZoPTQ4MCAmUkVGJmh0dHA6Ly93d3cuaGRjYXN0Lm9yZy8KCiNFWFRJTkY6LTEsU2V0YW50YSBTcG9ydHMjSU1HOmh0dHBzOi8vc2VjdXJlLnNldGFudGFzdWJzLmNvbS9pbWFnZXMvc2V0YW50YS1sb2dvLnBuZwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzAxODkmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6LTEsU2V0YW50YSBTcG9ydHMjSU1HOmh0dHBzOi8vc2VjdXJlLnNldGFudGFzdWJzLmNvbS9pbWFnZXMvc2V0YW50YS1sb2dvLnBuZwpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1zZXRhbnRhYSZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KCiNFWFRJTkY6LTEsRXVyb1Nwb3J0IDIjSU1HOmh0dHA6Ly9pZGVudGl0eWRlc2lnbmVkLmNvbS9pbWFnZXMvZXVyb3Nwb3J0L2V1cm9zcG9ydC1sb2dvLmpwZwpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1ldXJvc3BvcnR0MiZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KCiNFWFRJTkY6LTEsRVNQTiAoVUspI0lNRzpodHRwOi8vYS5lc3BuY2RuLmNvbS9pL2VzcG4vZXNwbl9sb2dvcy9lc3BuX3JlZC5wbmcKcnRtcGU6Ly8xMzQuMTkuMTg1LjIwNToxOTM1L2xpdmVkZ2UgcGxheXBhdGg9bWFtYWhkdmVzcG51ayBzd2ZVcmw9aHR0cDovL3BsYXllci5oZGNhc3Qub3JnL18uc3dmIGxpdmU9MSBmbGFzaHZlcj1XSU4vMTYsMCwwLDI1NyIgdGltZW91dD0xNSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBsaXZlPXRydWUgc3dmVmZ5PTEgcGFnZVVybD1odHRwOi8vd3d3LmhkY2FzdC5vcmcvfHJlZmVyZXI9bWFtYWhkLmNvbQoKI0VYVElORjotMSxBdCBUaGUgUmFjZXMjSU1HOmh0dHA6Ly9pcGFkLmF0dGhlcmFjZXMuY29tL3NpdGVpbWFnZXMvbG9nby5wbmcKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9YXRyNSZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KCiNFWFRJTkY6LTEsQm94IE5hdGlvbiNJTUc6aHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvY29tbW9ucy90aHVtYi9jL2MzL0JveE5hdGlvbl9sb2dvLmpwZy85OTZweC1Cb3hOYXRpb25fbG9nby5qcGcKcnRtcGU6Ly8xMzQuMTkuMTg1LjIwNjoxOTM1L2xpdmVkZ2UgcGxheXBhdGg9bWFtYWhkYm94bmF0aW9uIHN3ZlVybD1odHRwOi8vcGxheWVyLmhkY2FzdC5vcmcvXy5zd2YgbGl2ZT0xIGZsYXNodmVyPVdJTi8xNiwwLDAsMjU3IiB0aW1lb3V0PTE1IHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGxpdmU9dHJ1ZSBzd2ZWZnk9MSBwYWdlVXJsPWh0dHA6Ly93d3cuaGRjYXN0Lm9yZy98cmVmZXJlcj1tYW1haGQuY29tCgojRVhUSU5GOi0xLEJveCBOYXRpb24jSU1HOmh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2NvbW1vbnMvdGh1bWIvYy9jMy9Cb3hOYXRpb25fbG9nby5qcGcvOTk2cHgtQm94TmF0aW9uX2xvZ28uanBnCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWJveG9vJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwoKI0VYVElORjotMSxMRkNUViNJTUc6aHR0cDovL3d3dy5hcmNoaXZlLWptdS1qb3VybmFsaXNtLm9yZy51ay9jb21tdW5pdGllcy8yLzAwNC8wMDYvOTYxLzUxMi9pbWFnZXMvNDU1OTI1MzYwOC5qcGcKcnRtcDovLzMxLjcuNTYuMjU0OjE5MzUvc3RyZWFtLyBwbGF5cGF0aD0wVm1VMWJwU05RLnN0cmVhbSBzd2ZVcmw9aHR0cDovL3RoZWNkbi4wNHN0cmVhbS5jb20vcC9vb29sbzEuc3dmIHBhZ2VVcmw9aHR0cDovL3d3dy4wNHN0cmVhbS5jb20vZWJiLnBocD9hZHNwPW90aGVyIGxpdmU9dHJ1ZSB0aW1lb3V0PTE1CgojRVhUSU5GOi0xLEV1cm9TcG9ydCBJbnQuI0lNRzpodHRwOi8vMDE3LmJ5L3NpdGVzLzAxNy5ieS9maWxlcy9ldXJvc3BvcnQucG5nCmh0dHA6Ly9lc2lvc2xpdmU2LWkuYWthbWFpaGQubmV0L2hscy9saXZlLzIwMjg3NC9BTF9QX0VTUDFfSU5URVJfRU5HL3BsYXlsaXN0XzE4MDAubTN1OAoKQEBAQEAKCkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gVVNBIExpdmUgVHYgLS1bL0NPTE9SXQoKI0VYVElORjotMSxBQkMKaHR0cDovLzE5Mi45OS4zOS4yNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2FiYy9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOi0xLENOQkMKaHR0cDovLzE5Mi45OS4xOS45ODoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vamNuYmMvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjotMSxLVExBCmh0dHA6Ly8xOTIuOTkuMzkuMjQwOjE5MzUvZmx1NTU1L19kZWZpbnN0Xy9rdGxhL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6LTEsQ0JTCmh0dHA6Ly8xOTIuOTkuMTkuOTg6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2Nicy9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOi0xLE5CQwpodHRwOi8vMTkyLjk5LjM5LjI0MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vbmJjL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6LTEsRm94NQpodHRwOi8vMTY3LjExNC4xNTcuNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2ZveC9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOi0xLENOTgpodHRwOi8vMTkyLjk5LjE5Ljk4OjE5MzUvZmx1NTU1L19kZWZpbnN0Xy9qY25uL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6LTEsQW5pbWFsUGxhbmV0Cmh0dHA6Ly8xNjcuMTE0LjE1Ni4yOToxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vYW5pbWFsL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6LTEsRGlzbmV5eGQKaHR0cDovLzE2Ny4xMTQuMTAxLjE4ODoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vZGlzbmV5eGQvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjotMSxCbG9vbWJlcmdIRApodHRwOi8vMTkyLjk5LjM5LjI0MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vamJsb29tYmVyZy9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOi0xLEJyYXZvCmh0dHA6Ly8xNjcuMTE0LjExOS4yMDk6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2picmF2by9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOi0xLEhCT0Vhc3QKaHR0cDovLzE5Mi45OS4zOS4yNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2hib2Vhc3QvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjotMSxIQk9Db21lZHlIREVhc3QKaHR0cDovLzE5Mi45OS4zOS4yNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2hib2NvbWVkeS9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOi0xLEhCT1pvbmVIRApodHRwOi8vMTkyLjk5LjM5LjI0MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vaGJvem9uZS9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOi0xLFN0YXJ6Q2luZW1hCmh0dHA6Ly8xNjcuMTE0LjEwMS4xODg6MTkzNS9mbHU1NTUvX2RlZmluc3RfL3N0YXJ6Y2luZW1hL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6LTEsU3RhcnpFZGdlCmh0dHA6Ly8xNjcuMTE0LjE1Ni4zMDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vc3RhcnplZGdlL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6LTEsQU1DCmh0dHA6Ly8xNjcuMTE0LjE1Ny40MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vYW1jL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6LTEsTE1OCmh0dHA6Ly8xNjcuMTE0LjEwMS4xODg6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2xtbi9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOi0xLEZYCmh0dHA6Ly8xOTIuOTkuMTkuOTg6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2Z4L3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6LTEsVE5UCmh0dHA6Ly8xNjcuMTE0LjE1Ni4zMDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vdG50L3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6LTEsRSEKaHR0cDovLzE5Mi45OS4zOS4yNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2UvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjotMSxIaXN0b3J5Cmh0dHA6Ly8xNjcuMTE0LjE1Ny40MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vaGlzdG9yeS9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOi0xLE5hdGdlbwpodHRwOi8vMTkyLjk5LjM5LjI0MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vbmF0Z2VvL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6LTEsTmF0Z2VvV2lsZApodHRwOi8vMTkyLjk5LjE5Ljk4OjE5MzUvZmx1NTU1L19kZWZpbnN0Xy9uYXRnZW93aWxkL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6LTEsRGlzY292ZXJ5Cmh0dHA6Ly8xOTIuOTkuMTkuOTg6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2Rpc2NvdmVyeS9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOi0xLFRMQwpodHRwOi8vMTkyLjk5LjM5LjI0MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vanRsYy9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOi0xLENvb2tpbmdDaGFubmVsCmh0dHA6Ly8xOTIuOTkuMzkuMjQwOjE5MzUvZmx1NTU1L19kZWZpbnN0Xy9jb29raW5nY2hhbm5lbC9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOi0xLEZvb2QgQ2hhbm5lbApodHRwOi8vMTY3LjExNC4xMTkuMjA5OjE5MzUvZmx1NTU1L19kZWZpbnN0Xy9mb29kL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6LTEsVVNBCmh0dHA6Ly8xOTIuOTkuMzkuMjQwOjE5MzUvZmx1NTU1L19kZWZpbnN0Xy91c2EvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjotMSxESVlOZXR3b3JrSEQKaHR0cDovLzE5Mi45OS4xOS45ODoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vZGl5L3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6LTEsSElGSQpodHRwOi8vMTkyLjk5LjM5LjI0MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vamhpZmkvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjotMSxTeWZ5Cmh0dHA6Ly8xOTIuOTkuMzkuMjQwOjE5MzUvZmx1NTU1L19kZWZpbnN0Xy9zeWZ5L3BsYXlsaXN0Lm0zdTg/dG9rZW49CgojRVhUSU5GOjAsQUJDIDIyI0lNRzpodHRwOi8vaW1nMy53aWtpYS5ub2Nvb2tpZS5uZXQvX19jYjIwMTAxMTAxMTM1NjQwL2xvZ29wZWRpYS9pbWFnZXMvZC9kNS9BQkNfbG9nb18yMDA3LnBuZwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9Njg5NjkgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsQUJDIEZhbWlseSNJTUc6aHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvY29tbW9ucy90aHVtYi82LzZiL0FCQ19GYW1pbHlfbG9nby5zdmcvMjAwMHB4LUFCQ19GYW1pbHlfbG9nby5zdmcucG5nCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD0zMDMwMyZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLEFCQyBGYW1pbHkjSU1HOmh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2NvbW1vbnMvdGh1bWIvNi82Yi9BQkNfRmFtaWx5X2xvZ28uc3ZnLzIwMDBweC1BQkNfRmFtaWx5X2xvZ28uc3ZnLnBuZwpodHRwOi8vemVyb2Nhc3QudHYvZW1iZWQucGhwP2E9MTg1MiZpZD0md2lkdGg9NzAwJmhlaWdodD00ODAmYXV0b3N0YXJ0PXRydWUmc3RyZWNoPSAmUkVGJmh0dHA6Ly93d3cuemVyY2FzdC50di8KCiNFWFRJTkY6MCxBQkMgTmV3cyNJTUc6aHR0cDovL2ltZzMud2lraWEubm9jb29raWUubmV0L19fY2IyMDEzMDcyODEzNDU0MC9sb2dvcGVkaWEvaW1hZ2VzLzAvMDgvQUJDX05ld3NfMjAxM2IucG5nCmh0dHA6Ly9hYmNsaXZlLmFiY25ld3MuY29tL2kvYWJjX2xpdmU0QDEzNjMzMC9pbmRleF8xMjAwX2F2LWIubTN1OAoKI0VYVElORjotMSxBbmltYWwgUGxhbmV0IFVTI0lNRzpodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zL3RodW1iLzAvMDcvQW5pbWFsX1BsYW5ldF9sb2dvLnN2Zy83OTdweC1BbmltYWxfUGxhbmV0X2xvZ28uc3ZnLnBuZwpodHRwOi8vODAuODAuMTYwLjE2OC9saXZlLzEvbGl2ZS5tM3U4CgojRVhUSU5GOjAsQSZFI0lNRzpodHRwOi8vYmxvZ3MudGVubmVzc2Vhbi5jb20vdHVuZWluL2ZpbGVzLzIwMTMvMDkvQUUtbG9nby5qcGcKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY4OTUyJmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsQU1DI0lNRzpodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9lbi8yLzJkL0FNQ19sb2dvXzIwMTMucG5nCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02ODk2MyZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLEJsb29tYmVyZyNJTUc6aHR0cDovL2Zzcm91bmR0YWJsZS5vcmcvd3AtY29udGVudC91cGxvYWRzLzIwMTQvMDcvYmxvb21iZXJnLXdlYi1sb2dvLnBuZwpodHRwOi8vY2RuMy52aWRlb3MuYmxvb21iZXJnLmNvbS9idHYvdXMvbWFzdGVyLm0zdTgKCiNFWFRJTkY6MCxDYXJ0b29uIE5ldHdvcmsjSU1HOmh0dHA6Ly92aWduZXR0ZTIud2lraWEubm9jb29raWUubmV0L2NhcnRvb25uZXR3b3JrL2ltYWdlcy9mL2ZkL0NhcnRvb25fTmV0d29ya19Mb2dvXyhSZWJvb3RlZF9EZXNpZ24pLmpwZwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzE2MzImYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxDQlMjSU1HOmh0dHA6Ly92aWduZXR0ZTEud2lraWEubm9jb29raWUubmV0L2hvd2ltZXR5b3VyZGFkL2ltYWdlcy9iL2IyL0Nicy1sb2dvLmpwZwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9Njk5NTYgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsQ05OIFVTQSNJTUc6aHR0cDovL2Nkbi50cmVuZC5hei9waWN0dXJlcy8yMDEyLzExLzA5L0NOTl9sb2dvXzA5MTExMi5qcGcKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY4OTY3JmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsQ05OIEludGVybmF0aW9uYWwjSU1HOmh0dHA6Ly9jZG4udHJlbmQuYXovcGljdHVyZXMvMjAxMi8xMS8wOS9DTk5fbG9nb18wOTExMTIuanBnCmh0dHA6Ly9lZGdlMS5ldmVyeW9uLnR2L2V0djFzYi9waGQxNi9wbGF5bGlzdC5tM3U4CgojRVhUSU5GOjAsQ1RWIEVkbW9udG9uI0lNRzpodHRwOi8vd3d3LnZlcmRpZmVzdGl2YWxlZG1vbnRvbi5jYS9pbWFnZXMvbG9nb3MvQ1RWLnBuZwpodHRwOi8vMTk4LjE3OS4zMS4xOTgvbGl2ZS8yMDUzLmhpZ2guc3RyZWFtLzIwNTMuaGlnaC5zdHJlYW0vaW5kZXgubTN1OAoKI0VYVElORjowLENUViBMZXRoYnJpZGdlI0lNRzpodHRwOi8vd3d3LnZlcmRpZmVzdGl2YWxlZG1vbnRvbi5jYS9pbWFnZXMvbG9nb3MvQ1RWLnBuZwpodHRwOi8vMTk4LjE3OS4zMS4xOTgvbGl2ZS8yMDU5LmhpZ2guc3RyZWFtLzIwNTkuaGlnaC5zdHJlYW0vaW5kZXgubTN1OAoKI0VYVElORjowLENUViBZb3JrdG9uI0lNRzpodHRwOi8vd3d3LnZlcmRpZmVzdGl2YWxlZG1vbnRvbi5jYS9pbWFnZXMvbG9nb3MvQ1RWLnBuZwpodHRwOi8vMTk4LjE3OS4zMS4xOTgvbGl2ZS8yMDYyLmhpZ2guc3RyZWFtLzIwNjIuaGlnaC5zdHJlYW0vaW5kZXgubTN1OAoKI0VYVElORjowLENUViBSZWdpbmEjSU1HOmh0dHA6Ly93d3cudmVyZGlmZXN0aXZhbGVkbW9udG9uLmNhL2ltYWdlcy9sb2dvcy9DVFYucG5nCmh0dHA6Ly8xOTguMTc5LjMxLjE5OC9saXZlLzIwNTYuaGlnaC5zdHJlYW0vMjA1Ni5oaWdoLnN0cmVhbS9pbmRleC5tM3U4CgojRVhUSU5GOjAsQ1cjSU1HOmh0dHA6Ly9pbWcyLndpa2lhLm5vY29va2llLm5ldC9fX2NiMjAwOTExMjAxNzI2MTgvbG9nb3BlZGlhL2ltYWdlcy8yLzIxL1RoZV9DV19sb2dvXzIwMDYuc3ZnCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02ODk3MCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxDVyA5IENoaWNhZ28jSU1HOmh0dHA6Ly9pbWcyLndpa2lhLm5vY29va2llLm5ldC9fX2NiMjAwOTExMjAxNzI2MTgvbG9nb3BlZGlhL2ltYWdlcy8yLzIxL1RoZV9DV19sb2dvXzIwMDYuc3ZnCmh0dHA6Ly93Z250cmlidW5lLWxoLmFrYW1haWhkLm5ldC9pL1dHTlByaW1hcnlfMUAzMDQ2MjIvaW5kZXhfMzUwX2F2LXAubTN1OD8KCiNFWFRJTkY6MCxEaXNjb3ZlcnkgQ2hhbm5lbCNJTUc6aHR0cDovL2ltZzEud2lraWEubm9jb29raWUubmV0L19fY2IyMDE0MTAyNzEwMDQzMC9sb2dvcGVkaWEvaW1hZ2VzL2IvYmQvRGlzY292ZXJ5X0NoYW5uZWxfbG9nby5wbmcKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY5MTEwICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRGlzY292ZXJ5IENoIFVTIEhEWy9DT0xPUl0jSU1HOmh0dHA6Ly9pbWcxLndpa2lhLm5vY29va2llLm5ldC9fX2NiMjAxNDEwMjcxMDA0MzAvbG9nb3BlZGlhL2ltYWdlcy9iL2JkL0Rpc2NvdmVyeV9DaGFubmVsX2xvZ28ucG5nCmh0dHA6Ly84MC44MC4xNjAuMTY4L2xpdmUvOC9saXZlLm0zdTggCgojRVhUSU5GOi0xLERpc2NvdmVyeSBJRCBVUyNJTUc6aHR0cHM6Ly9wbWNkZWFkbGluZTIuZmlsZXMud29yZHByZXNzLmNvbS8yMDE0LzA3L2lkLWludmVzdGlnYXRpb24tZGlzY292ZXJ5LWxvZ28uanBnP3c9OTcwCmh0dHA6Ly84MC44MC4xNjAuMTY4L2xpdmUvNS9saXZlLm0zdTgKCiNFWFRJTkY6LTEsRGlzY292ZXJ5IFNjIFVTI0lNRzpodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9lbi90aHVtYi82LzZkL0Rpc2NvdmVyeV9TY2llbmNlX0NhbmFkYV8yMDExLlBORy8yMDBweC1EaXNjb3ZlcnlfU2NpZW5jZV9DYW5hZGFfMjAxMS5QTkcKaHR0cDovLzgwLjgwLjE2MC4xNjgvbGl2ZS85L2xpdmUubTN1OCAKCiNFWFRJTkY6MCxEaXNuZXkganIvY2hhbm5lbCNJTUc6aHR0cDovL3ZpZ25ldHRlMy53aWtpYS5ub2Nvb2tpZS5uZXQvYXVzdGluYWxseS9pbWFnZXMvZC9kZC9EaXNuZXlfQ2hhbm5lbF9uZXdfbG9nby5wbmcKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTM4ODA0ICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLEZveCBOZXR3b3JrI0lNRzpodHRwOi8vd3d3LmZveC5jb20vc2l0ZXMvZGVmYXVsdC9maWxlcy9mb3hfbG9nb18wLmpwZwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzAwNDggJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsSGlzdG9yeSBDaGFubmVsI0lNRzpodHRwOi8vd3d3Lm5jdGMuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDEyLzA4L0hpc3RvcnlDaGFubmVsTG9nby5naWYKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcwNjMzICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLEhTTiNJTUc6aHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvY29tbW9ucy90aHVtYi9jL2NiL0hTTl9sb2dvLnN2Zy8xMDAwcHgtSFNOX2xvZ28uc3ZnLnBuZwpodHRwOi8vaHNuLm1wbC5taWlzb2x1dGlvbnMubmV0L2hzbi1saXZlMDEvX2RlZmluc3RfL21wNDo0MjBwNTAwa0IzMS9wbGF5bGlzdC5tM3U4CgojRVhUSU5GOjAsSFNOIDIjSU1HOmh0dHA6Ly9pbWcxLndpa2lhLm5vY29va2llLm5ldC9fX2NiMjAxNDAzMTkxMDQ0NTgvbG9nb3BlZGlhL2ltYWdlcy8xLzE2L0hzbjIuanBnCmh0dHA6Ly9oc24ubXBsLm1paXNvbHV0aW9ucy5uZXQvaHNuLWxpdmUwMS9fZGVmaW5zdF8vbXA0OjQ2OHA1MDBrQjMxL3BsYXlsaXN0Lm0zdTgKCiNFWFRJTkY6MCxNU05CQyNJTUc6aHR0cDovL3d3dy5wdWdldHNvdW5kcmFkaW8uY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE0LzEwL21zbmJjLWxvZ29XSElURWFuZ2xlLmpwZwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NjkwMjQgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsTVRWI0lNRzpodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zL3RodW1iL2MvY2UvTVRWLUxvZ28uc3ZnLzIwMDBweC1NVFYtTG9nby5zdmcucG5nCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02OTAzNyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxOYXRpb25hbCBHb2VncmFwaGljI0lNRzpodHRwOi8vZmFtb3VzbG9nb3MubmV0L2ltYWdlcy9uYXRpb25hbC1nZW9ncmFwaGljLWxvZ28uanBnCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02OTAxOCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxbQ09MT1IgZ3JlZW5dTkFTQSBUViBIRFsvQ09MT1JdI0lNRzpodHRwOi8vMy5icC5ibG9nc3BvdC5jb20vX09SQ3k4YjVidW9VL1RGTVhGd0tPUEpJL0FBQUFBQUFBQU1rL3V3VktLQi0wMXlZL3MxNjAwL25hc2ElMkJ0di5wbmcKaHR0cDovL25hc2F0di1saC5ha2FtYWloZC5uZXQvaS9OQVNBXzEwMUAzMTkyNzAvaW5kZXhfMTAwMF9hdi1iLm0zdTg/aGQ9MTAmcmViYXNlPW9uCgojRVhUSU5GOjAsTmlja2Vsb2Rlb24jSU1HOmh0dHA6Ly9pbWczLndpa2lhLm5vY29va2llLm5ldC9fX2NiMjAxMTExMDYwNjExMzIvbG9nb3BlZGlhL2ltYWdlcy82LzYyL05JQ0tFTE9ERU9OX0xvZ28ucG5nCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MTExMiAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxPV04jSU1HOmh0dHBzOi8vcG1jdmFyaWV0eS5maWxlcy53b3JkcHJlc3MuY29tLzIwMTQvMDgvb3duLWxvZ28uanBnCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD01Mzg1NyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6LTEsUGxhbmV0IEdyZWVuIFVTI0lNRzpodHRwOi8vd3cxLnByd2ViLmNvbS9wcmZpbGVzLzIwMDcvMDgvMDEvMjQzNzAyL1BHMi5KUEcKaHR0cDovLzgwLjgwLjE2MC4xNjgvbGl2ZS80L2xpdmUubTN1OCAKCiNFWFRJTkY6LTEsUlQgVG9kYXkjSU1HOmh0dHA6Ly8zLmJwLmJsb2dzcG90LmNvbS8tdk9DV0M3QXQzOVUvVWNKZU5jYlJZUUkvQUFBQUFBQUFCQlEvUDIyRmRDbUhyeDAvczE2MDAvUlQrTmV3cytMaXZlK1R2LStXYXRjaCtSVCtOZXdzK0xpdmUrZnJlZStTdHJlYW1pbmcrT25saW5lK1BsYXkrTm93LnBuZwpodHRwOi8vcnQuYXBpLnZpc2lvbmlwLnR2L2xpdmUvQVNIVFRQL1JUX0FtZXJpY2EtTUIvcGxheWxpc3QubTN1OAoKI0VYVElORjotMSxTaG93dGltZSBVUyNJTUc6aHR0cDovL2ltZzIud2lraWEubm9jb29raWUubmV0L19fY2IyMDEwMDQwNTA3MTM0MS9sb2dvcGVkaWEvaW1hZ2VzLzEvMWMvU2hvd3RpbWVfMTk5Ny5zdmcKaHR0cDovLzgwLjgwLjE2MC4xNjgvbGl2ZS83L2xpdmUubTN1OAoKI0VYVElORjowLFNwaWtlIFR2I0lNRzpodHRwOi8vd3d3Lm1tYXJlY2FwLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAwOS8wOC9TcGlrZV9UVl9Mb2dvLmpwZwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NTI0NzkgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsc3lmeSNJTUc6aHR0cDovL2ltZzEud2lraWEubm9jb29raWUubmV0L19fY2IyMDEwMTEyNzE0MzMwOS9sb2dvcGVkaWEvaW1hZ2VzLzgvODkvU3lmeV9JRC5qcGcKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY4OTY2ICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLHN5ZnkjSU1HOmh0dHA6Ly9pbWcxLndpa2lhLm5vY29va2llLm5ldC9fX2NiMjAxMDExMjcxNDMzMDkvbG9nb3BlZGlhL2ltYWdlcy84Lzg5L1N5ZnlfSUQuanBnCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MTIwNiAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxzeWZ5I0lNRzpodHRwOi8vaW1nMS53aWtpYS5ub2Nvb2tpZS5uZXQvX19jYjIwMTAxMTI3MTQzMzA5L2xvZ29wZWRpYS9pbWFnZXMvOC84OS9TeWZ5X0lELmpwZwpodHRwOi8vMzcuNDguODMuMTMxOjE5MzUvbGl2ZS9zeWZ5NzcvcGxheWxpc3QubTN1OAoKI0VYVElORjowLFRCUyNJTUc6aHR0cDovL2xvZ29rLm9yZy93cC1jb250ZW50L3VwbG9hZHMvMjAxNC8xMi9UQlMtbG9nby1ibHVlLnBuZwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NTMxNjEgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsVEYxCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MDQ2OCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6LTEsVExDIFVTICNJTUc6aHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvY29tbW9ucy90aHVtYi80LzRiL0xvZ29fVExDLnN2Zy8yMDAwcHgtTG9nb19UTEMuc3ZnLnBuZwpodHRwOi8vODAuODAuMTYwLjE2OC9saXZlLzIvbGl2ZS5tM3U4CgojRVhUSU5GOi0xLFROVCNJTUc6aHR0cDovL3d3dy5naWJyYWx0YXJjb3VyaWVycy5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTQvMDIvVE5ULnBuZwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NjkwMjAmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6LTEsVHJhdmVsIENoLlVTICNJTUc6aHR0cDovL3d3dy50cmF2ZWxjaGFubmVsLmNvLnVrL2ltZy9sb2dvcy9sb2dvLnN2ZwpodHRwOi8vODAuODAuMTYwLjE2OC9saXZlLzMvbGl2ZS5tM3U4IAoKI0VYVElORjotMSxUcmF2ZWwgQ2guVVMgI0lNRzpodHRwOi8vd3d3LnRyYXZlbGNoYW5uZWwuY28udWsvaW1nL2xvZ29zL2xvZ28uc3ZnCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02OTAxOSZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjotMSxUViBMYW5kICNJTUc6aHR0cDovL2ltZzQud2lraWEubm9jb29raWUubmV0L19fY2IyMDEwMDUyNDE1MTEwNC9sb2dvcGVkaWEvaW1hZ2VzL2EvYWQvVFZfTGFuZF8yMDEwLnN2ZwpodHRwOi8vMTg0LjE3My44NS45MToxOTM1L2VkZ2UvX2RlZmluc3RfLzd5eGlycjQwNDZuazVjYS9wbGF5bGlzdC5tM3U4P3dvd3phc2Vzc2lvbmlkPTE0MTk5MDg0MDEKCiNFWFRJTkY6MCxVU0EgTmV0d29yayAjSU1HOmh0dHA6Ly9pbWcxLndpa2lhLm5vY29va2llLm5ldC9fX2NiMjAwOTExMTcxNjAxNTkvbG9nb3BlZGlhL2ltYWdlcy9iL2JlL1VTQV9OZXR3b3JrX2xvZ29fMTk5OS5wbmcKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTM4NzY4ICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLFVTQSBOZXR3b3JrICNJTUc6aHR0cDovL2ltZzEud2lraWEubm9jb29raWUubmV0L19fY2IyMDA5MTExNzE2MDE1OS9sb2dvcGVkaWEvaW1hZ2VzL2IvYmUvVVNBX05ldHdvcmtfbG9nb18xOTk5LnBuZwpodHRwOi8vMzcuNDguODMuMTMxOjE5MzUvbGl2ZS91c2E3Ny9wbGF5bGlzdC5tM3U4P3dvd3phc2Vzc2lvbmlkPTI0NDE2MDI5CgojRVhUSU5GOjAsVkgxICNJTUc6aHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvZW4vdGh1bWIvNC80Ny9WSDFfbG9nby5zdmcvMTI4MHB4LVZIMV9sb2dvLnN2Zy5wbmcKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTUyOTg4ICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKQEBAQEAKR0VOUkUsIFtDT0xPUiBncmVlbl0tLSBVU0EgU3BvcnRzIC0tWy9DT0xPUl0KCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU5CQ1NOIEhEWy9DT0xPUl0gW0NPTE9SIHllbGxvd10gMTA4MHAgTk8gVlBOIE5FRURFRCBbL0NPTE9SXSNJTUc6aHR0cDovL2NkbjEuYmxvZ3Vpbi5jb20vd3AtY29udGVudC91cGxvYWRzL3NpdGVzLzk0LzIwMTQvMDEvbmJjc25ibGFjay5qcGcKaHR0cDovL3R2ZW5iY3NuLWkuQWthbWFpaGQubmV0L2hscy9saXZlLzIxODIzNS9uYmNzbngvNDI5NmsvcHJvZy5tM3U4fFgtRm9yd2FyZGVkLUZvcj02Ni4xNzEuMjI4LjEwMgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1OQkNTTiBIRFsvQ09MT1JdIFtDT0xPUiB5ZWxsb3ddIDcyMHAgTk8gVlBOIE5FRURFRCBbL0NPTE9SXSNJTUc6aHR0cDovL2NkbjEuYmxvZ3Vpbi5jb20vd3AtY29udGVudC91cGxvYWRzL3NpdGVzLzk0LzIwMTQvMDEvbmJjc25ibGFjay5qcGcKaHR0cDovL3R2ZW5iY3NuLWkuQWthbWFpaGQubmV0L2hscy9saXZlLzIxODIzNS9uYmNzbngvMjU5NmsvcHJvZy5tM3U4fFgtRm9yd2FyZGVkLUZvcj02Ni4xNzEuMjI4LjEwMgojRVhUSU5GOi0xLE5CQ1NOIFNEW0NPTE9SIHllbGxvd10gTk8gVlBOIE5FRURFRCBbL0NPTE9SXSNJTUc6aHR0cDovL2NkbjEuYmxvZ3Vpbi5jb20vd3AtY29udGVudC91cGxvYWRzL3NpdGVzLzk0LzIwMTQvMDEvbmJjc25ibGFjay5qcGcKaHR0cDovL3R2ZW5iY3NuLWkuQWthbWFpaGQubmV0L2hscy9saXZlLzIxODIzNS9uYmNzbngvMTg5NmsvcHJvZy5tM3U4fFgtRm9yd2FyZGVkLUZvcj02Ni4xNzEuMjI4LjEwMgoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dR29sZiBDaGFubmVsIDEwODAgSEQgWy9DT0xPUl0gKEVORykoTk8gVlBOIFJFUVVJUkVEKSNJTUc6aHR0cDovL2NkbjEuYmxvZ3Vpbi5jb20vd3AtY29udGVudC91cGxvYWRzL3NpdGVzLzk0LzIwMTQvMDEvbmJjc25ibGFjay5qcGcKaHR0cDovL3R2ZWdvbGYtaS5Ba2FtYWloZC5uZXQvaGxzL2xpdmUvMjE4MjI1L2dvbGZ4LzQyOTZrL3Byb2cubTN1OHxYLUZvcndhcmRlZC1Gb3I9NjYuMTcxLjIyOC4xMDIKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dR29sZiBDaGFubmVsIDcyMCBIRCBbL0NPTE9SXSAoRU5HKShOTyBWUE4gUkVRVUlSRUQpI0lNRzpodHRwOi8vY2RuMS5ibG9ndWluLmNvbS93cC1jb250ZW50L3VwbG9hZHMvc2l0ZXMvOTQvMjAxNC8wMS9uYmNzbmJsYWNrLmpwZwpodHRwOi8vdHZlZ29sZi1pLkFrYW1haWhkLm5ldC9obHMvbGl2ZS8yMTgyMjUvZ29sZngvMjU5NmsvcHJvZy5tM3U4fFgtRm9yd2FyZGVkLUZvcj02Ni4xNzEuMjI4LjEwMgojRVhUSU5GOi0xLEdvbGYgQ2hhbm5lbCBTRCAoRU5HKShOTyBWUE4gUkVRVUlSRUQpI0lNRzpodHRwOi8vY2RuMS5ibG9ndWluLmNvbS93cC1jb250ZW50L3VwbG9hZHMvc2l0ZXMvOTQvMjAxNC8wMS9uYmNzbmJsYWNrLmpwZwpodHRwOi8vdHZlZ29sZi1pLkFrYW1haWhkLm5ldC9obHMvbGl2ZS8yMTgyMjUvZ29sZngvMTg5NmsvcHJvZy5tM3U4fFgtRm9yd2FyZGVkLUZvcj02Ni4xNzEuMjI4LjEwMgoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRm94IFNwb3J0cyAxIEdvIFVTQSA3MjBIRFsvQ09MT1JdI0lNRzpodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9lbi9kL2RkL0ZveF9TcG9ydHNfTG9nby5wbmcKaHR0cDovLzU0LjE3Ny4xOTUuODIvc2VydmVyL3BsYXkvZnMxY3RnLzM5NjQwMDAvcHJvZy5tM3U4P2Fudj0xNDI3NDE1MjE5ODk2fFgtRm9yd2FyZGVkLUZvcj02Ni4xNzEuMjI4LjEwMgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Gb3ggU3BvcnRzIDIgR28gVVNBIDcyMEhEWy9DT0xPUl0jSU1HOmh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2VuL2QvZGQvRm94X1Nwb3J0c19Mb2dvLnBuZwpodHRwOi8vNTQuMTc3LjE5NS44Mi9zZXJ2ZXIvcGxheS9mczJjdGcvMzk2NDAwMC9wcm9nLm0zdTg/YW52PTE0Mjc0MTUyMTk4OTZ8WC1Gb3J3YXJkZWQtRm9yPTY2LjE3MS4yMjguMTAyCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Gb3ggU3BvcnRzIDEgVVNBIDcyMEhEWy9DT0xPUl0jSU1HOmh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2VuL2QvZGQvRm94X1Nwb3J0c19Mb2dvLnBuZwpodHRwOi8vdGhldGhhb2hkLm5ldC92L2ZveHNwb3J0MS5waHAgJlJFRiZodHRwOi8vdGhldGhhb2hkLm5ldC8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRm94IFNwb3J0cyAyIFVTQSA3MjBIRFsvQ09MT1JdI0lNRzpodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9lbi9kL2RkL0ZveF9TcG9ydHNfTG9nby5wbmcKaHR0cDovL3RoZXRoYW9oZC5uZXQvdi9mb3hzcG9ydDIucGhwICZSRUYmaHR0cDovL3RoZXRoYW9oZC5uZXQvCgojRVhUSU5GOi0xLEVTUE4KaHR0cDovLzE5Mi45OS4zOS4yNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2VzcG4vcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjotMSxFU1BOMgpodHRwOi8vMTkyLjk5LjM5LjI0MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vZXNwbjIvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjotMSxGb3hzcG9ydHMxI0lNRzpodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9lbi9kL2RkL0ZveF9TcG9ydHNfTG9nby5wbmcKaHR0cDovLzE5Mi45OS4zOS4yNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2ZveHNwb3J0czEvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjotMSxGb3hzcG9ydHMyI0lNRzpodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9lbi9kL2RkL0ZveF9TcG9ydHNfTG9nby5wbmcKaHR0cDovLzE5Mi45OS4zOS4yNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2ZveHNwb3J0czIvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjotMSxHb2xmQ2hhbm5lbCNJTUc6aHR0cDovL2NkbjEuYmxvZ3Vpbi5jb20vd3AtY29udGVudC91cGxvYWRzL3NpdGVzLzk0LzIwMTQvMDEvbmJjc25ibGFjay5qcGcKaHR0cDovLzE2Ny4xMTQuMTU2LjMwOjE5MzUvZmx1NTU1L19kZWZpbnN0Xy9nb2xmL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6LTEsVGVubmlzQ2hhbm5lbApodHRwOi8vMTY3LjExNC4xNTcuNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2p0ZW5uaXMvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjotMSxORkxOZXR3b3JrSEQKaHR0cDovLzE5Mi45OS4xOS45ODoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vam5mbC9wbGF5bGlzdC5tM3U4P3Rva2VuPQoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQmlnIFRlbiBOZXR3b3JrIDcyMEhEWy9DT0xPUl0jSU1HOmh0dHA6Ly93d3cubnI0dy5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTQvMTEvYnRuLmpwZwpodHRwOi8vYmlndGVuMjQ3LmNkbmFrLmJpZ3RlbmhkLm5ldWxpb24uY29tL25sZHMvYnRuMmdvL2J0bm5ldHdvcmsvYXMvbGl2ZS9idG5uZXR3b3JrX2hkXzMwMDAubTN1OAoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTkVTTiA3MjBIRFsvQ09MT1JdCnJ0bXA6Ly8yMDkuMTMzLjIwOC4xNzgvYXBwL3hyaXZvNzZzLWNoYW5uZWwgbGl2ZT10cnVlIHN3ZlZmeT10cnVlIHBhZ2VVcmw9aHR0cDovL3d3dy5teWJlc3RzdHJlYW1zLmNvbS9wL215YmVzdGhkNC5odG1sIHRpbWVvdXQ9MTUKCiNFWFRJTkY6LTEsRm94IFNwb3J0cyAxI0lNRzpodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9lbi9kL2RkL0ZveF9TcG9ydHNfTG9nby5wbmcKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9Zm94c3AxJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLEZveCBTcG9ydHMgMiNJTUc6aHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvZW4vZC9kZC9Gb3hfU3BvcnRzX0xvZ28ucG5nCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWZveHNwMiZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxFU1BOIDIKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9ZXNucDIyJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLE1MQiBORVRXT1JLIExpdmUKcnRtcDovLzEwOS4xMjMuNzAuMzg6ODAvbGl2ZSBwbGF5cGF0aD1tbGJ4eCBzd2ZVcmw9aHR0cDovL3AuandwY2RuLmNvbS82LzEyL2p3cGxheWVyLmZsYXNoLnN3ZiBsaXZlPTEgcGFnZVVybD1odHRwOi8vcmV5dHYuY28vZW1iZWRvLnBocD9saXZlPW1sYnh4JnZ3PTYyMCZ2aD00OTAgdG9rZW49JVpyZXkobkthQCNaIHRpbWVvdXQ9MTAKCiNFWFRJTkY6MCxFU1BOCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD00ODA1MSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6LTEsRVNQTiBIRCBVUyAKaHR0cDovLzgwLjgwLjE2MC4xNjgvbGl2ZS82L2xpdmUubTN1OAoKI0VYVElORjowLEdvbGYgQ2hhbm5lbApodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NjkwMjYgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsTkJBIFRWCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MTU2MiAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxOQkEgVFYgT25saW5lCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02OTMxMCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxOQkNTTiNJTUc6aHR0cDovL2NkbjEuYmxvZ3Vpbi5jb20vd3AtY29udGVudC91cGxvYWRzL3NpdGVzLzk0LzIwMTQvMDEvbmJjc25ibGFjay5qcGcKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY0MjMyICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLE5GTCBOZXR3b3JrI0lNRzpodHRwOi8vaW1nMy53aWtpYS5ub2Nvb2tpZS5uZXQvX19jYjIwMTQwODE0MTgyODE3L2xvZ29wZWRpYS9pbWFnZXMvMS8xMS9OZmxfbmV0d29ya19oZC5wbmcKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcwMjk1ICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjotMSwgUGFjIE5hdGlvbmFsIDEwODAgSEQjSU1HOmh0dHBzOi8vc2F0dXJkYXluaXRlbGl0ZXMuZmlsZXMud29yZHByZXNzLmNvbS8yMDExLzA1L3R1bWJscl9saWZpb2NobHhtMXFldHJtZW8xXzUwMC5wbmcKaHR0cDovL3hyeHMubmV0L3ZpZGVvL2xpdmUtcDEybmV0dy00NzI4Lm0zdTg/VmQ/dSNidCEyNQogCiNFWFRJTkY6LTEsIFBhYyBBcml6b25hIDEwODAgSEQjSU1HOmh0dHBzOi8vc2F0dXJkYXluaXRlbGl0ZXMuZmlsZXMud29yZHByZXNzLmNvbS8yMDExLzA1L3R1bWJscl9saWZpb2NobHhtMXFldHJtZW8xXzUwMC5wbmcKaHR0cDovL3hyeHMubmV0L3ZpZGVvL2xpdmUtcDEyYXJpei00NzI4Lm0zdTg/VmQ/dSNidCEyNQogCiNFWFRJTkY6LTEsIFBhYyBCYXkgQXJlYSA3MjAgSEQjSU1HOmh0dHBzOi8vc2F0dXJkYXluaXRlbGl0ZXMuZmlsZXMud29yZHByZXNzLmNvbS8yMDExLzA1L3R1bWJscl9saWZpb2NobHhtMXFldHJtZW8xXzUwMC5wbmcKaHR0cDovL3hyeHMubmV0L3ZpZGVvL2xpdmUtcDEyYmF5YS0yMzI4Lm0zdTg/VmQ/dSNidCEyNQogCiNFWFRJTkY6LTEsIFBhYyBMb3MgQW5nZWxlcyAxMDgwIEhEI0lNRzpodHRwczovL3NhdHVyZGF5bml0ZWxpdGVzLmZpbGVzLndvcmRwcmVzcy5jb20vMjAxMS8wNS90dW1ibHJfbGlmaW9jaGx4bTFxZXRybWVvMV81MDAucG5nCmh0dHA6Ly94cnhzLm5ldC92aWRlby9saXZlLXAxMmxvc2EtNDcyOC5tM3U4P1ZkP3UjYnQhMjUKIAojRVhUSU5GOi0xLCBQYWMgTW91bnRhaW4gMTA4MCBIRCNJTUc6aHR0cHM6Ly9zYXR1cmRheW5pdGVsaXRlcy5maWxlcy53b3JkcHJlc3MuY29tLzIwMTEvMDUvdHVtYmxyX2xpZmlvY2hseG0xcWV0cm1lbzFfNTAwLnBuZwpodHRwOi8veHJ4cy5uZXQvdmlkZW8vbGl2ZS1wMTJtb3VuLTQ3MjgubTN1OD9WZD91I2J0ITI1CiAKI0VYVElORjotMSxQQUMtMTIgTmV0LiAoTmF0aW9uYWwpI0lNRzpodHRwczovL3NhdHVyZGF5bml0ZWxpdGVzLmZpbGVzLndvcmRwcmVzcy5jb20vMjAxMS8wNS90dW1ibHJfbGlmaW9jaGx4bTFxZXRybWVvMV81MDAucG5nCmh0dHA6Ly94cnhzLm5ldC92aWRlby9saXZlLXAxMm5ldHctNDcyOC5tM3U4P1ZkP3UjYnQhMjUKIAojRVhUSU5GOi0xLFBBQy0xMiBOZXQuIChBcml6b25hKSNJTUc6aHR0cHM6Ly9zYXR1cmRheW5pdGVsaXRlcy5maWxlcy53b3JkcHJlc3MuY29tLzIwMTEvMDUvdHVtYmxyX2xpZmlvY2hseG0xcWV0cm1lbzFfNTAwLnBuZwpodHRwOi8veHJ4cy5uZXQvdmlkZW8vbGl2ZS1wMTJhcml6LTQ3MjgubTN1OD9WZD91I2J0ITI1CiAKI0VYVElORjotMSxQQUMtMTIgTmV0LiAoQmF5IEFyZWEpI0lNRzpodHRwczovL3NhdHVyZGF5bml0ZWxpdGVzLmZpbGVzLndvcmRwcmVzcy5jb20vMjAxMS8wNS90dW1ibHJfbGlmaW9jaGx4bTFxZXRybWVvMV81MDAucG5nCmh0dHA6Ly94cnhzLm5ldC92aWRlby9saXZlLXAxMmJheWEtNDcyOC5tM3U4P1ZkP3UjYnQhMjUKIAojRVhUSU5GOi0xLFBBQy0xMiBOZXQuIChMb3MgQW5nZWxlcykjSU1HOmh0dHBzOi8vc2F0dXJkYXluaXRlbGl0ZXMuZmlsZXMud29yZHByZXNzLmNvbS8yMDExLzA1L3R1bWJscl9saWZpb2NobHhtMXFldHJtZW8xXzUwMC5wbmcKaHR0cDovL3hyeHMubmV0L3ZpZGVvL2xpdmUtcDEybG9zYS00NzI4Lm0zdTg/VmQ/dSNidCEyNQogCiNFWFRJTkY6LTEsUEFDLTEyIE5ldC4gKE1vdXRhaW4pI0lNRzpodHRwczovL3NhdHVyZGF5bml0ZWxpdGVzLmZpbGVzLndvcmRwcmVzcy5jb20vMjAxMS8wNS90dW1ibHJfbGlmaW9jaGx4bTFxZXRybWVvMV81MDAucG5nCmh0dHA6Ly94cnhzLm5ldC92aWRlby9saXZlLXAxMm1vdW4tNDcyOC5tM3U4P1ZkP3UjYnQhMjUKIAojRVhUSU5GOi0xLFBBQy0xMiBOZXQuIChPcmVnb24pI0lNRzpodHRwczovL3NhdHVyZGF5bml0ZWxpdGVzLmZpbGVzLndvcmRwcmVzcy5jb20vMjAxMS8wNS90dW1ibHJfbGlmaW9jaGx4bTFxZXRybWVvMV81MDAucG5nCmh0dHA6Ly94cnhzLm5ldC92aWRlby9saXZlLXAxMm9yZWctNDcyOC5tM3U4P1ZkP3UjYnQhMjUKIAojRVhUSU5GOi0xLFBBQy0xMiBOZXQuIChXYXNoaW5ndG9uKSNJTUc6aHR0cHM6Ly9zYXR1cmRheW5pdGVsaXRlcy5maWxlcy53b3JkcHJlc3MuY29tLzIwMTEvMDUvdHVtYmxyX2xpZmlvY2hseG0xcWV0cm1lbzFfNTAwLnBuZwpodHRwOi8veHJ4cy5uZXQvdmlkZW8vbGl2ZS1wMTJ3YXNoLTQ3MjgubTN1OD9WZD91I2J0ITI1CgojRVhUSU5GOi0xLFdXRSBOZXR3b3JrI0lNRzpodHRwOi8vbWVkaWEuY3JlYXRpdmVibG9xLmZ1dHVyZWNkbi5uZXQvc2l0ZXMvY3JlYXRpdmVibG9xLmNvbS9maWxlcy9pbWFnZXMvMjAxNC8wNy9uZXctV1dFMS5qcGcKaHR0cDovLzM3LjQ4LjgzLjEzMToxOTM1L2xpdmUvd3dlZS9wbGF5bGlzdC5tM3U4P3dvd3phc2Vzc2lvbmlkPTIwNTY4OTU2NTMKCkBAQEBACgpHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIENBTkFEQSBTcG9ydHMgJiBUViAtLVsvQ09MT1JdCiNFWFRJTkY6MCxHbG9iYWwKaHR0cDovLzE5Mi45OS4xOS45ODoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vZ2xvYmFsL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6MCxHbG9iYWwKaHR0cDovLzE2Ny4xMTQuMTU3LjQwOjE5MzUvZmx1NTU1L19kZWZpbnN0Xy9nbG9iYWwvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjowLENUViAKaHR0cDovLzE5Mi45OS4zOS4yNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2N0di9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOjAsQ1RWCmh0dHA6Ly8xNjcuMTE0LjE1Ny40MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vY3R2L3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6MCxDQkMgCmh0dHA6Ly8xOTIuOTkuMzkuMjQwOjE5MzUvZmx1NTU1L19kZWZpbnN0Xy9jYmMvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjowLENCQyAKaHR0cDovLzE2Ny4xMTQuMTU3LjQwOjE5MzUvZmx1NTU1L19kZWZpbnN0Xy9jYmMvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjowLFJESSAKaHR0cDovLzE5Mi45OS4zOS4yNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL3JkaS9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOjAsUkRJIApodHRwOi8vMTY3LjExNC4xNTcuNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL3JkaS9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOjAsVFY1IApodHRwOi8vMTkyLjk5LjM5LjI0MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vdHY1L3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6MCxUVjUKaHR0cDovLzE2Ny4xMTQuMTU3LjQwOjE5MzUvZmx1NTU1L19kZWZpbnN0Xy90djUvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjowLFJEUyAyIApodHRwOi8vMTkyLjk5LjM5LjI0MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vcmRzMi9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOjAsUkRTIDIgCmh0dHA6Ly8xNjcuMTE0LjE1Ny40MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vcmRzMi9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOjAsVnJhayAKaHR0cDovLzE5Mi45OS4zOS4yNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL3ZyYWsvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjowLFZyYWsKaHR0cDovLzE2Ny4xMTQuMTU3LjQwOjE5MzUvZmx1NTU1L19kZWZpbnN0Xy92cmFrL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6MCxTdXBlciBlY3JhbiAxIApodHRwOi8vMTkyLjk5LjM5LjI0MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vc3VwZXJlY3JhbjEvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjowLFN1cGVyIGVjcmFuIDEgCmh0dHA6Ly8xNjcuMTE0LjE1Ny40MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vc3VwZXJlY3JhbjEvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjowLFN1cGVyIGVjcmFuIDIgCmh0dHA6Ly8xOTIuOTkuMzkuMjQwOjE5MzUvZmx1NTU1L19kZWZpbnN0Xy9zdXBlcmVjcmFuMi9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOjAsU3VwZXIgZWNyYW4gMiAKaHR0cDovLzE2Ny4xMTQuMTU3LjQwOjE5MzUvZmx1NTU1L19kZWZpbnN0Xy9zdXBlcmVjcmFuMi9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOjAsU3VwZXIgZWNyYW4gMyAKaHR0cDovLzE5Mi45OS4zOS4yNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL3N1cGVyZWNyYW4zL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6MCxTdXBlciBlY3JhbiAzIApodHRwOi8vMTY3LjExNC4xNTcuNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL3N1cGVyZWNyYW4zL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6MCxTdXBlciBlY3JhbiA0Cmh0dHA6Ly8xOTIuOTkuMzkuMjQwOjE5MzUvZmx1NTU1L19kZWZpbnN0Xy9zdXBlcmVjcmFuNC9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOjAsU3VwZXIgZWNyYW4gNCAKaHR0cDovLzE2Ny4xMTQuMTU3LjQwOjE5MzUvZmx1NTU1L19kZWZpbnN0Xy9zdXBlcmVjcmFuNC9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOjAsQ1AyNCAKaHR0cDovLzE5Mi45OS4zOS4yNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2NwMjQvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjowLENQMjQgCmh0dHA6Ly8xNjcuMTE0LjE1Ny40MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vY3AyNC9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOjAsQ0hDSCAKaHR0cDovLzE5Mi45OS4zOS4yNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2NoY2gvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjowLENIQ0gKaHR0cDovLzE2Ny4xMTQuMTU3LjQwOjE5MzUvZmx1NTU1L19kZWZpbnN0Xy9jaGNoL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6MCxIR1RWCmh0dHA6Ly8xNjcuMTE0LjE1Ni4zMDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vamhndHYvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjowLEhHVFYKaHR0cDovLzE5Mi45OS4zOS4yNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2poZ3R2L3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6MCxTbGljZQpodHRwOi8vMTkyLjk5LjM5LjI0MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vc2xpY2UvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjowLFNsaWNlCmh0dHA6Ly8xNjcuMTE0LjE1Ny40MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vc2xpY2UvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjowLERlamFWaWV3IApodHRwOi8vMTkyLjk5LjM5LjI0MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vZGVqYXZpZXcvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjowLERlamFWaWV3Cmh0dHA6Ly8xNjcuMTE0LjE1Ny40MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vZGVqYXZpZXcvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjowLFN1cGVyIENoYW5uZWwgMQpodHRwOi8vMTkyLjk5LjM5LjI0MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vc3VwZXJjaGFubmVsMS9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOjAsU3VwZXIgQ2hhbm5lbCAxCmh0dHA6Ly8xNjcuMTE0LjE1Ny40MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vc3VwZXJjaGFubmVsMS9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOjAsU3VwZXIgQ2hhbm5lbCAyCmh0dHA6Ly8xOTIuOTkuMzkuMjQwOjE5MzUvZmx1NTU1L19kZWZpbnN0Xy9zdXBlcmNoYW5uZWwyL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6MCxTdXBlciBDaGFubmVsIDIKaHR0cDovLzE2Ny4xMTQuMTU3LjQwOjE5MzUvZmx1NTU1L19kZWZpbnN0Xy9zdXBlcmNoYW5uZWwyL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6MCxNRmVzdCAKaHR0cDovLzE5Mi45OS4zOS4yNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL21mZXN0L3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6MCxNRmVzdApodHRwOi8vMTY3LjExNC4xNTcuNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL21mZXN0L3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6MCxUZWxldG9vbgpodHRwOi8vMTkyLjk5LjM5LjI0MDoxOTM1L2ZsdTU1NS9fZGVmaW5zdF8vdGVsZXRvb24vcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjowLFRlbGV0b29uCmh0dHA6Ly8xNjcuMTE0LjEwMS4xODg6MTkzNS9mbHU1NTUvX2RlZmluc3RfL3RlbGV0b29uL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6MCxUcmVlaG91c2UKaHR0cDovLzE5Mi45OS4zOS4yNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL3RyZWVob3VzZS9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOjAsVHJlZWhvdXNlCmh0dHA6Ly8xNjcuMTE0LjEwMS4xODg6MTkzNS9mbHU1NTUvX2RlZmluc3RfL3RyZWVob3VzZS9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOjAsWVRWCmh0dHA6Ly8xOTIuOTkuMzkuMjQwOjE5MzUvZmx1NTU1L19kZWZpbnN0Xy95dHYvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjowLFlUVgpodHRwOi8vMTY3LjExNC4xMDEuMTg4OjE5MzUvZmx1NTU1L19kZWZpbnN0Xy95dHYvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjowLEZhbWlseSAKaHR0cDovLzE5Mi45OS4zOS4yNDA6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2ZhbWlseS9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOjAsRmFtaWx5IApodHRwOi8vMTY3LjExNC4xMDEuMTg4OjE5MzUvZmx1NTU1L19kZWZpbnN0Xy9mYW1pbHkvcGxheWxpc3QubTN1OD90b2tlbj0KI0VYVElORjowLFNwb3J0c25ldCAzNjAgCmh0dHA6Ly8xOTIuOTkuMTkuOTg6MTkzNS9mbHU1NTUvX2RlZmluc3RfL3NuMzYwL3BsYXlsaXN0Lm0zdTg/dG9rZW49CiNFWFRJTkY6MCxTcG9ydHNuZXQgMzYwIApodHRwOi8vMTY3LjExNC4xMDEuMTg4OjE5MzUvZmx1NTU1L19kZWZpbnN0Xy9zbjM2MC9wbGF5bGlzdC5tM3U4P3Rva2VuPQojRVhUSU5GOi0xLENIQ0ggSGFtaWx0b24gSEQKcnRtcDovLzU0Ljg1LjE5Ny4yMToxOTM1L2xpdmUvbmV3cyBsaXZlPTEgdGltZW91dD0xNQojRVhUSU5GOi0xLEdsb2JhbCBUViBWYW5jb3V2ZXIgSEQKaHR0cDovL2xpbmsudGhlcGxhdGZvcm0uY29tL3MvZHRqc0VDL0VxQlBHWUxZNmZFeD9mZWVkPURFViUyMExpdmUlMjBTdHJlYW0lMjBGZWVkCiNFWFRJTkY6LTEsR2xvYmFsIFRWIFRvcm9udG8gSEQKaHR0cDovL2xpbmsudGhlcGxhdGZvcm0uY29tL3MvZHRqc0VDL2hkU0gzaXp0el9qXz9mZWVkPURFViUyMExpdmUlMjBTdHJlYW0lMjBGZWVkCiNFWFRJTkY6LTEsR2xvYmFsIFRWIEhhbGlmYXggSEQKaHR0cDovL2xpbmsudGhlcGxhdGZvcm0uY29tL3MvZHRqc0VDLzc3bDFLQV9HXzVQMT9mZWVkPURFViUyMExpdmUlMjBTdHJlYW0lMjBGZWVkCiNFWFRJTkY6LTEsQ0JDIE5ld3N3b3JsZApydG1wOi8vZC5jZG4ubmV3c2NoYXQudHYvZWRnZSBwbGF5cGF0aD1jYW5hZGFzX2xpdmUgc3dmVXJsPWh0dHA6Ly9tc25iY2xpdmUuZXUvcGxheWVyLnN3ZiBsaXZlPTEgbGl2ZT10cnVlIHBhZ2VVcmw9aHR0cDovL3d3dy5saXZlbmV3c2NoYXQuZXUvY2FuYWRhLwojRVhUSU5GOi0xLENCQyBOZXdzIENoYW5uZWwKcnRtcDovL2MuY2RuLm5ld3NjaGF0LnR2L2VkZ2UgcGxheXBhdGg9Y2JjX2xpdmUgc3dmVXJsPWh0dHA6Ly9uZXdzY2hhdC50di9wbGF5ZXIuc3dmIGxpdmU9MSBsaXZlPXRydWUgcGFnZVVybD1odHRwOi8vd3d3LmxpdmVuZXdzY2hhdC5ldS9jYW5hZGEvCiNFWFRJTkY6LTEsQ1RWIE5ld3MgKE5FVykKaHR0cDovL2NhcGkuOWM5bWVkaWEuY29tL2Rlc3RpbmF0aW9ucy9jdHZuZXdzX3dlYi9wbGF0Zm9ybXMvZGVza3RvcC9jb250ZW50cy82MDg5NDAvY29udGVudHBhY2thZ2VzLzY3ODU3NS9zdGFja3MvMTU2NjA1My9tYW5pZmVzdC5mNG0KI0VYVElORjotMSxDUCBOZXdzIGxpdmUgMSA3MjAgSEQKaHR0cDovL2Ftcy1scDEwLjljOW1lZGlhLmNvbS9oZHMtbGl2ZS9saXZlcGtnci9fZGVmaW5zdF8vbGl2ZU5ld3MvQ1AyNE5ld3MxOC5mNG0KI0VYVElORjotMSxDUDI0IE5ld3MgTGl2ZSAyIDcyMEhECmh0dHA6Ly9hbXMtbHA3LjljOW1lZGlhLmNvbS9oZHMtbGl2ZS9saXZlcGtnci9fZGVmaW5zdF8vbGl2ZU5ld3MvQ1AyNE5ld3MyOC5mNG0KI0VYVElORjotMSxIaXN0b3J5IChDYW5hZGEpIEhECmh0dHA6Ly9saW5rLnRoZXBsYXRmb3JtLmNvbS9zL2R0anNFQy9jaGpkWUp4S2I0NFY/bWFuaWZlc3Q9bTN1JmZlZWQ9SGlzdG9yeSUyMExpdmUlMjBTdHJlYW0lMjBGZWVkCiNFWFRJTkY6LTEsVFNDIExpdmUgSEQKaHR0cDovL3RzY3N0cmVhbWluZy1saC5ha2FtYWloZC5uZXQvaS9UU0NMaXZlU3RyZWFtaW5nXzFAOTEwMzEvaW5kZXhfM19hdi1wLm0zdTgKI0VYVElORjotMSxFdXJvU3BvcnQgSEQgKCBGUkVOQ0ggKQpodHRwOi8vZXNpb3NsaXZlNi1pLmFrYW1haWhkLm5ldC9obHMvbGl2ZS8yMDI4OTIvQUxfUF9FU1AxX0ZSX0ZSQS9wbGF5bGlzdC5tM3U4IAojRVhUSU5GOi0xLEZveCBTcG9ydHMgSEQKaHR0cDovL2ZveHNwb3J0c2hkaGxzLWxoLmFrYW1haWhkLm5ldC9pL2ZzbmV3c2hsc18wQDEzNjQyNy9pbmRleF8yMTI4X2F2LXAubTN1OAojRVhUSU5GOi0xLFNwb3J0c25ldCBPbmUKcnRtcDovLzEwOS4xMjMuNzAuMzg6ODAvbGl2ZSBwbGF5cGF0aD1zcG9ydHNuZXR3IHN3ZlVybD1odHRwOi8vcC5qd3BjZG4uY29tLzYvMTIvandwbGF5ZXIuZmxhc2guc3dmIGxpdmU9MSBwYWdlVXJsPWh0dHA6Ly9yZXl0di5jby9lbWJlZG8ucGhwP2xpdmU9c3BvcnRzbmV0dyZ2dz02MjAmdmg9NDkwIHRva2VuPSVacmV5KG5LYUAjWiB0aW1lb3V0PTEwCiNFWFRJTkY6LTEsU3BvcnRzbmV0IE9udGFyaW8KcnRtcDovLzMxLjIyMC4wLjE5NTo4MC9saXZlIHBsYXlwYXRoPXNubyBzd2ZVcmw9aHR0cDovL3AuandwY2RuLmNvbS82LzEyL2p3cGxheWVyLmZsYXNoLnN3ZiBsaXZlPTEgcGFnZVVybD1odHRwOi8vcmV5dHYuY28vZW1iZWRvLnBocD9saXZlPXNubyZ2dz02MjAmdmg9NDkwIHRva2VuPSVacmV5KG5LYUAjWiB0aW1lb3V0PTEwCiNFWFRJTkY6LTEsU3BvcnRzbmV0IFdvcmxkCnJ0bXA6Ly8xNzguMTguMzEuNTM6NDQzL2xpdmVyZXBlYXRlciBwbGF5cGF0aD0xOTEzMDQgc3dmVXJsPWh0dHA6Ly9iZXJuYXJkb3R2LmNsdWIvZnVja2luZ2NvcHkuc3dmIGxpdmU9MSBwYWdlVXJsPWh0dHA6Ly9iaWdnZXN0cGxheWVyLm1lL3N0cmVhbWNyLnBocD9pZD0xOTEzMDQmd2lkdGg9NjIwJmhlaWdodD00OTAgdG9rZW494oCqI+KAjmF0ZOKArCUjJFpIIHRpbWVvdXQ9MTAKI0VYVElORjotMSwzNjAgTm9ydGggKEFMQVNLQSkKaHR0cDovL3N0YXRlLmFrLnR2d21lZGlhLm5ldDoxOTM1L2t0b28tbGl2ZS9fZGVmaW5zdF8vMzYwbm9ydGgvcGxheWxpc3QubTN1OAojRVhUSU5GOi0xLFNwb3J0c25ldCAzNjAgNzIwIEhECmh0dHA6Ly9ubGRzMTg3LmNkbmFrLm5ldWxpb24uY29tL25sZHMvc3BvcnRzbmV0bm93L3NuXzM2MC9hcy9saXZlL3NuXzM2MF9oZF9pcGFkLm0zdTgKI0VYVElORjowLCBUU04gMQpodHRwOi8vNC4zMS4zMC4xNTk6OTA4MgojRVhUSU5GOjAsIFRTTiAyCmh0dHA6Ly80LjMxLjMwLjE1OTo5MDgzCiNFWFRJTkY6MCwgVFNOIDMKaHR0cDovLzQuMzEuMzAuMTU5OjkwODQKI0VYVElORjowLCBUU04gNApodHRwOi8vNC4zMS4zMC4xNTk6OTA4NQojRVhUSU5GOjAsIFRTTiA1Cmh0dHA6Ly80LjMxLjMwLjE1OTo5MDg2CiNFWFRJTkY6LTEsQ0lDQyBDVFYgWW9ya3RvbgpodHRwOi8vMTk4LjE3OS4zMS4xOTgvbGl2ZS8yMDUzLmhpZ2guc3RyZWFtLzIwNTMuaGlnaC5zdHJlYW0vaW5kZXgubTN1OAojRVhUSU5GOi0xLENGUk4gQ1RWIEVkbW9udG9uCmh0dHA6Ly8xOTguMTc5LjMxLjE5OC9saXZlLzIwNTYuaGlnaC5zdHJlYW0vMjA1Ni5oaWdoLnN0cmVhbS9pbmRleC5tM3U4CiNFWFRJTkY6LTEsQ0tDSyBDVFYgUmVnaW5hCmh0dHA6Ly8xOTguMTc5LjMxLjE5OC9saXZlLzIwNTkuaGlnaC5zdHJlYW0vMjA1OS5oaWdoLnN0cmVhbS9pbmRleC5tM3U4CiNFWFRJTkY6LTEsQ0ZDTi01IENUViBMZXRoYnJpZGdlCmh0dHA6Ly8xOTguMTc5LjMxLjE5OC9saXZlLzIwNjIuaGlnaC5zdHJlYW0vMjA2Mi5oaWdoLnN0cmVhbS9pbmRleC5tM3U4CiNFWFRJTkY6LTEsVGhlIFNob3BwaW5nIENoYW5uZWwgSEQKaHR0cDovL3RzY3N0cmVhbWluZy1saC5ha2FtYWloZC5uZXQvaS9UU0NMaXZlU3RyZWFtaW5nXzFAOTEwMzEvaW5kZXhfM19hdi1wLm0zdTgKI0VYVElORjotMSxUaGUgU2hvcHBpbmcgQ2hhbm5lbCBIRApodHRwOi8vdHNjc3RyZWFtaW5nLWxoLmFrYW1haWhkLm5ldC9pL1RTQ0xpdmVTdHJlYW1pbmdfMUA5MTAzMS9pbmRleF8zX2F2LWIubTN1OAojRVhUSU5GOi0xLENQQUMgSEQKaHR0cDovL2JjbGl2ZXVuaXYtbGguYWthbWFpaGQubmV0L2kvY3BhYzFlbmcyMDE0XzAxQDExOTMzMC9pbmRleF8yMDAwX2F2LXAubTN1OAojRVhUSU5GOi0xLENQQUMgSEQKaHR0cDovL2JjbGl2ZXVuaXYtbGguYWthbWFpaGQubmV0L2kvY3BhYzFmbHIyMDE0XzAxQDUxMjMwL2luZGV4XzIwMDBfYXYtcC5tM3U4CiNFWFRJTkY6LTEsV2VhdGhlciBOZXR3b3JrIEhEIChmaXhlZCkKaHR0cDovL2Jjb3ZlbGl2ZWlvcy1pLmFrYW1haWhkLm5ldC9obHMvbGl2ZS8yMDc3MzcvMTk0MjIwMzQ1NTAwMS9uYXQvbWFzdGVyX0xheWVyNS5tM3U4IAojRVhUSU5GOi0xLENCQyBOZXdzCnJ0bXA6Ly9hLmNkbi5uZXdzY2hhdC50di9lZGdlIHBsYXlwYXRoPWNiY19saXZlIHN3ZlVybD1odHRwOi8vbXNuYmNsaXZlLmV1L3BsYXllci5zd2YgcGFnZVVybD1odHRwOi8vd3d3LmxpdmVuZXdzY2hhdC5ldS9jYW5hZGEvIGxpdmU9MSB0aW1lb3V0PTE1CiNFWFRJTkY6LTEsQVJURSAoRnJlbmNoKQpodHRwOi8vZnJsaXZlLmFydGVzdHJhcy5jc2hscy5sbGRucy5uZXQvYXJ0ZXN0cmFzL2NvbnRyaWIvZnJsaXZlL2ZybGl2ZV85MjUubTN1OAojRVhUSU5GOi0xLExDTiBOZXdzIChGcmVuY2gpCnJ0bXA6Ly9jcDM5NDE0LmxpdmUuZWRnZWZjcy5uZXQvbGl2ZS8gcGxheXBhdGg9bGNuMkA5NzU0IHN3ZlVybD1odHRwOi8vd3d3LmNlbnRyYWx0di5mci9qd3BsYXllci9qd3BsYXllci5mbGFzaC5zd2YgbGl2ZT0xIHBhZ2VVcmw9aHR0cDovL3d3dy5jZW50cmFsdHYuZnIvY2FuYWRhLXRlbGV2aXNpb24vbGNuLW5ld3MgdGltZW91dD0xNQojRVhUSU5GOi0xLEFyZ2VudCAoRnJlbmNoKQpydG1wOi8vY3AzOTQxNC5saXZlLmVkZ2VmY3MubmV0OjQ0My9saXZlIHBsYXlwYXRoPWFyZ2VudEA5NzUxIHN3ZlVybD1odHRwOi8vZnBkb3dubG9hZC5hZG9iZS5jb20vc3Ryb2JlL0ZsYXNoTWVkaWFQbGF5YmFja18xMDEuc3dmL1tbRFlOQU1JQ11dLzEgbGl2ZT0xIHBhZ2VVcmw9aHR0cDovL3RlbGUtZW4tZGlyZWN0LmJsb2dzcG90LmNvbS8yMDE0LzA1L2FyZ2VudC10di1jYW5hZGEtZW4tZGlyZWN0Lmh0bWwgdGltZW91dD0xNQojRVhUSU5GOi0xLENUViBOZXdzIExpdmUgSEQKaHR0cDovL2Ftcy1scDEwLjljOW1lZGlhLmNvbS9obHMtbGl2ZS9saXZlcGtnci9fZGVmaW5zdF8vbGl2ZU5ld3MvTmV3czE4Lm0zdTgKI0VYVElORjotMSxDVFYgTmV3cyBMaXZlIEhECmh0dHA6Ly9hbXMtbHA3LjljOW1lZGlhLmNvbS9obHMtbGl2ZS9saXZlcGtnci9fZGVmaW5zdF8vbGl2ZU5ld3MvTmV3czI4Lm0zdTgKCgpAQEBAQApHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIE5ld3MgLS1bL0NPTE9SXQoKCkBAQEBACkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gS0lEUyAtLVsvQ09MT1JdCgojRVhUSU5GOi0xLERpc25leSBDaGFubmVsCmh0dHA6Ly8xNjcuMTE0LjEwMS4xODg6MTkzNS9mbHU1NTUvX2RlZmluc3RfL2Rpc25leXhkL3BsYXlsaXN0Lm0zdTg/dG9rZW49CgojRVhUSU5GOi0xLE5pY2tlbG9kZW9uCmh0dHA6Ly96ZXJvY2FzdC50di9lbWJlZC5waHA/YT0xNCZpZD0md2lkdGg9NTgwJmhlaWdodD00MDAmYXV0b3N0YXJ0PXRydWUmc3RyZWNoPSAmUkVGJmh0dHA6Ly96ZXJvY2FzdC50di8KI0VYVElORjotMSxOaWNrZWxvZGVvbgpodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02MjAmaGVpZ2h0PTQ3MCZpZD1raWNuaWNrJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL3VzYWNoYW5uZWxzLnR2L25pY2sucGhwCgpAQEBAQApHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIERPQ1VNRU5UQVJJRVMgLS1bL0NPTE9SXQoKQEBAQEAKR0VOUkUsIFtDT0xPUiBncmVlbl0tLSBNdXNpYyAtLVsvQ09MT1JdCgoKQEBAQEAKCkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gT3RoZXIgTGl2ZSBTcG9ydHMgLS1bL0NPTE9SXQoKI0VYVElORjotMSxEaWdpIFNwb3J0IDEKcnRtcDovLzE5NS4xNTQuMTYyLjE1OTo4MC9saXZlcmVwZWF0ZXIgcGxheXBhdGg9MTI4NzQ2IHN3ZlVybD1odHRwOi8vY2RuLmdvb2RjYXN0LmNvL3BsYXllcnMuc3dmIGxpdmU9dHJ1ZSBwYWdlVXJsPWh0dHA6Ly9kZWx0YXR2LnB3LyB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCB0aW1lb3V0PTE1CiNFWFRJTkY6LTEsRElHSSBTUE9SVCAxCnJ0bXA6Ly8xOTUuMTU0LjE2Mi4xNTk6ODAvbGl2ZXJlcGVhdGVyIHBsYXlwYXRoPTEyODc0NiBzd2ZVcmw9aHR0cDovL2Nkbi5nb29kY2FzdC5jby9wbGF5ZXJzLnN3ZiBsaXZlPXRydWUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggZmxhc2h2ZXI9V0lOLzIwMTgsMCwwLDE2MCB0aW1lb3V0PTEzIHN3ZlZmeT0xICBwYWdlVXJsPWh0dHA6Ly9kZWx0YXR2LnB3LwojRVhUSU5GOi0xLERJR0kgU1BPUlQgMgpydG1wOi8vMTk1LjE1NC4xNjIuMTU5OjgwL2xpdmVyZXBlYXRlciBwbGF5cGF0aD0xMjg3NDcgc3dmVXJsPWh0dHA6Ly9jZG4uZ29vZGNhc3QuY28vcGxheWVycy5zd2YgbGl2ZT10cnVlIHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGZsYXNodmVyPVdJTi8yMDE4LDAsMCwxNjAgdGltZW91dD0xMyBzd2ZWZnk9MSAgcGFnZVVybD1odHRwOi8vZGVsdGF0di5wdy8KI0VYVElORjotMSxESUdJIFNQT1JUIDMKcnRtcDovLzE5NS4xNTQuMTYyLjE1OTo4MC9saXZlcmVwZWF0ZXIgcGxheXBhdGg9MTI4NzQ4IHN3ZlVybD1odHRwOi8vY2RuLmdvb2RjYXN0LmNvL3BsYXllcnMuc3dmIGxpdmU9dHJ1ZSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBmbGFzaHZlcj1XSU4vMjAxOCwwLDAsMTYwIHRpbWVvdXQ9MTMgc3dmVmZ5PTEgIHBhZ2VVcmw9aHR0cDovL2RlbHRhdHYucHcvCgojRVhUSU5GOi0xLEZveCBTcG9ydHMgMSAoIER1dGNoICkKaHR0cDovLzM3LjE4Ny4xNzEuMjE5OjgwODAvZm94c3BvcnNkdXRjaDEvaW5kZXgubTN1OAoKQEBAQEAKR0VOUkUsIFtDT0xPUiBncmVlbl0tLSAyNC83IFN0cmVhbXMgLS1bL0NPTE9SXQoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQWR2ZW50dXJlIFRpbWUgSERbL0NPTE9SXSNJTUc6aHR0cHM6Ly9wbWNkZWFkbGluZTIuZmlsZXMud29yZHByZXNzLmNvbS8yMDE1LzAyL2FkdmVudHVyZS10aW1lLXNjcmVlbnNhdmVyXzEucG5nCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvYWR2ZW50dXJlLXRpbWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQWx3YXlzIFN1bm55IGluIFBoaWxhZGVscGhpYSBIRFsvQ09MT1JdI0lNRzpodHRwOi8vd3d3LnVuZGVyY29uc2lkZXJhdGlvbi5jb20vYnJhbmRuZXcvYXJjaGl2ZXMvc3VubnlfcGhpbGFkZWxwaGlhX2xvZ28uZ2lmCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvYWx3YXlzLXN1bm55LWluLXBoaWxhZGVscGhpYSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1BbWVyaWNhbiBEYWQgSERbL0NPTE9SXSNJTUc6aHR0cDovL3d3dy52aWV3bW92aWVzLnR2L3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE1LzA1L0FtZXJpY2FuLURhZC0yLmpwZwpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2FtZXJpY2FuLWRhZCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1BcmNoZXIgSERbL0NPTE9SXSNJTUc6aHR0cHM6Ly93d3cubW9udGFnZWNhYmxldHYuY29tL3NpdGVzL2RlZmF1bHQvZmlsZXMvOTQ0OS1hcmNoZXItYXJjaGVyLmpwZwpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2FyY2hlciAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1BcXVhIFRlZW4gSHVuZ2VyIEZvcmNlIEhEWy9DT0xPUl0jSU1HOmh0dHA6Ly92aWduZXR0ZTIud2lraWEubm9jb29raWUubmV0L2F0aGZ3aWtpL2ltYWdlcy9kL2QzL0F0aGYtbG9nby5qcGcKaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9hcXVhLXRlZW4taHVuZ2VyLWZvcmNlICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJldHRlciBDYWxsIFNhdWwgSERbL0NPTE9SXSNJTUc6aHR0cHM6Ly9jb250ZW50LnBsYXlsaXN0cy5uZXQvaW1hZ2VzL3BsYXlsaXN0cy9pbWFnZS9sYXJnZS8yMzIyNzYuanBnCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvYmV0dGVyLWNhbGwtc2F1bCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Cb2JzIEJ1cmdlcnMgSERbL0NPTE9SXSNJTUc6aHR0cDovL2kuY2RuLnR1cm5lci5jb20vYWR1bHRzd2ltL2JpZy9pbWcvMjAxNC8wNS8yMS9Cb2JzQnVyZ2Vycy5wbmcKaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9ib2JzLWJ1cmdlcnMgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQnJlYWtpbmcgQmFkIEhEWy9DT0xPUl0jSU1HOmh0dHA6Ly9mYzA5LmRldmlhbnRhcnQubmV0L2ZzNzEvZi8yMDEzLzI3Mi83L2YvZ29vZF9ieWVfYnJlYWtpbmdfYmFkX2J5X2hlcmV0aWN0ZW1wbGFyLWQ2b2l6aXYuanBnCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvYnJlYWtpbmctYmFkICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJyaWNrbGViZXJyeSBIRFsvQ09MT1JdI0lNRzpodHRwOi8vY2RuLnR2d2ViLmNvbS9pbWcudGVhc2Vycy9UVnJtQ1BqQWRIWUF2d18xX2EuanBnCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvYnJpY2tsZWJlcnJ5ICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUdyZWVuZGFsZSBDb2xsZWdlICggQ29tbXVuaXR5ICkgSERbL0NPTE9SXSNJTUc6aHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvZW4vMC8wOS9Db21tdW5pdHlfdGl0bGUuanBnCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZ3JlZW5kYWxlLWNvbGxlZ2UgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRmFtaWx5IEd1eSBIRFsvQ09MT1JdI0lNRzpodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9lbi90aHVtYi9hL2FhL0ZhbWlseV9HdXlfTG9nby5zdmcvMTI4MHB4LUZhbWlseV9HdXlfTG9nby5zdmcucG5nCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZmFtaWx5LWd1eSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1GdXR1cmFtYSBIRFsvQ09MT1JdI0lNRzpodHRwOi8vd3d3LmJ1Y2tib2thaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTIvMDcvRnV0dXJhbWEtbG9nby13aXRoLWNoYXJhY3RlcnMucG5nCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZnV0dXJhbWEgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dR2FtZSBPZiBUaHJvbmVzIEhEWy9DT0xPUl0jSU1HOmh0dHA6Ly9tZWRpYS56ZW5mcy5jb20vZW4tVVMvdmlkZW8vdmlkZW8ucGQydXBsb2FkLmNvbS92aWRlby55YWhvb2ZpbmFuY2UuY29tQGY5ZmIwYzE0LTE1N2YtMzQxMy1iOTA1LTUxNGFlYTI4Nzg1OV9GVUxMLmpwZwpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2dhbWUtb2YtdGhyb25lcyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1IZXJvZXMgSERbL0NPTE9SXSNJTUc6aHR0cDovL3RoZWhvdHRlc3R3YWxscGFwZXJzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxNC8wNC9oZXJvcy1ncm91cC13YWxscGFwZXJzLWFuZC1waWN0dXJlcy0xLWl0ZW1zLXBhZ2UtMS1vZi0xLTEzOTgwNy02OTB4NTE3LmpwZwpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2hlcm9lcyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Ib3cgSSBNZXQgWW91ciBNb3RoZXIgSERbL0NPTE9SXSNJTUc6aHR0cDovL3Bhcmt0aGF0Y2FyLm5ldC93cC1jb250ZW50L3VwbG9hZHMvMjAxMy8wMi9oaW15bS5qcGVnCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvaGlteW0gJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dSG91c2UgTUQgSERbL0NPTE9SXSNJTUc6aHR0cHM6Ly93d3cueGhkbW92aWVzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxNS8wNC9Ib3VzZS1NLkQuLmpwZwpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2hvdXNlLW1kICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUhvdXNlIE9mIENhcmRzIEhEWy9DT0xPUl0jSU1HOmh0dHA6Ly93d3cucHJlc3Nlc2NoYXVkZXIuZGUvd3AtY29udGVudC91cGxvYWRzLzIwMTMvMTEvaG91c2Utb2YtY2FyZHMtcG9zdGVyLmpwZwpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2hvdXNlLW9mLWNhcmRzICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUtpbmcgT2YgVGhlIEhpbGwgSERbL0NPTE9SXSNJTUc6aHR0cDovL3N0YXRpYy5jb21pY3ZpbmUuY29tL3VwbG9hZHMvb3JpZ2luYWwvMC80MC82MDI4Mzgta2V5X2FydF9raW5nX29mX3RoZV9oaWxsLmpwZwpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2tpbmctb2YtdGhlLWhpbGwgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTG9zdCBIRFsvQ09MT1JdI0lNRzpodHRwOi8vdmlnbmV0dGUyLndpa2lhLm5vY29va2llLm5ldC9sb3N0cGVkaWEvaW1hZ2VzLzEvMTYvTG9zdC1zZWFzb24xLmpwZwpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2xvc3QgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTWFkIE1lbiBIRFsvQ09MT1JdI0lNRzpodHRwOi8vdW50YXBwZWRjaXRpZXMuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE1LzAzL21hZC1tZW4tMTAyNHg3NjguanBnCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvbWFkLW1lbiAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1NYW4gVnMgV2lsZCBIRFsvQ09MT1JdI0lNRzpodHRwOi8vZWN4LmltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxVjhpRUxnYVRMLl9TWDk0MF8uanBnCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvbWFuLXZzLXdpbGQtZW4gJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dUG9rZXIgQ2hhbm5lbCBIRFsvQ09MT1JdI0lNRzpodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9mci8wLzA0L1Bva2VyX0NoYW5uZWxfTG9nby5wbmcKaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9wb2tlci1zdHJlYW0gJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dUmljayBBbmQgTW9ydHkgSERbL0NPTE9SXSNJTUc6aHR0cHM6Ly9pLmtpbmphLWltZy5jb20vZ2F3a2VyLW1lZGlhL2ltYWdlL3VwbG9hZC9rdW90ZjlhdjFtZXF5czkzY3FlZi5qcGcKaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9yaWNrLWFuZC1tb3J0eSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1TY3J1YnMgTUQgSERbL0NPTE9SXSNJTUc6aHR0cDovL3ZpZ25ldHRlMy53aWtpYS5ub2Nvb2tpZS5uZXQvc2NydWJzL2ltYWdlcy9iL2I0L1NlYXNvbl81X2lUdW5lc19BcnR3b3JrLmpwZwpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3NjcnVicyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1TbWFsbHZpbGxlIEhEWy9DT0xPUl0jSU1HOmh0dHA6Ly92aWduZXR0ZTEud2lraWEubm9jb29raWUubmV0L3NtYWxsdmlsbGUvaW1hZ2VzL2IvYmMvU21hbGx2aWxsZS1zbWFsbHZpbGxlLTMwMzY1MTEtMTI4MC0xMDI0LmpwZwpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3NtYWxsdmlsbGUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dU29ucyBPZiBBbmFyY2h5IEhEWy9DT0xPUl0jSU1HOmh0dHA6Ly93d3cubmlnaHRtYXJlc2ZlYXJmYWN0b3J5LmNvbS9zaXRlcy9kZWZhdWx0L2ZpbGVzL3doaWNoLXNvbnMtb2YtYW5hcmNoeS1jaGFyYWN0ZXItYXJlLXlvdS5qcGcKaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9zb25zLW9mLWFuYXJjaHkgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dU291dGggUGFyayBIRFsvQ09MT1JdI0lNRzpodHRwOi8vc291dGhwYXJrLnJlc3play5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTEvMTEvU291dGhfUGFya19ieV9kYW5pZWxsZV8xNTEtMTAyNHg5ODAuanBnCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvc291dGgtcGFyay1oZCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1TcGFydGFjdXMgSERbL0NPTE9SXSNJTUc6aHR0cDovL2ZyZWV0aG91Z2h0YmxvZ3MuY29tL2NhcnJpZXIvZmlsZXMvMjAxNS8wNy9zcGFydGFjdXN2ZW5nZWFuY2Vzb3VuZHRyYWNrLmpwZwpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3NwYXJ0YWN1cyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1TdGFyZ2F0ZSBIRFsvQ09MT1JdI0lNRzpodHRwOi8vbWVkaWEub3ZlLmN5YmVybWFnZS5zZS8yMDEwLzA4L1N0YXJnYXRlX1NHMV9hOC5qcGcKaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9zdGFyZ2F0ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1TdXBlcm5hdHVyYWwgSERbL0NPTE9SXSNJTUc6aHR0cDovL2ltYWdlcy52Y3Bvc3QuY29tL2RhdGEvaW1hZ2VzL2Z1bGwvMTg3NTUvc3VwZXJuYXR1cmFsLmpwZwpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3N1cGVybmF0dXJhbCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1UaGUgMTAwIEhEWy9DT0xPUl0jSU1HOmh0dHA6Ly9tYWpvcnNwb2lsZXJzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxNS8wNy9USEUtMTAwLTEucG5nCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdGhlLTEwMCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1UaGUgQmlnIEJhbmcgVGhlb3J5IEhEWy9DT0xPUl0jSU1HOmh0dHA6Ly9tb3ZpZXMtb25saW5lLmluZm8vd3AtY29udGVudC91cGxvYWRzLzIwMTUvMDQvdGhlLWJpZy1iYW5nLXRoZW9yeS01MGI4OTM5MTdiNDQ4LTEucG5nCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdGhlLWJpZy1iYW5nLXRoZW9yeSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1UaGUgQ2xldmVsYW5kIFNob3cgSERbL0NPTE9SXSNJTUc6aHR0cDovL3ZpZ25ldHRlMS53aWtpYS5ub2Nvb2tpZS5uZXQvY2xldmVsYW5kL2ltYWdlcy8zLzNjL0NsZXZlbGFuZFBpbG90Ni5qcGcKaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS90aGUtY2xldmVsYW5kLXNob3cgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVGhlIE9mZmljZSBIRFsvQ09MT1JdI0lNRzpodHRwOi8vaW1hZ2VzLmJ1ZGR5dHYuY29tL3VzZXJxdWl6aW1hZ2VzLzg0ODQ1NjBhLWIyNjgtNDI5Yi05ZTIzLWJlY2ExMjIxMTM1MHVudGl0bGVkLmpwZwpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3RoZS1vZmZpY2UgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVGhlIFNpbXBzb25zIEhEWy9DT0xPUl0jSU1HOmh0dHA6Ly93d3cuYW5pbWF0aW9ueHByZXNzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxNC8wNy9TaW1wc29uc19pbmRleC5qcGcKaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9zaW1wc29ucy1oZCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1UaGUgV2Fsa2luZyBEZWFkIEhEWy9DT0xPUl0jSU1HOmh0dHA6Ly9jZG4ucGxheWJ1enouY29tL2Nkbi9kMjkyZjNkNC1kNmEwLTQ5NTEtYjc0Zi1kNDAzNTdiNjAzZDIvODU5MmY5ODMtN2I3Ny00NTM3LThhMGQtMDI0YzEwNzBiODE0LmpwZwpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3RoZS13YWxraW5nLWRlYWQgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVHJpcCBUYW5rIEhEWy9DT0xPUl0jSU1HOmh0dHA6Ly93d3cuYXduLmNvbS9zaXRlcy9kZWZhdWx0L2ZpbGVzL3N0eWxlcy9pbmxpbmUvcHVibGljL2ltYWdlL2ZlYXR1cmVkLzEwMTczODctY29tZWR5LWNlbnRyYWwtcy10cmlwLXRhbmstc2Vla2luZy1zdWJtaXNzaW9ucy5qcGcKaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS90cmlwdGFuayAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1XZWVkcyBIRFsvQ09MT1JdI0lNRzpodHRwOi8vY2RuLndlZ290dGhpc2NvdmVyZWQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy91cmwxOC5qcGcKaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS93ZWVkcyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Xb3JrYWhvbGljcyBIRFsvQ09MT1JdI0lNRzpodHRwczovL3RoZXBvc3RjdWx0dXJlLmZpbGVzLndvcmRwcmVzcy5jb20vMjAxMy8wMS93b3JrYWhvbGljcy0xMy5qcGcKaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS93b3JrYWhvbGljcyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCgojRVhUSU5GOi0xLDMwIFJvY2sjSU1HOmh0dHA6Ly9zdGF0aWMxLnNxdWFyZXNwYWNlLmNvbS9zdGF0aWMvNTA3ZGJhNDNjNGFhYmNmZDIyMTZhNDQ3L3QvNTEzNGJkNjZlNGIwM2Y4YTI2MjE5ZWNlLzEzNjI0MTA4NTU2MTMvMzByb2NrLmpwZwpodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD0zMHJvY2smYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vaGRjYXN0Lm1lLwoKI0VYVElORjotMSxBbGllbnMgJiBVZm8ncyNJTUc6aHR0cDovL2ltYWdlczQuZmFucG9wLmNvbS9pbWFnZS9waG90b3MvMTg3MDAwMDAvQWxpZW5zLXVmby1hbmQtYWxpZW5zLTE4NzMxMjE4LTUxMi0zODQuanBnCmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2FsaWVuc2FuZHVmb3M/YWxpZW5zYW5kdWZvcyAmUkVGJmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2FsaWVuc2FuZHVmb3MKCiNFWFRJTkY6LTEsQWR2ZW50dXJlIFRpbWUjSU1HOmh0dHBzOi8vcG1jZGVhZGxpbmUyLmZpbGVzLndvcmRwcmVzcy5jb20vMjAxNS8wMi9hZHZlbnR1cmUtdGltZS1zY3JlZW5zYXZlcl8xLnBuZwpodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX2F0P2xtc2hvd3NfYXQgJlJFRiZodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX2F0CgojRVhUSU5GOi0xLEFycmVzdGVkIERldmVsb3BtZW50ICNJTUc6aHR0cDovL3NjcmVlbnJhbnQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy9hcnJlc3RlZC1kZXZlbG9wbWVudDEuanBnCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWFycmVzdGVkJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KCiNFWFRJTkY6LTEsQmVhc3QgV2FycyAjSU1HOmh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2VuL2MvYzUvQmVhc3RfV2Fyc190aXRsZV9sb2dvLmpwZwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzIwMzkmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6LTEsR2FtZSBPZiBUaHJvbmVzICNJTUc6aHR0cDovL21lZGlhLnplbmZzLmNvbS9lbi1VUy92aWRlby92aWRlby5wZDJ1cGxvYWQuY29tL3ZpZGVvLnlhaG9vZmluYW5jZS5jb21AZjlmYjBjMTQtMTU3Zi0zNDEzLWI5MDUtNTE0YWVhMjg3ODU5X0ZVTEwuanBnCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWdvdGliJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KCiNFWFRJTkY6LTEsQ2h1Y2sgI0lNRzpodHRwOi8vdGhlbXVzaWNuaW5qYS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTAvMDEvY2h1Y2stc2Vhc29uLTMtc291bmR0cmFjay1tdXNpYzIuanBnCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWNodWNrJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KCiNFWFRJTkY6LTEsQ3JpbWUgQ2VudHJhbCAjSU1HOmh0dHA6Ly93d3cuc2hvd3Njb3JuZXJzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxNS8wMy85MjgxMTUwMDA5LWNyaW1lX2hhbmRjdWZmc19wb2xpY2VfbGlnaHRzX2pwZ180NzV4MzEwX3E4NS5qcGcKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vY3JpbWVjZW50cmFsP2xtc2hvd3NfbmdiYmMgJlJFRiZodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX25nYmJjCgojRVhUSU5GOi0xLERleHRlciAjSU1HOmh0dHA6Ly9jZG4uaWVudHJ5LmNvbS9zaXRlcy93ZWJwcm9uZXdzL3BpY3R1cmVzL2RleHRlcl8xMzEwMjg0XzYxNi5qcGcKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9ZGV4dGVyJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KCiNFWFRJTkY6LTEsRGlzY292ZXJ5IEhvdXNlCmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2Rpc2NvdmVyeWhvdXNlP2Rpc2NvdmVyeWhvdXNlICZSRUYmaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vZGlzY292ZXJ5aG91c2UKCiNFWFRJTkY6LTEsRHJhZ29uQmFsbCBHVCAjSU1HOmh0dHA6Ly9pNDEudGlueXBpYy5jb20vMTUya3B4di5qcGcKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTUzMTA1JmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOi0xLERyIFdobyAjSU1HOmh0dHA6Ly93d3cuYmJjYW1lcmljYS5jb20vZG9jdG9yLXdoby9maWxlcy8yMDEzLzEwL0RvY3Rvcndob181MHRoLWFubml2ZXJzYXJ5X3RodW1ibmFpbF8wMi5qcGcKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9ZHJ3aG8mYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vaGRjYXN0Lm1lLwoKI0VYVElORjotMSxGYW1pbHkgR3V5ICNJTUc6aHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvZW4vdGh1bWIvYS9hYS9GYW1pbHlfR3V5X0xvZ28uc3ZnLzEyODBweC1GYW1pbHlfR3V5X0xvZ28uc3ZnLnBuZwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NTUxODImYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6LTEsRnJpZW5kcyAjSU1HOmh0dHA6Ly9lYi1ibG9nLWJsb2d1ay5zMy5hbWF6b25hd3MuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy9mcmllbmRzLXR2LXNob3cuanBnCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWZyaWVuZHMmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vaGRjYXN0Lm1lLwoKI0VYVElORjotMSxGcmluZ2UgI0lNRzpodHRwOi8vdGhhdHMtbm9ybWFsLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxNS8wNi9mcmluZ2VfLmpwZwpodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1mcmluZ2UmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vaGRjYXN0Lm1lLwoKI0VYVElORjotMSxGbGludHN0b25lcyAjSU1HOmh0dHA6Ly9pbWdjLmFsbHBvc3RlcnNpbWFnZXMuY29tL2ltYWdlcy9QLTQ4OC00ODgtOTAvNjQvNjQyOC82SlA5MTAwWi9wb3N0ZXJzL2ZsaW50c3RvbmVzLWZhbWlseS1yZXRyby5qcGcKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9ZmxpbnRzdG9uZXMmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vaGRjYXN0Lm1lLwoKI0VYVElORjotMSxIYXVudGVkIEhvdXNlICNJTUc6aHR0cDovL215dGhzLmUyYm4ub3JnL2xpYnJhcnkvMTM3NTIwMDY0Mi9qYW1pZXMtaGF1bnRlZC1ob3VzZTEzNzUyMDA2MjUuanBnCmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2hhdW50ZWRob3VzZT9oYXVudGVkaG91c2UgJlJFRiZodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9oYXVudGVkaG91c2UKCiNFWFRJTkY6LTEsSG9tZSBJbXByb3ZlbWVudHMgI0lNRzpodHRwOi8vd3d3LmZ1cm5pdHVyZXRpcHMuY28udWsvd3AtY29udGVudC91cGxvYWRzLzIwMTEvMDgvaG9tZS1pbXByb3ZlbWVudHMuanBnCmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2xtc2hvd3NfaGk/bG1zaG93c19oaSAmUkVGJmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2xtc2hvd3NfaGkKCiNFWFRJTkY6LTEsSG91c2UgI0lNRzpodHRwczovL3d3dy54aGRtb3ZpZXMuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE1LzA0L0hvdXNlLU0uRC4uanBnCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWhvdXNlJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KCiNFWFRJTkY6LTEsSGFyZGNvcmUgUGF3bi9QYXduIFN0YXJzL1N0b3JhZ2UgV2Fycy9GYXN0IE4gTG91ZApodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX2hwcz9sbXNob3dzX2hwcyAmUkVGJmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2xtc2hvd3NfaHBzCgojRVhUSU5GOi0xLEltcHJhY3RpY2FsIEpva2VycyAjSU1HOmh0dHA6Ly9zY3JlZW5yYW50LmNvbS93cC1jb250ZW50L3VwbG9hZHMvaW1wcmFjdGljYWwtam9rZXJzMS5qcGcKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19paj9sbXNob3dzX2lqICZSRUYmaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19pagoKI0VYVElORjotMSxKYWNraWUgQ2hhbiBNb3ZpZXMgKCAxOTkxLTIwMDggKSAjSU1HOmh0dHA6Ly9zdGF0aWMudHZ0cm9wZXMub3JnL3Btd2lraS9wdWIvaW1hZ2VzL2phY2tpZV9jaGFuX3B1bmNoLmpwZwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9MzcwMDImYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6LTEsTGF3ICYgT3JkZXIgI0lNRzpodHRwOi8vd3d3LnRlY2hub2xvZ3l0ZWxsLmNvbS9lbnRlcnRhaW5tZW50L2ZpbGVzLzIwMTUvMDIvbGF3LmpwZwpodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9nZXR5b3VyZG9jc29mZj9nZXR5b3VyZG9jc29mZiAmUkVGJmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2dldHlvdXJkb2Nzb2ZmCgojRVhUSU5GOi0xLExvb25leSBUb29ucyAjSU1HOmh0dHA6Ly93d3cuZGFuLWRhcmUub3JnL0ZyZWVGdW4vSW1hZ2VzL0NhcnRvb25zTW92aWVzVFYvTG9vbmV5VHVuZXNXYWxscGFwZXI4MDAuanBnCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWxvb25leSZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdCAmUkVGJmh0dHA6Ly9oZGNhc3QubWUvCgojRVhUSU5GOi0xLE1hbiBXb21hbiBXaWxkLyBTdXJ2aXZvcm1hbiAjSU1HOmh0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2VuLzMvMzQvTWFuLF9Xb21hbixfV2lsZC5qcGcKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19td3M/bG1zaG93c19td3MgJlJFRiZodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX213cwoKI0VYVElORjotMSxNYXJyaWVkIFdpdGggQ2hpbGRyZW4gI0lNRzpodHRwOi8vd3d3LmJvbHVtcmVoYmVyaS5jb20vaW1hZ2VzL2xvZ28vTWFycmllZC13aXRoLUNoaWxkcmVuLmpwZwpodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX213Yz9sbXNob3dzX213YyAmUkVGJmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2xtc2hvd3NfbXdjCgojRVhUSU5GOi0xLE5hdGlvbmFsIEdlb2dyYXBoaWMvIEJCQyBOYXR1cmUgI0lNRzpodHRwOi8vbmV3cy5iYmNpbWcuY28udWsvbWVkaWEvaW1hZ2VzLzY0ODgwMDAwL2pwZy9fNjQ4ODA3ODBfYWZyaWNhbl9lbGVwaGFudF8xLmpwZwpodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX25nYmJjP2xtc2hvd3NfbmdiYmMgJlJFRiZodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX25nYmJjCgojRVhUSU5GOi0xLFJlZ3VsYXIgU2hvdyAjSU1HOmh0dHA6Ly8yLmJwLmJsb2dzcG90LmNvbS8tSGZtQW1rUUNzdFUvVkxqMUszR0V4WkkvQUFBQUFBQUFCUXcvUmJUR3pXVXFPNWsvczE2MDAvcmVndWxhcl9zaG93X2NhcmFjdGVycy5wbmcKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19ycz9sbXNob3dzX3JzICZSRUYmaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19ycwoKI0VYVElORjotMSxTZWluZmllbGQgI0lNRzpodHRwczovL3RjdGVjaGNydW5jaDIwMTEuZmlsZXMud29yZHByZXNzLmNvbS8yMDE1LzAzL3NlaW5mZWxkLmpwZwpodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1zZWluZmllbGQmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vaGRjYXN0Lm1lLwoKI0VYVElORjotMSxTY3J1YnMgI0lNRzpodHRwOi8vdmlnbmV0dGUzLndpa2lhLm5vY29va2llLm5ldC9zY3J1YnMvaW1hZ2VzL2IvYjQvU2Vhc29uXzVfaVR1bmVzX0FydHdvcmsuanBnL3JldmlzaW9uL2xhdGVzdD9jYj0yMDA5MDMyOTIxMDU0MQpodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1zY3J1YnMmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vaGRjYXN0Lm1lLwoKI0VYVElORjotMSxTdGFyZ2F0ZSBTRzEgI0lNRzpodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9lbi85LzlhL1N0YXJnYXRlX1NHLTFfY2FzdF9taW51c19Kb25hc19RdWlubi5qcGcKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vc2cxZ2F0ZT9zZzFnYXRlICZSRUYmaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vc2cxZ2F0ZQoKI0VYVElORjotMSxTdWl0cyAjSU1HOmh0dHBzOi8vd2hpc3BlcmluZ3ZpcGVyLmZpbGVzLndvcmRwcmVzcy5jb20vMjAxMy8wNy8xMzM5MDcyODE3MTU5X3N1aXRzX3MyX3ZvZF9rZXlhcnRfMngxX292ZXJsYXlfNTkwXzI5NS5qcGVnCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPXN1aXRzJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KCiNFWFRJTkY6LTEsU291dGggUGFyayAjSU1HOmh0dHA6Ly9zb3V0aHBhcmsucmVzemVrLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxMS8xMS9Tb3V0aF9QYXJrX2J5X2RhbmllbGxlXzE1MS0xMDI0eDk4MC5qcGcKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9c291dGhwYXJrJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KCiNFWFRJTkY6LTEsVGhlIEtpbmcgT2YgUXVlZW5zICNJTUc6aHR0cDovL2Nic2N3NDQuZmlsZXMud29yZHByZXNzLmNvbS8yMDEyLzAxL3RoZV9raW5nX29mX3F1ZWVucy5qcGcKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19rb3E/bG1zaG93c19rb3EgJlJFRiZodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX2tvcQoKI0VYVElORjotMSxUaGUgS2luZyBPZiBRdWVlbnMgI0lNRzpodHRwOi8vY2JzY3c0NC5maWxlcy53b3JkcHJlc3MuY29tLzIwMTIvMDEvdGhlX2tpbmdfb2ZfcXVlZW5zLmpwZwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9MzgyMTMmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6LTEsVGhlIFNpbXBzb25zICNJTUc6aHR0cDovL3BtY2RlYWRsaW5lMi5maWxlcy53b3JkcHJlc3MuY29tLzIwMTAvMTEva2V5X2FydF90aGVfc2ltcHNvbnMuanBnCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPXNpbXBzb25zJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KCiNFWFRJTkY6LTEsVGhlIEJpZyBCYW5nIFRoZW9yeSAjSU1HOmh0dHA6Ly9tb3ZpZXMtb25saW5lLmluZm8vd3AtY29udGVudC91cGxvYWRzLzIwMTUvMDQvdGhlLWJpZy1iYW5nLXRoZW9yeS01MGI4OTM5MTdiNDQ4LTEucG5nCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWJpZ2JhbmcmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vaGRjYXN0Lm1lLwoKI0VYVElORjotMSxUaGUgQnVncyBCdW5ueSBTaG93ICNJTUc6aHR0cHM6Ly9mYW5hcnQudHYvYXBpL2Rvd25sb2FkLnBocD90eXBlPWRvd25sb2FkJmltYWdlPTEzNTkzJnNlY3Rpb249MQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzIwNDAmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6LTEsVG9tICYgSmVycnkgI0lNRzpodHRwOi8vaS55dGltZy5jb20vdmkvZ1NLNWN1cndWX28vbWF4cmVzZGVmYXVsdC5qcGcKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcyMDM4JmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOi0xLFRvbSAmIEplcnJ5ICggbWlnaHQgY2hhbmdlIHRvIG90aGVyIGNhcnRvb25zKSNJTUc6aHR0cDovL2kueXRpbWcuY29tL3ZpL2dTSzVjdXJ3Vl9vL21heHJlc2RlZmF1bHQuanBnCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPXRvbWplcnJ5JmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KCiNFWFRJTkY6LTEsU3VwcmFub3MgI0lNRzpodHRwOi8vd3d3LmJtaWdhbWluZy5jb20vSW1hZ2VzL3RoZXNvcHJhbm9zdHZwaWMxLmpwZwpodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1zb3ByYW5vcyZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdCAmUkVGJmh0dHA6Ly9oZGNhc3QubWUvCgoKQEBAQEAKCkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gRnJlbmNoIExpdmUgVHYgLS1bL0NPTE9SXQoKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dNiBUZXIgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LzZ0ZXIgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1BcnRlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9hcnRlICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQmVpbiBGcmFuY2UgMSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvYmVpbi1mcmFuY2UtMSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJlaW4gRnJhbmNlIDIgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2JlaW4tZnJhbmNlLTIgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CRk0gVHYgTmV3cyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvYmZtLXR2ICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQ2FtZXJhIENhZmUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2NhbWVyYS1jYWZlICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQ2FuYWwrIFNwZWNpYWwgSW52ZXN0aWdhdGlvbiBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvc3BlY2lhbC1pbnZlc3RpZ2F0aW9uICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRDE3IExpdmUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2QxNyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUQ4IExpdmUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2Q4LWxpdmUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1EaXZlcnMgRG9jcyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZGl2ZXJzLWRvY3MgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1EcmFnb25iYWxsLVogSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2RyYWdvbmJhbGwtZGJ6ICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRGlzY292ZXJ5IENoYW5uZWwgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2Rpc2NvdmVyeSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUV1cm9OZXdzIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9ldXJvbmV3cyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUV1cm9TcG9ydCBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZXVyb3Nwb3J0ICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRXVyb1Nwb3J0IDIgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2V1cm9zcG9ydC0yICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRmluYW5jZSBFdCBNb25kaWFsaXNtZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZmluYW5jZS1ldC1tb25kaWFsaXNtZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUZyYW5jZSAyNCBMaXZlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9mcmFuY2UtMjQgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1GcmFuY2UgMCBMaXZlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9mcmFuY2UtbyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUZyYW5jZSAyIExpdmUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2ZyYW5jZS0yLWRpcmVjdCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUZyYW5jZSAyIExpdmUgSEQgKEFMVClbL0NPTE9SXQpodHRwOi8vc3RyZWFtLnN0cmVhbWluZy1odWIuY29tOjgwODAvc2ltdWxjYXN0L0ZyYW5jZV8yL2hsc192MS9GcmFuY2VfMi1hdWRpb19BQUNMX2ZyYV83MDAwMF8zMTU9NzAwMDAtdmlkZW89MTE4MDAwLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTUuMTUzLjEyNy4yNTUKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRnJhbmNlIDMgTGl2ZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZnJhbmNlLTMtbGl2ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUZyYW5jZSAzIExpdmUgSEQgKEFMVClbL0NPTE9SXQpodHRwOi8vc3RyZWFtLnN0cmVhbWluZy1odWIuY29tOjgwODAvc2ltdWxjYXN0L0ZyYW5jZV8zL2hsc192MS9GcmFuY2VfMy1hdWRpb19BQUNMX2ZyYV83MDAwMF8zMjU9NzAwMDAtdmlkZW89MTE4MDAwLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTUuMTUzLjEyNy4yNTUKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRnJhbmNlIDQgTGl2ZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZnJhbmNlLTQgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1GcmFuY2UgNSBMaXZlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9mcmFuY2UtNS1saXZlICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dSGlzdG9pcmUgTGl2ZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvaGlzdG9pcmUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1ISEggSU5Uw4lHUkFMRSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvaC1pbnRlZ3JhbGUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1JIFTDiUzDiSBOZXdzIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9pLXRlbGUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1KIGlyYWkgZG9ybWlyIGNoZXogdm91cyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvai1pcmFpLWRvcm1pci1jaGV6LXZvdXMgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1LYWFtZWxvdHQgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2thYW1lbG90dCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUwnw6lxdWlwZSAyMSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvbC1lcXVpcGUtMjEgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1MJyBVbml2ZXJzIGV0IHNlcyBNeXN0w6hyZXMgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2wtdW5pdmVycy1ldC1zZXMtbXlzdGVyZXMgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1MQ1AgSERbL0NPTE9SXQpodHRwOi8vc3RyZWFtLTA5LnZ0eS5kYWlseW1vdGlvbi5jb20vMTUvZG0vMS94amkzcXkvbGl2ZS5pc21sL2xpdmUuZjRtCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU02IExpdmUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L202LWxpdmUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1NNiBNdXNpYyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvbTYtbXVzaWMgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1NYW4gVnMgV2lsZCBGUiBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvbWFuLXZzLXdpbGQgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1OYXR1cmUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L25hdHVyZS1oZCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU5hdGlvbmFsIGdlb2dyYXBoaWMgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L25hdGlvbmFsLWdlb2dyYXBoaWMgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1OYXQgZ2VvIFdpbGQgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L25hdC1nZW8td2lsZCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU5SSjEyIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9ucmotMTIgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1QbGFuZXRlICsgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3BsYW5ldGUtcGx1cyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVBsYW5ldGUgKyBUaGFsYXNzYSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvcGxhbmV0ZS10aGFsYXNzYSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVJNQyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvcm1jICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dUlRMOSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvcnRsOSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVNvZGEgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3NvZGEgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Tb3V0aCBQYXJrIEZSIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9zb3V0aC1wYXJrLWZyICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dU3RhcmdhdGUgU2cxIFNnYSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvc3RhcmdhdGUtc2cxLXNnYSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVRGMSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdGYxICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVGhhdCA3MCdzIFNob3cgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LzcwLXNob3cgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1UTUMgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3RtYyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVRWNSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdHY1LWhkICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVHYgUmVwbGF5IEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS90di1yZXBsYXkgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1UdiBTY2llbnNlcyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdHYtc2NpZW5jZXMgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1VTkRFUkdST09WIENIQU5ORUwgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3VuZGVyZ3Jvb3YtbWlrZWRhc2lsayAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVVuIGdhcnMgVW5lIGZpbGxlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS91bi1nYXJzLXVuZS1maWxsZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVc5IExpdmUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3c5LWxpdmUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwoKI0VYVElORjotMSxDYW5hbCsgQ2luZW1hCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MDczMSZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwojRVhUSU5GOi0xLENhbmFsKyBTcG9ydHMKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcwNDY3JmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCiNFWFRJTkY6LTEsQ2FuYWwrIEZhbWlseQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzE4MzEmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KI0VYVElORjotMSxEaXNjb3ZlcnkgQ2hhbm5lbCBGcmFuY2UKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcwMjEyJmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCiNFWFRJTkY6LTEsU3lGeQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzA3MzAmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCkBAQEBACkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gU3BhbmlzaCBMaXZlIFR2IC0tWy9DT0xPUl0KI0VYVElORjotMSxDaW5lCmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2xtc2hvd3NfaGk/Y2luZW11bmRvICZSRUYmaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19oaQojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1MYSBTZXh0YVsvQ09MT1JdCmh0dHA6Ly9hM2xpdmUtbGguYWthbWFpaGQubmV0L2kvbGFzZXh0YV8xQDM1MjcyL21hc3Rlci5tM3U4CiNFWFRJTkY6LTEsdGVzdDEKaHR0cDovL3d3dy5oZGNhc3Qub3JnL2VtYmVkbGl2ZTMucGhwP3U9c3NreXMxJnZ3PTg1NCZ2aD00ODAgJlJFRiZodHRwOi8vc3RyZWFtaGQuZXUKQEBAQEA=