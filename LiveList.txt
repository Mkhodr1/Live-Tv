77u/R0VOUkUsIFtDT0xPUiB5ZWxsb3ddKioqKioqKioqIFRISVMgTElTVCBJUyBTVE9MRU4gRlJPTSBWRFVCVDI1ICoqKioqKioqWy9DT0xPUl0KQEBAQEAKR0VOUkUsIFtDT0xPUiBncmVlbl0tLSBMaXZlIFNwb3J0cyAtLVsvQ09MT1JdCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVNvdXRoYW1wdG9uIC0gRXZlcnRvblsvQ09MT1JdI0lNRzpodHRwOi8vd3d3LnNwb3J0c2Jvb2tzYm9iZXQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE1LzA4L1NvdXRoYW1wdG9uLXZzLUV2ZXJ0b24ucG5nCmh0dHA6Ly90dmVuYmNzbi1pLkFrYW1haWhkLm5ldC9obHMvbGl2ZS8yMTgyMzUvbmJjc254LzQyOTZrL3Byb2cubTN1OHxYLUZvcndhcmRlZC1Gb3I9NjYuMTcxLjIyOC4xMDIKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dU291dGhhbXB0b24gLSBFdmVydG9uWy9DT0xPUl0jSU1HOmh0dHA6Ly93d3cuc3BvcnRzYm9va3Nib2JldC5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTUvMDgvU291dGhhbXB0b24tdnMtRXZlcnRvbi5wbmcKaHR0cDovL3R2ZW5iY3NuLWkuQWthbWFpaGQubmV0L2hscy9saXZlLzIxODIzNS9uYmNzbngvMjU5NmsvcHJvZy5tM3U4fFgtRm9yd2FyZGVkLUZvcj02Ni4xNzEuMjI4LjEwMgojRVhUSU5GOi0xLFNvdXRoYW1wdG9uIC0gRXZlcnRvbiNJTUc6aHR0cDovL3d3dy5zcG9ydHNib29rc2JvYmV0LmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxNS8wOC9Tb3V0aGFtcHRvbi12cy1FdmVydG9uLnBuZwpodHRwOi8vdHZlbmJjc24taS5Ba2FtYWloZC5uZXQvaGxzL2xpdmUvMjE4MjM1L25iY3NueC8xODk2ay9wcm9nLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTY2LjE3MS4yMjguMTAyCgojRVhUSU5GOi0xLEJ1cm5sZXkgLSBCaXJtaW5naGFtIENpdHkjSU1HOmh0dHA6Ly9pMS5iaXJtaW5naGFtbWFpbC5jby51ay9zcG9ydC9mb290YmFsbC9mb290YmFsbC1uZXdzL2FydGljbGUxMjM5OTQ3LmVjZS9BTFRFUk5BVEVTL3M1MTBiL0J1cm5lbHktdi1CbHVlcy5qcGcKaHR0cDovL2RlbHRhdHYucHcvc3RyZWFtLnBocD9pZD0xMzI1NDcmd2lkdGg9NjQwJmhlaWdodD00ODAgJlJFRiZodHRwOi8vd3d3LmRlbHRhdHYucHcvCgojRVhUSU5GOi0xLEJ1cm5sZXkgLSBCaXJtaW5naGFtIENpdHkjSU1HOmh0dHA6Ly9pMS5iaXJtaW5naGFtbWFpbC5jby51ay9zcG9ydC9mb290YmFsbC9mb290YmFsbC1uZXdzL2FydGljbGUxMjM5OTQ3LmVjZS9BTFRFUk5BVEVTL3M1MTBiL0J1cm5lbHktdi1CbHVlcy5qcGcKcnRtcGU6Ly8xMzQuMTkuMTg1LjIwMzoxOTM1L2xpdmVkZ2UgcGxheXBhdGg9bWFtYWhkc2t5MSBzd2ZVcmw9aHR0cDovL3BsYXllci5oZGNhc3Qub3JnL18uc3dmIGxpdmU9MSBmbGFzaHZlcj1XSU4vMTYsMCwwLDI1NyIgdGltZW91dD0xNSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBsaXZlPXRydWUgc3dmVmZ5PTEgcGFnZVVybD1odHRwOi8vd3d3LmhkY2FzdC5vcmcvfHJlZmVyZXI9bWFtYWhkLmNvbQoKCkBAQEBACkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gSXJlbGFuZCBMaXZlIFR2IC0tWy9DT0xPUl0KCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1SVEUgSnIgSERbL0NPTE9SXSAoV09STERXSURFKQpodHRwOi8vd3d3LnJ0ZS5pZS9tYW5pZmVzdHMvcnN3NS5mNG18WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1SVEUgTkVXUyBIRFsvQ09MT1JdKFdPUkxEV0lERSkKaHR0cDovL3d3dy5ydGUuaWUvbWFuaWZlc3RzL25ld3Nub3cuZjRtfFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxSVEUgMQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1ydGUxMTEmdnc9NzIwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsUlRFIDIKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9cnRlMjIyJnZ3PTcyMCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLFRWMwpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT10djM3JnZ3PTcyMCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLFRHNCBJcmVsYW5kCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXRnNDcmdnc9NzIwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsVFYzIChXT1JMRFdJREUpCnJ0bXBlOi8vZm1sLjUwMTEuZWRnZWNhc3RjZG4ubmV0LzIwNTAxMS9saXZlIHBsYXlwYXRoPW1wNDp0djMubXA0IGFwcD0yMDUwMTEvbGl2ZSBwYWdlVVJMPWh0dHA6Ly93d3cudHYzLmllLzNwbGF5ZXIvbGl2ZS8gc3dmVXJsPWh0dHA6Ly93d3cudHYzLmllL3BsYXllci9hc3NldHMvZmxvd3BsYXllci9mbGFzaC9mbG93cGxheWVyLmNvbW1lcmNpYWwtMy4yLjcuc3dmIHN3ZlZmeT10cnVlIGxpdmU9dHJ1ZSB0aW1lb3V0PTEwCiNFWFRJTkY6LTEsVEc0Cmh0dHA6Ly9jc20tZS5jZHMxLnlvc3BhY2UuY29tL2NzbS9saXZlLzc0MjQ2NTQwLm0zdTgKI0VYVElORjotMSxURzQKaHR0cDovL3RnNC1saC5ha2FtYWloZC5uZXQvSWRpQmVvMV8xMjAwX3RnNEAxMTg2OTM/dmlkZW9JZD0yNTM5MDk4NDk2MDAxJmxpbmVVcElkPSZwdWJJZD0xMjkwODYyNTY3MDAxJnBsYXllcklkPTEzNjQxMzgwNTAwMDEmYWZmaWxpYXRlSWQ9JnY9My40LjAmZnA9V0lOJTIwMTcsMCwwLDE4OCZyPU5UUEVXJmc9R01YV0VFWVpPVFFLCgojRVhUSU5GOi0xLFJURSBPbmUKaHR0cDovLzIxMi4yNTAuNDYuMzU6NDI1Mi9ieXNpZC85NjAxIAoKI0VYVElORjotMSxSVEUgVHdvCmh0dHA6Ly8yMTIuMjUwLjQ2LjM1OjQyNTIvYnlzaWQvOTYwMiAKCiNFWFRJTkY6LTEsVFYzCmh0dHA6Ly8yMTIuMjUwLjQ2LjM1OjQyNTIvYnlzaWQvOTYwNSAKCiNFWFRJTkY6LTEsVEc0Cmh0dHA6Ly8yMTIuMjUwLjQ2LjM1OjQyNTIvYnlzaWQvOTYwMyAKCiNFWFRJTkY6LTEsUlRFIEpyLgpodHRwOi8vMjEyLjI1MC40Ni4zNTo0MjUyL2J5c2lkLzk2MDYgCgpAQEBAQApHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIFVLIExpdmUgVHYgLS1bL0NPTE9SXQoKI0VYVElORjotMSxBbGliaQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1hbGliaSZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxCQkMgTmV3cwpodHRwOi8vbGl2ZTguZ3YuZWRnZS5maWxtb24uY29tL2xpdmUvMjcuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlY2Y1NzZkYzBlODM1YzE3OGM1NzhhNTIwNTk0Y2M3N2E1YWIyMDg4NjU5NDFjNmU4YzkwNTFmYWFmOWM4NjNiMjE3YzRhZTZjMTdhMzRhMTBhMGIwODMzYjIwYTM0ZWNjNjczYTkxMWYwNjlkYmRlNGIyZGJiN2UzNjhiNWMwZDFiOWRhNjc4NmVjM2VkY2FmMmYxODZkMjFkYWI1YzY2ZWE3N2Y2NTQ2MzBmM2YwMDU0NTRjNTUxZGQ5ZjVkYjU1OGRkMWRkZWE0N2RkYWE4M2I2NGMzZGQ5OWUxOGU4ZTBlNGY5ODBiMTZjNTVkYjFmMGY4MWI3MWY3Yzg3ZjgzZWYyYmIxYTI5NjIzOGQ1MWYzZmEwOGViMTI1ZTRmMjA1CiNFWFRJTkY6LTEsQkJDIDEgTm9ydGggSXJlbGFuZApodHRwOi8vbGl2ZTMwNC5lZGdlLmZpbG1vbi5jb20vbGl2ZS8zNjEuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlOTQyYWVmMTE1ZTY0NjlhNzA4YzlkNTAyYzQzYzIzZWEyZGUzNTBmYzE0ZWI3Y2MyZWJlMmRmMDIxMWE2N2YzNjdkYTEyZmFmY2M0NjgwMzY2MDVjOGNjNjNkNmFhODcxOTM1M2E5NTNiNGFlNGMzOGJjZTRkNmYzMGVmNzg1ZWRiOTJmZDA3YzI0MWFhODA2YzVhYTExZDZiYTA4NDEwMjcxODk5MjcwNmM3OGNlZWRlNjI0NDMzNzcxZjU3Njk4ZmM3ZjM3ODJjOTk2MTIwMTI2MjAyZTgzYTczYmY1MzdiZjE3M2QwMmMzZTJlNmExNWQ0ZTc1ZmY0MDFjYTUzYTUxNmUwMzE0ZmQxYzYzNWJlNjZhMWMwZjJiNTRhYWQwCiNFWFRJTkY6LTEsQkJDIE9uZSBTY290bGFuZApodHRwOi8vMjA0LjEwNy4yNy4yMzMvbGl2ZS8zMTY2LmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZTU0YWQ4ZjI0NDllYWU1YjQ2ZTFiYTI0YzdhZTA1NjRlNTU3NGY1MzFhNDg3M2NiNTNlNzJjNThjYjczMGI3MjUzYTAxZjcyMWU0Y2I3NjI5ZDczZWQxMGUzNjg5OTY3NjlhOWZiYzBiMjJkZjFlOTVhZTRjMDI3ZDkwNmUwMDMyYmQ3OWZhZjI0Nzg5NDNjNDM1Y2IyNGM1MmMyMjU2ZjU4NWE1ODUwMDZjZTFiYjc2MWU2MmMzMjM2YmNkMzMwNGI0ZTM2MWNhY2QxMjA0YjgyMWE4N2FlYzE4YTUwNTZmODQ5NzRiMzIzZmUxYjMwMWRlOWRiYzFlYWFlYjgwYTIyNTI1MzAxNTdjYmIyYTIyZTViZTU1NmViMGUxNjA0ZAojRVhUSU5GOi0xLEJCQyBPbmUKaHR0cDovLzE5OC4xNzkuMzAuMTA5L2xpdmUvMTQuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlYWFhMDg5Mjg1ZjZmYjlkZGIwMzlhNTYzYWQ5MjJjODA4OGQzM2FjOWZiNTIzOWQ2ZjMxNzY2ZDg2MmUxMjFkYzBiMzgzNThhNzk5MDFjYjQ4NTgwMzUwODZhYjM3MjMwNWVmNjNjZDE2MTQyYjA1YzFjNzFiMDNkMmRlMDg4NThiNWZjMTk3OTJmMDE3MTg0NTFkNzY1MWRhMmQ1YTk1MTNhMjRkYTdiMDI1NTc5MTkyNTk0YTRmYTE1N2RkOTU3Nzk4MmU2MDA0MmM4YzI1YzY0MjdhMjUwNTM3YzJjN2U1YTNiYTk0Zjk3ZDg2ZjU4ZWFlZGQ0Y2FhY2UyNWUwYzhlMDI1ZmMxYmRlOGI1MThmZmVmNTk2MGU0MjhhYjU3CiNFWFRJTkY6LTEsQkJDIFR3bwpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1iYmMyNDQ4JnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLEJCQyBUd28KaHR0cDovLzE5OC4xNzkuMzAuMTA5L2xpdmUvMjUuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlNTA1MTcwNTRlMWI4ZmYzMGNiM2YxYTdmOTliZjYwZTVjZGRlNjRkM2Y3NTgzODZhZTkxM2U4ZDBhMTZiY2RmN2U2OTdhMzViMjUwMmRkMzkwM2QwMjkxOWRhOTdiMzBkOGY3Njc4Y2I2NDAxYjAyZmQ2NDE5NWU2NDVkOWM3ZmZhNDE5NWQ5ZTJiMjE4YjJlNWU2ODIyZDk0Yzc3NDQ1MzlmZTNlNGU0YjA5MzVhNTIyYWEwMTM5NzJhZGMyOTgzODc4MTlkYTcxMDY4MzZiM2IwMThkMGU5ZmYyMmUwNmU4MjIwYjg2ZTZhYTY3OTYyMjc2YmU5ZTU1Y2FmZTI5ZjMxNzQ4MmRlMzM0YWE2OTllYTlhYzk0YmMzNjdhY2JmCiNFWFRJTkY6LTEsSVRWMQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1pdHYxMzU1MiZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxJVFYxCmh0dHA6Ly8xOTguMTc5LjMwLjEwOC9saXZlLzExLmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZWU0NDc1OWExY2FhZWQwZjA5MWIzYjc0OTBkYTVkNTYyOGJlNTQ3NWNhM2ZlZTEwNTM3NDBiYjA3ODBkNTU1ZGZhOWFlZjM1NjY3NDgxYzE3NWY3ZmFkYTU0ZTJkZjk1ODBmOTcyNDgwNmRiYTY1NzRiNzI0ZmNhNmFhYWQwMDUxMzk0ZjFlMzE1MmE1ZGQ4Y2ZiYjhkNWFlMjA3ZTNmMDYwYmE5NjZlZDUyNGY5OTdiODcyMWM5NTIwMWQzNWE1Njc4NDFmNGE1OWM4OWUwYmU1ZjliMWRjMjYxOTE2NmVlZWQ1N2RlZDYwN2ExMjkzN2U5NWM1NDFjZjRiYjg4MjA0MTM5ODA5ZmFhZDFjMTA0YTdhYmVmNTM3OGU0NzAzYwojRVhUSU5GOi0xLENoYW5uZWw0Cmh0dHA6Ly8xOTguMTc5LjMwLjEwOC9saXZlLzIuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlZDlmOTE2MjYxYjAyNzEwMGJmMGJhZDA3YzRiZjBmOTJjNjdhZmU4NjI1Y2YyZWI5NmEyMzhhYzA3ZmU3Y2E0MjI2ZWJiYjIwMDIzMzgxMzI3NGYyOGYzYjhkNjQ3YmM0MTIwMTYxYzc1MjdhOGQ5OTMzNDMwOWZhNWEzNDVlNTgwYTlmY2MwNGRlOWM4MWI3M2MwNTMzNmZkZDc3ZjFjZWM3MTFkMTQ0YTU3Yzg0YTI4MWFmYzNhY2QyMDQ0NGRkMGU4ZjQwM2MzOWVlN2ZiM2UyZTNlZTRmY2I3ZTRlOWU1YTliNjA4M2E5ZDk2ODI3OWFhZTIzZjk1OGYwYzU1NzFhNzg1ZDM0MDdmZjYwZmNhNjkwOGJhMDE5MThmZDFjCiNFWFRJTkY6LTEsQ2hhbm5lbDUKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9Zml2ZTQmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsQ2hhbm5lbDUKaHR0cDovLzE5OC4xNzkuMzAuMTA4L2xpdmUvMjIuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlYzc1YTQ3ODllOWU5NGE2YWFiNThkODY4ZDgzZThjNTA2YjhhZjY2Yzk0ZjU2ZjNkMGEyYzAxZDBmMTU2YWI5MTliNTk4OTBlODhiOTI0YjQ4YmRmM2RjM2E1ZmViYzU5ZjA4MGM4NTI1NDFjNGIxOTI4NzE0YmJmOTY5NTcwYzMyYzhmMzMyMTQwNDczMjIxYmMwNzM2MWU3ODViZWFkYTJjMzEzMTBmNGJkMGM0ZDM1Mzk1OGVjNzY1MzEzODFmOWM3YzdmZTE5MzFhNzk3NDE3OGNiYjQ1Y2YwY2VjNTc1NjI4ZTMzNzcxZjNkNTYwODI1MGEzNTdjMWY2MjFkMzgyODkzYjk4MWFkZWY2NjVhMTRkYWQ5MTVmYmU5YjU5CiNFWFRJTkY6LTEsRGF2ZQpodHRwOi8vbGl2ZTMwOC5lZGdlLmZpbG1vbi5jb20vbGl2ZS8zNzAuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlMjc0ODg4ZjVjMjdjNzI3YjQ1MTE1MTY3MGQzYTAxOGQ0NTRiZDM1NzcwOWM5Y2MxMTBhYzFmZTA5ZDYwNTRlYWJmMWYxM2U4OGQ1NGU4ZDBiYTMwOTY0OTEyOWJkNzc4MzFmN2EzMGRmZjU4MjdmZDI4NWE1MjJlMWNiMWEyOWI4ZTE5ZjllOTdiMjg2MjlmMTIyZDY1MmM0OWYzYTFkNGY3YzRmYjNlMTAyZWMxNzlmODUwYjUzMGMwM2MwODk1Yjc3OTEwOWQyYTljMTZkY2EyZWE1ZmE3NGUyZjQ1NzliMDg2MTMzMzAwMDk2OWM3NjgyNzFmOTE0ZDA5NDM2MDVhYjE2ODY3YTQwZDgyODgxYTcxM2JjYzViYjUwYWZjCiNFWFRJTkY6LTEsUyBPbmUKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9c2t5MXVrJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLFMgVHdvCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXNreTJ1ayZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxTIEFydHMgMQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1za3lhcnRzMSZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxTIEF0bGFudGljCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXNreWF0bGFudGljJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLFMgTGl2aW5nCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXNreWxpdmluZyZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxDb21lZHkgQ2VudHJhbApodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1jYzY5OCZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxQaWNrVFYKaHR0cDovL2xpdmUzMDguZWRnZS5maWxtb24uY29tL2xpdmUvMzcxLmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZTExYWYzYWJhMjM4NTVlZmY4ZTMzM2FlOGViZjhkYzE0NzA0YjRjYjJkM2NmODk1NjU5NjhiNmM4NTE3Y2VlYzdhMjZmY2FkYzIyZDNkYWVhNDYyNWNlMTQ4MjY2ODZkMDhlMGIzZTAwYWMxNTM3MjcxZTg4ZjYzZTcxMDk0YzUxOWY3MzJjZTAxMzgwYTFjYzk2ODlkMzBiZjJhODRkMDNkM2NkNDU0ZGYxNzhiYjI3OGMzNDBjNDUyY2JkMTFmOWU0NmRmYWNkYWFmNDQwOGQ4ODE3OTM0Zjg5Y2ZhOTdlZTM5NGM2NTI0OWE3NGE5MjdkNjY0NGNjZDNmNWQ1YmQ3OWQ0Mjc4MGU3Y2M0MTMwNzYzNzRkZTIxOTk3MzNmZQojRVhUSU5GOi0xLFJlYWxseQpodHRwOi8vbGl2ZTMwOC5lZGdlLmZpbG1vbi5jb20vbGl2ZS8zNzIuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlMTA4NTUxOGZiMzM5ZGQxZmQ5NjFiNGE3ODAwN2NmYWMzNjAxMTJhNzE3N2UyOGI3M2MxMzY1NzU3ODJhODBjMTFiZjMzZWQ2YmM2ZjVjODhhNGNlYjhiNWY5ZTBhZTFiOWJhY2EwYzA0MWU3MWZkZjZmMjdjZjNkZWJlYjZlOGU1MWMxMGJhZmEzNWI1OWI0ZWU1NmE4ZTMzNmZjMDAxYTdlZWNhMGMxNjdhNjdiODk0ZTRjOWM0ZGQ2OWViM2RhZTkxMTA0M2UwYTRmMzI0YmQ5NTRmOWM3ZTA5Y2M3MWU3MzM0YzM3ZWI2ZTI5OWQzZDBlOTU4YTMyZTgzNmNiYjgxZDFlNGVkZjMyNzQ2YWU0N2M4N2Y0MDZmMmZlMzZmCiNFWFRJTkY6LTEsRTQKaHR0cDovL2xpdmU4Lmd2LmVkZ2UuZmlsbW9uLmNvbS9saXZlLzY1LmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZWY2ODBkYzUyNmRkZjhjZWM0MzA2MTVhOTEyZDcyYTk5M2IzOGZjOWJiNTJmNTFjYjcwNWUxZDdjNmJlOGRmMmFjMmYxYzEyODQ1Y2NiYjBiOWVjMDUxMTY0MGE2NjgwYTRkNGE4ZWJiN2FmZGZhMGYwZTAyNzYxNDhjNWJjNzI3N2I5MDFmNTlhYmIyM2UyZDhiY2E3MThhMjMwMjAyMzg4OGI5YmEyMDY1OGI3ZTJhZTVkZWNiNmE5OTEwOTY3ODJlOTFmNmM1ZWFhMTU2Mjc1ZDUzYzFiNWUyODM5OGYyNWQ0NmJkZjFhNTkxMGNjMWExODg2YzkwNzg5ZGE3YWRiYjgwNDc3N2E3ZmM4M2UzNmY3YTdmMzcxZWEyYmE4MAojRVhUSU5GOi0xLEZpbG00Cmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWZpbG00JnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLEZpbG00Cmh0dHA6Ly8xOTguMTc5LjMwLjEwOC9saXZlLzEzLmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZWYzOGI1ZWVmOGJiMTkwNjFlYzBiNWY0ZDAwY2FjYzc4ODJlMzA3YzBkYjIwNzAwY2FkNmVhZjVlOTQ2N2U1OTQ1ZjMxMWQwOTEwNDE1YmVjOTA5YTYyZTlhZWNiMDNkNzBhZTI5MDU5NDdhNWU2ZTA5Y2NkMTljNDUzODdmYzIwODY4OTEzNzU2ZmVlYzRlMTIwNTVkNDdiM2EzNmU0YTczMDhlNzcyYTNlNGYyZTFhMGI5YTdiZTYxNzI5NDk0MDFhOWQ4YTNmZWZkMDcxMDI1MjFmZDdkYjczMDk3NjBmMzBhNjlkNWIwMDI5OGMyM2U2MzQxZGFkOTU0MjA5NGRlZjE3Njg5Y2IxYjIwMGQ2YTYxMGZhZTY0YWZjY2E1NgojRVhUSU5GOi0xLFMgQWN0aW9uCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXNreW1hJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLFMgQWN0aW9uIChBTFQpCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MTY2NSZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwojRVhUSU5GOi0xLFMgQ29tZWR5Cmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXNreW1jYyZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxTIENvbWVkeSAoQUxUKQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzE2NjQmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KI0VYVElORjotMSxTIENyaW1lCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXNreW1jYyZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxTIERyYW1hCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXNreW1kJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLFMgRHJhbWEgKEFMVCkKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcxNjY3JmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCiNFWFRJTkY6LTEsUyBGYW1pbHkKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9c2t5bWYmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsUyBQcmVtaWVyZQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1za3lwbSZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxTIFNob3djYXNlCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MTg4MSZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwojRVhUSU5GOi0xLFMgU2NpLUZpCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXNreW1oJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLFMgU2NpLUZpIChBTFQpCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MTczMSZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwojRVhUSU5GOi0xLEZvb2QgTmV0d29yawpodHRwOi8vMTk4LjE3OS4zMC4xMTAvbGl2ZS8yMC5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmU5ZmRiNWNlMjA3MWE3MDMxZjg4MzlmMzhhMGIxZWQyYjdkMmFhMDU2Y2UzZjk4YzBkZmI1MWI4ZGVlODE1YzFjOTgzZmY4NWEyMjMyNzU1ZDM1MTA3ZGI1YTYzODZlZjQwZmVmY2VhODdhYmJkM2RlMTcxMzcxNTBmZjFmMWZjNTcwNjg1NTMwMmJmYTU3OGFiMGYxNjA3MDEyMmU5Mzk4ZWE2YzVmNDQ5MjMwMDkxOWJmNTlhZWMzY2U1ZGY4YTIxY2ViMDM1YjQzMzZhZWUxODFmYWFjNDkzNGRiYTI4ZWUxNWQxMjZkYjNkZWY0MmM2NzhiYzg2NzBkMGFhMWZlNGMxZTgxNWUzMGQ1MzFiYTAwZGM3MDczZWIwZWM5NGQKI0VYVElORjotMSxJVFYyCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWl0djJsJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLElUVjIKaHR0cDovLzE5OC4xNzkuMzAuMTA4L2xpdmUvNjcuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlZGY0NTkwOWYwYmE3OGY2YjY5OGUzOGJhYzY1ZWYyMzUyOWVmM2MxNTRkZjVjNmE3ZmQwOTZkZWZkNWFlMDhiMmQ3MmVhZDA2YTM2OGRhNWM3MDU4NTJmNzRiOGI0OTA5NmVhNzk5YmFlYTg0OTJiOTY3MzYwODFlOTg4NTQxMmFjZjhiZTY5MzQxNjc0YmJiODk0N2NlNjlkNzI3NTFlMDVjNjJmN2YzYTRiMWNiODdmZmI1MjgyMWM0YzYyZmNhYTkxZmEzZjVmMDRmOWIzY2Y4ZmMwYzU1ZjA5YjU2NDM5OTJiYjUxMTI0MjEyNzE4YThjMjc0ZDIwZWQ5NzNmN2E2ZjdmOThjYTc0M2E1ZGEzZmFlYjVjY2EzOGE3YjAxCiNFWFRJTkY6LTEsSVRWMwpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1pdHYzbCZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxJVFYzCmh0dHA6Ly8xOTguMTc5LjMwLjEwOC9saXZlLzI2LmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZTcwN2MwNzJhMzM0ZDZhNzY1YjViZWQxZmY0ODY5ODJhODkxMjhlMGQ4ZDY0MWIyOWZhMTFmMTFkNTA5NWY1MjM1MzRmNWNhMWVkYzdhMjBjMTMxOWFiZTJmNDc1N2VhMmJhY2M1NzQ2ZDgzYmU0YWNjZjAyNThiNDhmZTIwMWRiNWIyN2JkZTkxOTJlNzQ4MzBjMjhjNDk4MWYyNTA2MDE0ZjllMmE0Mjg2YzIxODI3ZDgzMTM4OTYwMmM1Yzk3YTUwZWM0ZjY2ODJlODdiZGQ4OTQ2MTVhYTJmZWQ1NTUzYjk3MzI5MDY1MjYzMjBhMDU5NGMxMDA3ZDA3ZWFmODc3MTdhMThlOGRhNmE0MTAzNWJlMDkwYjliNjY2NGM0NQojRVhUSU5GOi0xLElUVjQKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9aXR2NDQ4JnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLElUVjQKaHR0cDovLzE5OC4xNzkuMzAuMTA4L2xpdmUvMTAxLmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZWFkZGJhODNiODQ1ZTlkYjcyYmVmZDAwZDI3MTE0NTBlM2RlNzMwNmZlNmFkYTBiY2JkN2NkNTBjM2QxZGE2ZGJmYjhiODc1M2YzMzRiNmY5ZmVmM2VjMGZiYWNkZDg5MGZhZmE2OWQ5YjE0MTQwMTkzMDMwMGIxODhjNDE3NzQxZWE0ZTc2OGUzZWI1NTZmNDM4NTUwMDhlYWU0YjBkZWNjMzg3NDI1ODJmY2ZkODVhMGI5OTI1MmI2ZDNlMWIzNTQ4YTJhMzA4M2Y5ODQzNjJmNDAzYWMyMGNlMDdkYzY4ZmY1MzZiMmJkYTQ5NTMxOThjMDY4MGY0NGQ0ZGQ0NzZlZjUzMGFiMGRhYmFiODMwYzMyNTNkNTNiMjQzODJjOQojRVhUSU5GOi0xLDQgTXVzaWMKaHR0cDovL2xpdmUzMDguZWRnZS5maWxtb24uY29tL2xpdmUvOTUuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlMjIwMWViOWZjNjU2MjAzYzUyYzk4ZWQwZjg4ZDA3ODBiNTlkZjQ5OTU1OTZjN2RjNTA4MGI3MjQ4YWUwZmJjYTZkMjc1NTRmY2VlMjllMDdiZmNkN2M2NDYyODQwODUwODg0NmU4MDM3YmZkYWUyMjVmNjM3NzZiOTFkNDczNmRjZjg4MmJiNzA4NTYyYjllNmViOTRlM2EzMDI3ZDFhNjhkZmE1ZjNkZTE2YWNiZTZjOGRkYTIxMGI0M2E2NzIyNzIwYWU0MjQxYzkyMzQyNDk3YzQ1NThkMWZiYWRmM2M5MmY1YmY5NzE0OWJlNWQyYWIwMGZjNmI4YThhNmUwZGNkYTg1NTZkMGI0ZmQ3ZDVmYTgwODkzMDgwNTBjYmE4CiNFWFRJTkY6LTEsTW9yZTQKaHR0cDovL2xpdmUzMDQuZWRnZS5maWxtb24uY29tL2xpdmUvOTcuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlZjQ3ZDkyYjY4ZDc3ODA4NGExMzNjZTdiMzRkZjBjNDBkZmUyYTZmZTNlNmYwM2U5YTExNzkyODdkMDJjMWMzOTgwMTBhNTNmZjMyODFiOWMyMWU3ZGJhNmVhNjlkNzU4YWQ4ZmRlMzRkZDlkZTE4NTE2ZjkyYTIxZjQ5OTBiNmU2YjJhZTQzMzcxYWM0YWU3NWE5OGFiMWM1NjZlNTAwMDgwYjBlNTMwMzIwYTZmZGE0NDI1NGM1ODcyZWM0ODdkODgxOTI3OWY0OTNlZDVlYmUxN2E3NTEzMmVjMDBlNTQ4NDFjNDE3MGEzYzNiYjI5OWM5ZTY2MjE5M2RhYTY1ZWM2MDYxYjNhMWFhM2IzZTgzN2ViNGI1NTA3YjlmNWI1CiNFWFRJTkY6LTEsSVRWKzEKaHR0cDovLzE5OC4xNzkuMzAuMTEwL2xpdmUvMTgxNy5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmUzNzZjMTgwOGJiNjg4NDNiMWZiZDE2NDU0NGZjOTkwMzUzYTBkNWYwNmFhYjY1NDI1N2Y0MzM4YTU3MDY5NDE4YWVmZWE4N2FhNzdkZjllZmRlYTkxMzdkNGM4NzNkMWFlOTZlNGM3ODgzYzRjMTk1ODJmMDgzODNjZmEzMTdkNmZkNDVjOGQwNzUwODg5YjlhOWRhZDRmZmEzODU0OTc0MjA2NGU2MzIyNjI0N2U0MGE0MmViNGY3NTM0MzZjMjMxZWZlNzc2NGJlODBiMDkwZWI4YTU5ODk5ZmFiYTJkODA2OGFhYjVjMWM5NjU0ZjVmYmJhMzEyODVkZmMzOTA4MGNjZjI3ZWY4MGNmZDM0MDdhMWIxZjZiOWI3YzM4OGYKI0VYVElORjotMSxJVFYyKzEKaHR0cDovLzE5OC4xNzkuMzAuMTEwL2xpdmUvMTgyMC5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmViMWRlY2EwZmVjMWI0YzNkYjJmNGIwNWExNDA5MmQ3YjgzYTE5MWZiNmU4MTAyNTVhMGQxZGZmOWJiZWM0NmNmMjU5NzI2YzU2NTc4MDczZmViOTcxOTQxNTMzZTNmZWIxNGY5ZThlYzBkMmEzNTQ3MDk0MjNhMDQ0YmIxNzIxMDM1MDQ0ZDcwYWNhYTZlNTc3YjM3YWM1OGU3ZWVkM2M4YmM2ODMzYmQwY2FmOGU4ODNkNTU5NWE2ZTJkNDczMzU1YzhiMTUwYjg5YzFlMmVmNTBkZmI2YTU2NGZmMjkzZmZkZDQxZmRjMDRiNjY3YmI5NDgxNDMzN2QwZjYzMjliNjFmZDFlNzkxZDQwNTJiNDRlNTNmYzIwYmRmZThhZjYKI0VYVElORjotMSxJVFYzKzEKaHR0cDovLzE5OC4xNzkuMzAuMTEwL2xpdmUvMTgyMy5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmViOWIzY2YxNDIyODhlYTliYmUwNmM2NzgxMzdhMjNhYjUxYjk0ZTQ3ODI1ZjFmYjZmN2NlODBkNTJiNmE1MjNlYWQzOWVmMmQxNmQ5YWQ4Njk4ZjgzNDI2YzFhZmY5NWU0NDQzNTAxZmUxNmFiMTJkZjI5NGYwOGQzOTkxYmJmNWU4MGU5MmZlY2JhYjAyOWZiY2NhYzJkZGI2ZTVjMmI3ZTAzZTMzNzQ2MzQxMWFlZDFlOWFjYmFkMTQ1ZDEyNDFjM2FhNzIwZjU2ODU3Y2ViNjI2YzNlNDU0NjljM2NhYmJkZjc4ZTIwMzU4NTY0OTY2ZTI1Y2EwODJjZmQ3NzNhNDQ3NzAwODE0ODU0ODVjN2RlOTU1NmU4NTM4MWExMTQKI0VYVElORjotMSxJVFY0KzEKaHR0cDovLzE5OC4xNzkuMzAuMTEwL2xpdmUvMTgyNi5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmVmYjhmNDAzNzA1MzIwOWYwZDQzZGIzMTJjZDVkY2FmNDE4MzhkNDFkYzA0N2I5NjI5ZjgwMmNhNzUyMjBhNmRiZmUxNmVmOTdkNDZiNjI5NmZlYzk1YTE4YTJmOWQ3NWRlODg4ZWE2N2ZkODkwOTRlYTRkMWNhYjNjYzMxMmQwZDA4M2NlOTJhYjZiYTcwZDY1ZmM4OTM2NTVjYjMzNDI0ZTVkZWFlMDM4ODc2MTEzZDcyNzgxYzUxMTEwOGI3NmY3NGFlYTY0ODYzM2UxOWY5Mjk0OTlhNmVjZTdhMjU3MTUwMzJiYzNhYmNjNjI4MWY3NTU3YjgzZDQ5ZTMzMmViNDlkY2Y4MmYzYzRjYjBmMDI0N2M2M2RkMjQzY2ViNWEKI0VYVElORjotMSxDQlMgRHJhbWEKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9Y2JzZHJhbWEmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsQ0JTIERyYW1hCmh0dHA6Ly8xOTguMTc5LjMwLjExMC9saXZlLzE4MDUuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlYWY0MmIwZWJmOTcyOGZkODVjMzJkNDNiMmY1ZWQwOGM5NGM0ODc2NTRiNDgyZDJiNWUwYzg0NDEzYTc2MWYxMGEzZjhlNWQ2ODMyNzBmM2ZhYmUyZTVkMTEwMTIyOWE1ZTliNmE4ODJmYzQwNjY2YmY5ODcwNWUzYTQwZDY0MDdkYmJmNjI5OTcxMGZkMjU5ZjcwZGJhOGVkZmRmZjAyMDc1ZDM1NDg5MzViOTYyYTQ2YmI1MmU2MjA0MjM0ZTRhYWVlZGM5NzNkZjExMTg3NjlhNmZkMGRkOTczMzU2NDZiNzZkNTY2MTI2NjhiM2Q1NDVjMTQxMWVjMzM5ZTc2ODdhYTE2NTQ5YjI1MzI4YzYyNmM2ZjY4NmE2NGUzZjZhCiNFWFRJTkY6LTEsQ0JTIFJlYWxpdHkKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9Y2JzcmVhbGl0eSZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxDQlMgUmVhbGl0eQpodHRwOi8vMTk4LjE3OS4zMC4xMTAvbGl2ZS8xODA4LmhpZ2guc3RyZWFtL3BsYXlsaXN0Lm0zdTg/aWQ9MGFkNWFhYzM5YmIxM2ZiZTkwNjlmMDM3YTdjMGEzNzg5OGNlODViNTFiYjA0MzEwN2FhYmY4YTAxNzEzYTM4NWY4YTkyZGJjNmUwMTI4YWE2MTFlZTZmYjE4NzQwNTlhZWQyODAxNmRhYjllZTBhYmVmNDg1ZGVhMTkzMDVjODlhMTVhZDAzYjgxZWM3Y2U0N2MwN2ZjMzkzOThmZGI4NzQxZmZlOGY3ZDE4NzA2MjJiZDdmODk2MDE4NjM0NjNjMmJiZTIwOTczNGU4OTM1MDVkMTMxYzEyYmQ1OGMwNzYxNzgzNzY0NzQwNDJkZDJlN2EyNjhjMjFhMDQ1ZGIzYjhlODQzMjA0NjExNTkwNTNmNjc5NGQxMWNjMWYwZGQ1N2NjYmJkNTdjMmEyYThjNwojRVhUSU5GOi0xLENCUyBSZWFsaXR5KzEKaHR0cDovLzE5OC4xNzkuMzAuMTEwL2xpdmUvMTgxMS5oaWdoLnN0cmVhbS9wbGF5bGlzdC5tM3U4P2lkPTBhZDVhYWMzOWJiMTNmYmU3MzA4OGY3MDA4NTM0ODU2NjUyOGNhZmY5YzRlZDIwMDQ4ZmU0NDg0MmUzZjJjMTViOGYzNDdlNDgxMGQ3ZWUxNWIyM2EwMWYyNjI3M2FhODkyMzkzYmE4MTMyYTQ5NTZjMjI3YmFhNmQzM2VjYzBmZWRhZDcwNzExMmMyYjM5Yjk1NzE4ODc3MWMwMmUyYzVjMjNlYjM0OWE3NzY3NjA3OGFiMDcxYTM4Yzg1NDljMjAwZGRkODM1NmRmNTA4NjNhNDkzODI2NTE2MGIwOWQ1MDA1ZGZhYzk5NjczNDdlMzRlZGI1NTFlNjhiNTdlNzQ4N2ViN2RhN2RmNjQ1Njc4ZWE4OWQ4MzQzYzg3ZDhlZDkwZDBiMWY0NjMwZWJmOGMKI0VYVElORjotMSxETWF4Cmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWRtYXg0JnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLERyYW1hCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWRyYW1hJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLDVVU0EKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9NXVzYTQmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsNVVTQQpodHRwOi8vMTk4LjE3OS4zMC4xMTAvbGl2ZS84NDUuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlMWVhNzc5ZjlmMzRkNzkwOTI1ZTM5N2YzYWEzZjRiMDczNWQ2Mjk2YTYzMDk2MmI5ZDkxNDkxNjg5ZDQ2MWRkMWI1YjdhYjY2MWI0MGQ0ZmUyNDYxZmZmYjMyMGI1ODcyYmIzNTE2NGQ4YTVlYTVhMzJkODMyMzc0MWI1NmQxMjVmOTQxOTg0ZTk0OGUwYWUxZmUwZmE3MjgwYTAzOTM1MGY1YmFiZWE5ZmY3MzgyMzI5ZDU2MGJlOTc2OTQ2YzI0NzI0MDBiZjQ2OWUwNTNlYzA5MDllMjhhMmNmNGFmN2E0YjlhYzRiYzcxMzVlZDNkMzM3N2ViZDdmZTMzNjBmYmU5ZTZlMmM5MGE2ODQ0MGUyMGQwNWM2ZWJlNTdjZjA3CiNFWFRJTkY6LTEsWWVzdGVyZGF5Cmh0dHA6Ly9saXZlMzA3LmVkZ2UuZmlsbW9uLmNvbS9saXZlLzEwMzkuaGlnaC5zdHJlYW0vcGxheWxpc3QubTN1OD9pZD0wYWQ1YWFjMzliYjEzZmJlMWVhNzc5ZjlmMzRkNzkwOTczYTg2ZmI3NTM1Y2U4MzAyYmM4ZjI4MDEwMjRkMjRjMDA5MWU4MGQ0NWYzMzU4OWNjNGQ4ZjIxYTY2Y2NiZDIwYTRiM2VlMTRlOGI2YjQ4MWM1NTg4OWExNTM3YWQwNDVjNTMwMTQ0NTBmZjc5OTMxZmE4NzFiYjg5MGE2OTMyYjVmNmYzZTFiNjY1MjlmYjI0NmY1ZTY3NDA2ZDYzMjExZTlkZjA4MGE0MzUyYzQxZDMyNDhhZmIyNDI3ZmM0MTM1MzhmZGY3NTJiYmMzMDI3NzRmNDc0YzFjNDc0ODA5N2RjYjg2MGY4NGY4NTk1MzhlNmY0MWE4ZDJlZTNhN2EyNTE1YWI5NGRiNjExMGViCiNFWFRJTkY6LTEsVHJ1ZSBNb3ZpZXMgMQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT10cnVtMSZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxUcnVlIE1vdmllcyAyCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXRydW0yJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLEdvbGQKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9dWtnb2xkJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLFF1ZXN0Cmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXF1ZXN0JnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLE1UVgpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NjkwMzcmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCgojRVhUSU5GOi0xLFtDT0xPUiB5ZWxsb3ddLS0gQmVsb3cgQXJlIEhEIFVrIFR2IFNvbWUgQXJlIEdlbyBMb2NrZWQgLS1bL0NPTE9SXQpodHRwOi8vMC4wLjAuMC92ZHVidDI1CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJCQyBPbmUgSERbL0NPTE9SXQpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzQvbGl2ZS9iYmNfb25lX2hkL2JiY19vbmVfaGQuaXNtbC9iYmNfb25lX2hkLWF1ZGlvXzElM0QxMjgwMDAtdmlkZW8lM0QzNTAwMDAwLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CQkMgVHdvIEhEWy9DT0xPUl0KaHR0cDovL3ZzLWhkcy11ay1saXZlLmVkZ2VzdWl0ZS5uZXQvcG9vbF81L2xpdmUvYmJjX3R3b19oZC9iYmNfdHdvX2hkLmlzbWwvYmJjX3R3b19oZC1hdWRpb18xJTNEMTI4MDAwLXZpZGVvJTNEMzUwMDAwMC5tM3U4fFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQkJDIFRocmVlIEhEWy9DT0xPUl0KaHR0cDovL3ZzLWhkcy11ay1saXZlLmVkZ2VzdWl0ZS5uZXQvcG9vbF8xL2xpdmUvYmJjX3RocmVlX2hkL2JiY190aHJlZV9oZC5pc21sL2JiY190aHJlZV9oZC1hdWRpb18xJTNEMTI4MDAwLXZpZGVvJTNEMzUwMDAwMC5tM3U4fFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQkJDIEZvdXIgSERbL0NPTE9SXQpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzIvbGl2ZS9iYmNfZm91cl9oZC9iYmNfZm91cl9oZC5pc21sL2JiY19mb3VyX2hkLWF1ZGlvXzElM0QxMjgwMDAtdmlkZW8lM0QzNTAwMDAwLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1DQkJDIEhEWy9DT0xPUl0KaHR0cDovL3ZzLWhkcy11ay1saXZlLmVkZ2VzdWl0ZS5uZXQvcG9vbF8xL2xpdmUvY2JiY19oZC9jYmJjX2hkLmlzbWwvY2JiY19oZC1hdWRpb18xJTNEMTI4MDAwLXZpZGVvJTNEMzUwMDAwMC5tM3U4fFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQ0JlZWJpZXMgSERbL0NPTE9SXQpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzIvbGl2ZS9jYmVlYmllc19oZC9jYmVlYmllc19oZC5pc21sL2NiZWViaWVzX2hkLWF1ZGlvXzElM0QxMjgwMDAtdmlkZW8lM0QzNTAwMDAwLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CQkMgTmV3cyBIRFsvQ09MT1JdCmh0dHA6Ly92cy1oZHMtdWstbGl2ZS5lZGdlc3VpdGUubmV0L3Bvb2xfNS9saXZlL2JiY19uZXdzX2NoYW5uZWxfaGQvYmJjX25ld3NfY2hhbm5lbF9oZC5pc21sL2JiY19uZXdzX2NoYW5uZWxfaGQtYXVkaW9fMSUzRDEyODAwMC12aWRlbyUzRDM1MDAwMDAubTN1OHxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJCQyBvbmUgSEQgKFVLKVsvQ09MT1JdCmh0dHA6Ly92cy1oZHMtdWstbGl2ZS5lZGdlc3VpdGUubmV0L3Bvb2xfNS9saXZlL2JiY19vbmVfbG9uZG9uL2JiY19vbmVfbG9uZG9uLmlzbWwvYmJjX29uZV9sb25kb24tYXVkaW9fMj05NjAwMC12aWRlbz0xMzc0MDAwLmY0bXxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJCQyBUd28gSEQgKFVLKVsvQ09MT1JdCmh0dHA6Ly92cy1oZHMtdWstbGl2ZS5iYmNmbXQudm8ubGxud2QubmV0L3Bvb2xfNS9saXZlL2JiY190d29faGQvYmJjX3R3b19oZC5pc21sL2JiY190d29faGQtYXVkaW9fMT0xMjgwMDAtdmlkZW89MzUwMDAwMC5mNG18WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1DQkJDIEhEIChVSylbL0NPTE9SXQpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzEvbGl2ZS9jYmJjX2hkL2NiYmNfaGQuaXNtbC9jYmJjX2hkLWF1ZGlvXzI9OTYwMDAtdmlkZW89MTM3NDAwMC5mNG18WC1Gb3J3YXJkZWQtRm9yPTE4OC4yMjYuMTM1LjEzNAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1DQmVlYmllcyBIRCAoVUspWy9DT0xPUl0KaHR0cDovL3ZzLWhkcy11ay1saXZlLmVkZ2VzdWl0ZS5uZXQvcG9vbF8yL2xpdmUvY2JlZWJpZXNfaGQvY2JlZWJpZXNfaGQuaXNtbC9jYmVlYmllc19oZC1hdWRpb18yPTk2MDAwLXZpZGVvPTEzNzQwMDAuZjRtfFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQkJDIE5ld3MgSEQgKFVLKVsvQ09MT1JdCmh0dHA6Ly92cy1oZHMtdWstbGl2ZS5lZGdlc3VpdGUubmV0L3Bvb2xfNS9saXZlL2JiY19uZXdzX2NoYW5uZWxfaGQvYmJjX25ld3NfY2hhbm5lbF9oZC5pc21sL2JiY19uZXdzX2NoYW5uZWxfaGQtYXVkaW9fMj05NjAwMC12aWRlbz0xMzc0MDAwLmY0bXxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJCQyBQYXJsaWFtZW50IEhEIChVSylbL0NPTE9SXQpodHRwOi8vdnMtaGRzLXVrLWxpdmUuYmJjZm10LnZvLmxsbndkLm5ldC9wb29sXzEvbGl2ZS9iYmNfcGFybGlhbWVudC9iYmNfcGFybGlhbWVudC5pc21sL2JiY19wYXJsaWFtZW50LWF1ZGlvXzI9OTYwMDAtdmlkZW89ODI3MDAwLmY0bXxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJCQyBBbGJhIEhEIChVSylbL0NPTE9SXQpodHRwOi8vdnMtaGRzLXVrLWxpdmUuZWRnZXN1aXRlLm5ldC9wb29sXzEvbGl2ZS9iYmNfYWxiYS9iYmNfYWxiYS5pc21sL2JiY19hbGJhLWF1ZGlvXzE9MTI4MDAwLXZpZGVvPTEzNzQwMDAubTN1OHxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJCQyBBbGJhIEhEIChVSykgMVsvQ09MT1JdCmh0dHA6Ly92cy1oZHMtdWstbGl2ZS5lZGdlc3VpdGUubmV0L3Bvb2xfMS9saXZlL2JiY19hbGJhL2JiY19hbGJhLmlzbWwvYmJjX2FsYmEtYXVkaW9fMj05NjAwMC12aWRlbz0xMzc0MDAwLmY0bXxYLUZvcndhcmRlZC1Gb3I9MTg4LjIyNi4xMzUuMTM0CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVM0QyBIRCAoVUspWy9DT0xPUl0KaHR0cDovL3ZzLWhkcy11ay1saXZlLmJiY2ZtdC52by5sbG53ZC5uZXQvcG9vbF85L2xpdmUvczRjcGJzL3M0Y3Bicy5pc21sL3M0Y3Bicy1hdWRpb18yPTk2MDAwLXZpZGVvPTEzNzQwMDAuZjRtfFgtRm9yd2FyZGVkLUZvcj0xODguMjI2LjEzNS4xMzQKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTG9uZG9uIExpdmVbL0NPTE9SXQpodHRwOi8vYmNvdmVsaXZlaW9zLWkuYWthbWFpaGQubmV0L2hscy9saXZlLzIxNzQzNC8zMDgzMjc5ODQwMDAxL21hc3Rlcl85MDAubTN1OAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1GaWxtNCBIRFsvQ09MT1JdCmh0dHA6Ly9wZWJibGVzMTI0LWxoLmFrYW1haWhkLm5ldC9pL2ZpbG00XzFAMTM3NzkwL21hc3Rlci5tM3U4fFgtRm9yd2FyZGVkLUZvcj04NS41Ljg3LjIxOAojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1FNCBIRFsvQ09MT1JdCmh0dHA6Ly9wZWJibGVzMTI0LWxoLmFrYW1haWhkLm5ldC9pL2U0XzFAMTM3Nzg5L21hc3Rlci5tM3U4fFgtRm9yd2FyZGVkLUZvcj04NS41Ljg3LjIxOAoKCgpAQEBAQAoKR0VOUkUsIFtDT0xPUiBncmVlbl0tLSBVSyBTcG9ydHMgVHYgLS1bL0NPTE9SXQoKI0VYVElORjotMSxTa3kgU3BvcnRzIDEKaHR0cDovL2RlbHRhdHYucHcvc3RyZWFtLnBocD9pZD0xMzI1NDcmd2lkdGg9NjQwJmhlaWdodD00ODAgJlJFRiZodHRwOi8vd3d3LmRlbHRhdHYucHcvCiNFWFRJTkY6LTEsU2t5IFNwb3J0cyAxCnJ0bXBlOi8vMTM0LjE5LjE4NS4yMDM6MTkzNS9saXZlZGdlIHBsYXlwYXRoPW1hbWFoZHNreTEgc3dmVXJsPWh0dHA6Ly9wbGF5ZXIuaGRjYXN0Lm9yZy9fLnN3ZiBsaXZlPTEgZmxhc2h2ZXI9V0lOLzE2LDAsMCwyNTciIHRpbWVvdXQ9MTUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggbGl2ZT10cnVlIHN3ZlZmeT0xIHBhZ2VVcmw9aHR0cDovL3d3dy5oZGNhc3Qub3JnL3xyZWZlcmVyPW1hbWFoZC5jb20KI0VYVElORjotMSxTa3kgU3BvcnRzIDIKaHR0cDovL2RlbHRhdHYucHcvc3RyZWFtLnBocD9pZD0xMzM4MzImd2lkdGg9NjQwJmhlaWdodD00ODAgJlJFRiZodHRwOi8vd3d3LmRlbHRhdHYucHcvCiNFWFRJTkY6LTEsU2t5IFNwb3J0cyAyCmh0dHA6Ly90Z3VuLnR2L21lbnVzL3BsYXllcnMvc3RyZWFtbGl2ZS5odG1sPzY4NDI0ICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwojRVhUSU5GOi0xLFNreSBTcG9ydHMgMgpydG1wZTovLzEzNC4xOS4xODUuMjAzOjE5MzUvbGl2ZWRnZSBwbGF5cGF0aD1tYW1haGRza3kyIHN3ZlVybD1odHRwOi8vcGxheWVyLmhkY2FzdC5vcmcvXy5zd2YgbGl2ZT0xIGZsYXNodmVyPVdJTi8xNiwwLDAsMjU3IiB0aW1lb3V0PTE1IHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGxpdmU9dHJ1ZSBzd2ZWZnk9MSBwYWdlVXJsPWh0dHA6Ly93d3cuaGRjYXN0Lm9yZy98cmVmZXJlcj1tYW1haGQuY29tIAojRVhUSU5GOi0xLFNreSBTcG9ydHMgMwpodHRwOi8vZGVsdGF0di5wdy9zdHJlYW0ucGhwP2lkPTEzMzk2MiZ3aWR0aD02NDAmaGVpZ2h0PTQ4MCAmUkVGJmh0dHA6Ly93d3cuZGVsdGF0di5wdy8KI0VYVElORjotMSxTa3kgU3BvcnRzIDMKcnRtcGU6Ly8xMzQuMTkuMTg1LjIwNDoxOTM1L2xpdmVkZ2UgcGxheXBhdGg9bWFtYWhkc2t5MyBzd2ZVcmw9aHR0cDovL3BsYXllci5oZGNhc3Qub3JnL18uc3dmIGxpdmU9MSBmbGFzaHZlcj1XSU4vMTYsMCwwLDI1NyIgdGltZW91dD0xNSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBsaXZlPXRydWUgc3dmVmZ5PTEgcGFnZVVybD1odHRwOi8vd3d3LmhkY2FzdC5vcmcvfHJlZmVyZXI9bWFtYWhkLmNvbSAKI0VYVElORjotMSxTa3kgU3BvcnRzIDQKaHR0cDovL2RlbHRhdHYucHcvc3RyZWFtLnBocD9pZD0xMzI0ODImd2lkdGg9NjQwJmhlaWdodD00ODAgJlJFRiZodHRwOi8vd3d3LmRlbHRhdHYucHcvCiNFWFRJTkY6LTEsU2t5IFNwb3J0cyA0CnJ0bXBlOi8vMTM0LjE5LjE4NS4yMDQ6MTkzNS9saXZlZGdlIHBsYXlwYXRoPW1hbWFoZHNreTQgc3dmVXJsPWh0dHA6Ly9wbGF5ZXIuaGRjYXN0Lm9yZy9fLnN3ZiBsaXZlPTEgZmxhc2h2ZXI9V0lOLzE2LDAsMCwyNTciIHRpbWVvdXQ9MTUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggbGl2ZT10cnVlIHN3ZlZmeT0xIHBhZ2VVcmw9aHR0cDovL3d3dy5oZGNhc3Qub3JnL3xyZWZlcmVyPW1hbWFoZC5jb20KI0VYVElORjotMSxTa3kgU3BvcnRzIDUKcnRtcGU6Ly8xMzQuMTkuMTg1LjIwNDoxOTM1L2xpdmVkZ2UgcGxheXBhdGg9bWFtYWhkc2t5NSBzd2ZVcmw9aHR0cDovL3BsYXllci5oZGNhc3Qub3JnL18uc3dmIGxpdmU9MSBmbGFzaHZlcj1XSU4vMTYsMCwwLDI1NyIgdGltZW91dD0xNSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBsaXZlPXRydWUgc3dmVmZ5PTEgcGFnZVVybD1odHRwOi8vd3d3LmhkY2FzdC5vcmcvfHJlZmVyZXI9bWFtYWhkLmNvbSAKI0VYVElORjotMSxTa3kgU3BvcnRzIEYxCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PXNreWYxNDg4JnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLFNreSBTcG9ydHMgRjEKcnRtcGU6Ly8xMzQuMTkuMTg1LjIwNDoxOTM1L2xpdmVkZ2UgcGxheXBhdGg9bWFtYWhkc2t5c3BvcnRzZjEgc3dmVXJsPWh0dHA6Ly9wbGF5ZXIuaGRjYXN0Lm9yZy9fLnN3ZiBsaXZlPTEgZmxhc2h2ZXI9V0lOLzE2LDAsMCwyNTciIHRpbWVvdXQ9MTUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggbGl2ZT10cnVlIHN3ZlZmeT0xIHBhZ2VVcmw9aHR0cDovL3d3dy5oZGNhc3Qub3JnL3xyZWZlcmVyPW1hbWFoZC5jb20gCiNFWFRJTkY6LTEsU2t5IFNwb3J0cyBOZXdzCnJ0bXBlOi8vMTM0LjE5LjE4NS4yMDQ6MTkzNS9saXZlZGdlIHBsYXlwYXRoPXNza3lzbiBzd2ZVcmw9aHR0cDovL3BsYXllci5oZGNhc3Qub3JnL18uc3dmIGxpdmU9MSBmbGFzaHZlcj1XSU4vMTYsMCwwLDI1NyIgdGltZW91dD0xNSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBsaXZlPXRydWUgc3dmVmZ5PTEgcGFnZVVybD1odHRwOi8vd3d3LmhkY2FzdC5vcmcvfHJlZmVyZXI9d3d3LnN0cmVhbWtpbmcub3JnCiNFWFRJTkY6LTEsU2t5IFNwb3J0cyBOZXdzCnJ0bXBlOi8vMTM0LjE5LjE4NS4yMDQ6MTkzNS9saXZlZGdlIHBsYXlwYXRoPW1hbWFoZHNreW5ld3Mgc3dmVXJsPWh0dHA6Ly9wbGF5ZXIuaGRjYXN0Lm9yZy9fLnN3ZiBsaXZlPTEgZmxhc2h2ZXI9V0lOLzE2LDAsMCwyNTciIHRpbWVvdXQ9MTUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggbGl2ZT10cnVlIHN3ZlZmeT0xIHBhZ2VVcmw9aHR0cDovL3d3dy5oZGNhc3Qub3JnL3xyZWZlcmVyPW1hbWFoZC5jb20KI0VYVElORjotMSxCVCBTcG9ydHMgMQpydG1wZTovLzEzNC4xOS4xODUuMjA0OjE5MzUvbGl2ZWRnZSBwbGF5cGF0aD1tYW1haGRidHNwb3J0MSBzd2ZVcmw9aHR0cDovL3BsYXllci5oZGNhc3Qub3JnL18uc3dmIGxpdmU9MSBmbGFzaHZlcj1XSU4vMTYsMCwwLDI1NyIgdGltZW91dD0xNSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBsaXZlPXRydWUgc3dmVmZ5PTEgcGFnZVVybD1odHRwOi8vd3d3LmhkY2FzdC5vcmcvfHJlZmVyZXI9bWFtYWhkLmNvbQojRVhUSU5GOi0xLEJUIFNwb3J0cyAxCnJ0bXA6Ly8xOTUuMTU0LjE2Mi4xNTc6ODAvbGl2ZXJlcGVhdGVyIHBsYXlwYXRoPTEzMzY0MSBzd2ZVcmw9aHR0cDovL2Nkbi5nb29kY2FzdC5jby9wbGF5ZXJzLnN3ZiBsaXZlPXRydWUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggZmxhc2h2ZXI9V0lOLzIwMTgsMCwwLDE2MCB0aW1lb3V0PTEzIHN3ZlZmeT0xIHBhZ2VVcmw9aHR0cDovL2RlbHRhdHYucHcvfHJlZmVyZXI9aHR0cDovL3Nwb3J0czR1LnR2CiNFWFRJTkY6LTEsQlQgU3BvcnRzIDIKcnRtcGU6Ly8xMzQuMTkuMTg1LjIwNDoxOTM1L2xpdmVkZ2UgcGxheXBhdGg9bWFtYWhkYnRzcG9ydDIgc3dmVXJsPWh0dHA6Ly9wbGF5ZXIuaGRjYXN0Lm9yZy9fLnN3ZiBsaXZlPTEgZmxhc2h2ZXI9V0lOLzE2LDAsMCwyNTciIHRpbWVvdXQ9MTUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggbGl2ZT10cnVlIHN3ZlZmeT0xIHBhZ2VVcmw9aHR0cDovL3d3dy5oZGNhc3Qub3JnL3xyZWZlcmVyPW1hbWFoZC5jb20KI0VYVElORjotMSxCVCBTcG9ydHMgRXVyb3BlCnJ0bXA6Ly82Mi4yMTAuMTA1LjYwOjgwL2xpdmVyZXBlYXRlciBwbGF5cGF0aD0xMzM2NzYgc3dmVXJsPWh0dHA6Ly9jZG4uZ29vZGNhc3QuY28vcGxheWVycy5zd2YgbGl2ZT10cnVlIHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGZsYXNodmVyPVdJTi8yMDE4LDAsMCwxNjAgdGltZW91dD0xMyBzd2ZWZnk9MSBwYWdlVXJsPWh0dHA6Ly9kZWx0YXR2LnB3L3xyZWZlcmVyPWh0dHA6Ly9zcG9ydHM0dS50dgojRVhUSU5GOi0xLFByZW1pZXIgU3BvcnRzCmh0dHA6Ly93d3cuaGRjYXN0Lm9yZy9lbWJlZGxpdmU0LnBocD91PXNwcmVtc3Amdnc9ODU0JnZoPTQ4MCAmUkVGJmh0dHA6Ly93d3cuaGRjYXN0Lm9yZy8KI0VYVElORjotMSxTZXRhbnRhIFNwb3J0cwpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1zZXRhbnRhYSZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxFdXJvU3BvcnQgMgpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1ldXJvc3BvcnR0MiZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxFU1BOIChVSykKcnRtcGU6Ly8xMzQuMTkuMTg1LjIwNToxOTM1L2xpdmVkZ2UgcGxheXBhdGg9bWFtYWhkdmVzcG51ayBzd2ZVcmw9aHR0cDovL3BsYXllci5oZGNhc3Qub3JnL18uc3dmIGxpdmU9MSBmbGFzaHZlcj1XSU4vMTYsMCwwLDI1NyIgdGltZW91dD0xNSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBsaXZlPXRydWUgc3dmVmZ5PTEgcGFnZVVybD1odHRwOi8vd3d3LmhkY2FzdC5vcmcvfHJlZmVyZXI9bWFtYWhkLmNvbQojRVhUSU5GOi0xLEF0IFRoZSBSYWNlcwpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1hdHI1JnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLEJveCBOYXRpb24KcnRtcGU6Ly8xMzQuMTkuMTg1LjIwNjoxOTM1L2xpdmVkZ2UgcGxheXBhdGg9bWFtYWhkYm94bmF0aW9uIHN3ZlVybD1odHRwOi8vcGxheWVyLmhkY2FzdC5vcmcvXy5zd2YgbGl2ZT0xIGZsYXNodmVyPVdJTi8xNiwwLDAsMjU3IiB0aW1lb3V0PTE1IHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGxpdmU9dHJ1ZSBzd2ZWZnk9MSBwYWdlVXJsPWh0dHA6Ly93d3cuaGRjYXN0Lm9yZy98cmVmZXJlcj1tYW1haGQuY29tCiNFWFRJTkY6LTEsQm94IE5hdGlvbgpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1ib3hvbyZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxMRlRWCnJ0bXA6Ly8zMS43LjU2LjI1NDoxOTM1L3N0cmVhbS8gcGxheXBhdGg9MFZtVTFicFNOUS5zdHJlYW0gc3dmVXJsPWh0dHA6Ly90aGVjZG4uMDRzdHJlYW0uY29tL3Avb29vbG8xLnN3ZiBwYWdlVXJsPWh0dHA6Ly93d3cuMDRzdHJlYW0uY29tL2ViYi5waHA/YWRzcD1vdGhlciBsaXZlPXRydWUgdGltZW91dD0xNQojRVhUSU5GOi0xLEV1cm9TcG9ydCBJbnQuCmh0dHA6Ly9lc2lvc2xpdmU2LWkuYWthbWFpaGQubmV0L2hscy9saXZlLzIwMjg3NC9BTF9QX0VTUDFfSU5URVJfRU5HL3BsYXlsaXN0XzE4MDAubTN1OAoKQEBAQEAKCkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gVVNBIExpdmUgVHYgLS1bL0NPTE9SXQoKI0VYVElORjowLEFCQyAyMgpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9Njg5NjkgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsQUJDIEZhbWlseQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9MzAzMDMmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxBQkMgRmFtaWx5Cmh0dHA6Ly96ZXJvY2FzdC50di9lbWJlZC5waHA/YT0xODUyJmlkPSZ3aWR0aD03MDAmaGVpZ2h0PTQ4MCZhdXRvc3RhcnQ9dHJ1ZSZzdHJlY2g9ICZSRUYmaHR0cDovL3d3dy56ZXJjYXN0LnR2LwoKI0VYVElORjowLEFCQyBOZXdzCmh0dHA6Ly9hYmNsaXZlLmFiY25ld3MuY29tL2kvYWJjX2xpdmU0QDEzNjMzMC9pbmRleF8xMjAwX2F2LWIubTN1OAoKI0VYVElORjotMSxBbmltYWwgUGxhbmV0IFVTCmh0dHA6Ly84MC44MC4xNjAuMTY4L2xpdmUvMS9saXZlLm0zdTgKCiNFWFRJTkY6MCxBJkUKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY4OTUyJmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsQU1DCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02ODk2MyZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLEJsb29tYmVyZwpodHRwOi8vY2RuMy52aWRlb3MuYmxvb21iZXJnLmNvbS9idHYvdXMvbWFzdGVyLm0zdTgKCiNFWFRJTkY6MCxDYXJ0b29uIE5ldHdvcmsKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcxNjMyJmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsQ0JTCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02OTk1NiAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxDTk4gVVNBCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02ODk2NyZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLENOTiBJbnRlcm5hdGlvbmFsCmh0dHA6Ly9lZGdlMS5ldmVyeW9uLnR2L2V0djFzYi9waGQxNi9wbGF5bGlzdC5tM3U4CgojRVhUSU5GOjAsQ1RWIEVkbW9udG9uCmh0dHA6Ly8xOTguMTc5LjMxLjE5OC9saXZlLzIwNTMuaGlnaC5zdHJlYW0vMjA1My5oaWdoLnN0cmVhbS9pbmRleC5tM3U4CgojRVhUSU5GOjAsQ1RWIExldGhicmlkZ2UKaHR0cDovLzE5OC4xNzkuMzEuMTk4L2xpdmUvMjA1OS5oaWdoLnN0cmVhbS8yMDU5LmhpZ2guc3RyZWFtL2luZGV4Lm0zdTgKCiNFWFRJTkY6MCxDVFYgWW9ya3RvbgpodHRwOi8vMTk4LjE3OS4zMS4xOTgvbGl2ZS8yMDYyLmhpZ2guc3RyZWFtLzIwNjIuaGlnaC5zdHJlYW0vaW5kZXgubTN1OAoKI0VYVElORjowLENUViBSZWdpbmEKaHR0cDovLzE5OC4xNzkuMzEuMTk4L2xpdmUvMjA1Ni5oaWdoLnN0cmVhbS8yMDU2LmhpZ2guc3RyZWFtL2luZGV4Lm0zdTgKCiNFWFRJTkY6MCxDVwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9Njg5NzAgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsQ1cgOSBDaGljYWdvCmh0dHA6Ly93Z250cmlidW5lLWxoLmFrYW1haWhkLm5ldC9pL1dHTlByaW1hcnlfMUAzMDQ2MjIvaW5kZXhfMzUwX2F2LXAubTN1OD8KCiNFWFRJTkY6MCxEaXNjb3ZlcnkgQ2hhbm5lbApodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NjkxMTAgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1EaXNjb3ZlcnkgQ2ggVVMgSERbL0NPTE9SXSAKaHR0cDovLzgwLjgwLjE2MC4xNjgvbGl2ZS84L2xpdmUubTN1OCAKCiNFWFRJTkY6LTEsRGlzY292ZXJ5IElEIFVTCmh0dHA6Ly84MC44MC4xNjAuMTY4L2xpdmUvNS9saXZlLm0zdTgKCiNFWFRJTkY6LTEsRGlzY292ZXJ5IFNjIFVTIApodHRwOi8vODAuODAuMTYwLjE2OC9saXZlLzkvbGl2ZS5tM3U4IAoKI0VYVElORjowLERpc25leSBqci9jaGFubmVsCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD0zODgwNCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxGb3ggTmV0d29yawpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzAwNDggJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsSGlzdG9yeSBDaGFubmVsCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MDYzMyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxIU04KaHR0cDovL2hzbi5tcGwubWlpc29sdXRpb25zLm5ldC9oc24tbGl2ZTAxL19kZWZpbnN0Xy9tcDQ6NDIwcDUwMGtCMzEvcGxheWxpc3QubTN1OAoKI0VYVElORjowLEhTTiAyCmh0dHA6Ly9oc24ubXBsLm1paXNvbHV0aW9ucy5uZXQvaHNuLWxpdmUwMS9fZGVmaW5zdF8vbXA0OjQ2OHA1MDBrQjMxL3BsYXlsaXN0Lm0zdTgKCiNFWFRJTkY6MCxNU05CQwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NjkwMjQgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsTVRWCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02OTAzNyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxOYXRpb25hbCBHb2VncmFwaGljCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02OTAxOCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxbQ09MT1IgZ3JlZW5dTkFTQSBUViBIRFsvQ09MT1JdCmh0dHA6Ly9uYXNhdHYtbGguYWthbWFpaGQubmV0L2kvTkFTQV8xMDFAMzE5MjcwL2luZGV4XzEwMDBfYXYtYi5tM3U4P2hkPTEwJnJlYmFzZT1vbgoKI0VYVElORjowLE5pY2tlbG9kZW9uCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MTExMiAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxPV04KaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTUzODU3ICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjotMSxQbGFuZXQgR3JlZW4gVVMgCmh0dHA6Ly84MC44MC4xNjAuMTY4L2xpdmUvNC9saXZlLm0zdTggCgojRVhUSU5GOi0xLFJUIFRvZGF5Cmh0dHA6Ly9ydC5hcGkudmlzaW9uaXAudHYvbGl2ZS9BU0hUVFAvUlRfQW1lcmljYS1NQi9wbGF5bGlzdC5tM3U4CgojRVhUSU5GOi0xLFNob3d0aW1lIFVTCmh0dHA6Ly84MC44MC4xNjAuMTY4L2xpdmUvNy9saXZlLm0zdTgKCiNFWFRJTkY6MCxTcGlrZSBUdgpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NTI0NzkgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsc3lmeQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9Njg5NjYgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsc3lmeQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzEyMDYgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsc3lmeQpodHRwOi8vMzcuNDguODMuMTMxOjE5MzUvbGl2ZS9zeWZ5NzcvcGxheWxpc3QubTN1OAoKI0VYVElORjowLFRCUwpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NTMxNjEgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsVEYxCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MDQ2OCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6LTEsVExDIFVTIApodHRwOi8vODAuODAuMTYwLjE2OC9saXZlLzIvbGl2ZS5tM3U4CgojRVhUSU5GOi0xLFROVApodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NjkwMjAmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6LTEsVHJhdmVsIENoLlVTIApodHRwOi8vODAuODAuMTYwLjE2OC9saXZlLzMvbGl2ZS5tM3U4IAoKI0VYVElORjotMSxUcmF2ZWwgQ2guVVMgCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD02OTAxOSZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjotMSxUViBMYW5kCmh0dHA6Ly8xODQuMTczLjg1LjkxOjE5MzUvZWRnZS9fZGVmaW5zdF8vN3l4aXJyNDA0Nm5rNWNhL3BsYXlsaXN0Lm0zdTg/d293emFzZXNzaW9uaWQ9MTQxOTkwODQwMQoKI0VYVElORjowLFVTQSBOZXR3b3JrCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD0zODc2OCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6MCxVU0EgTmV0d29yawpodHRwOi8vMzcuNDguODMuMTMxOjE5MzUvbGl2ZS91c2E3Ny9wbGF5bGlzdC5tM3U4P3dvd3phc2Vzc2lvbmlkPTI0NDE2MDI5CgojRVhUSU5GOjAsVkgxCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD01Mjk4OCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCkBAQEBACkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gVVNBIFNwb3J0cyAtLVsvQ09MT1JdCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1OQkNTTiBIRFsvQ09MT1JdIFtDT0xPUiB5ZWxsb3ddIDEwODBwIE5PIFZQTiBORUVERUQgWy9DT0xPUl0KaHR0cDovL3R2ZW5iY3NuLWkuQWthbWFpaGQubmV0L2hscy9saXZlLzIxODIzNS9uYmNzbngvNDI5NmsvcHJvZy5tM3U4fFgtRm9yd2FyZGVkLUZvcj02Ni4xNzEuMjI4LjEwMgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1OQkNTTiBIRFsvQ09MT1JdIFtDT0xPUiB5ZWxsb3ddIDcyMHAgTk8gVlBOIE5FRURFRCBbL0NPTE9SXQpodHRwOi8vdHZlbmJjc24taS5Ba2FtYWloZC5uZXQvaGxzL2xpdmUvMjE4MjM1L25iY3NueC8yNTk2ay9wcm9nLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTY2LjE3MS4yMjguMTAyCiNFWFRJTkY6LTEsTkJDU04gU0RbQ09MT1IgeWVsbG93XSBOTyBWUE4gTkVFREVEIFsvQ09MT1JdCmh0dHA6Ly90dmVuYmNzbi1pLkFrYW1haWhkLm5ldC9obHMvbGl2ZS8yMTgyMzUvbmJjc254LzE4OTZrL3Byb2cubTN1OHxYLUZvcndhcmRlZC1Gb3I9NjYuMTcxLjIyOC4xMDIKCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUdvbGYgQ2hhbm5lbCAxMDgwIEhEIFsvQ09MT1JdIChFTkcpKE5PIFZQTiBSRVFVSVJFRCkKaHR0cDovL3R2ZWdvbGYtaS5Ba2FtYWloZC5uZXQvaGxzL2xpdmUvMjE4MjI1L2dvbGZ4LzQyOTZrL3Byb2cubTN1OHxYLUZvcndhcmRlZC1Gb3I9NjYuMTcxLjIyOC4xMDIKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dR29sZiBDaGFubmVsIDcyMCBIRCBbL0NPTE9SXSAoRU5HKShOTyBWUE4gUkVRVUlSRUQpCmh0dHA6Ly90dmVnb2xmLWkuQWthbWFpaGQubmV0L2hscy9saXZlLzIxODIyNS9nb2xmeC8yNTk2ay9wcm9nLm0zdTh8WC1Gb3J3YXJkZWQtRm9yPTY2LjE3MS4yMjguMTAyCiNFWFRJTkY6LTEsR29sZiBDaGFubmVsIFNEIChFTkcpKE5PIFZQTiBSRVFVSVJFRCkKaHR0cDovL3R2ZWdvbGYtaS5Ba2FtYWloZC5uZXQvaGxzL2xpdmUvMjE4MjI1L2dvbGZ4LzE4OTZrL3Byb2cubTN1OHxYLUZvcndhcmRlZC1Gb3I9NjYuMTcxLjIyOC4xMDIKCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUZveCBTcG9ydHMgMSBHbyBVU0EgNzIwSERbL0NPTE9SXQpodHRwOi8vNTQuMTc3LjE5NS44Mi9zZXJ2ZXIvcGxheS9mczFjdGcvMzk2NDAwMC9wcm9nLm0zdTg/YW52PTE0Mjc0MTUyMTk4OTZ8WC1Gb3J3YXJkZWQtRm9yPTY2LjE3MS4yMjguMTAyCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUZveCBTcG9ydHMgMiBHbyBVU0EgNzIwSERbL0NPTE9SXQpodHRwOi8vNTQuMTc3LjE5NS44Mi9zZXJ2ZXIvcGxheS9mczJjdGcvMzk2NDAwMC9wcm9nLm0zdTg/YW52PTE0Mjc0MTUyMTk4OTZ8WC1Gb3J3YXJkZWQtRm9yPTY2LjE3MS4yMjguMTAyCgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Gb3ggU3BvcnRzIDEgVVNBIDcyMEhEWy9DT0xPUl0KaHR0cDovL3RoZXRoYW9oZC5uZXQvdi9mb3hzcG9ydDEucGhwICZSRUYmaHR0cDovL3RoZXRoYW9oZC5uZXQvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUZveCBTcG9ydHMgMiBVU0EgNzIwSERbL0NPTE9SXQpodHRwOi8vdGhldGhhb2hkLm5ldC92L2ZveHNwb3J0Mi5waHAgJlJFRiZodHRwOi8vdGhldGhhb2hkLm5ldC8KCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJpZyBUZW4gTmV0d29yayA3MjBIRFsvQ09MT1JdCmh0dHA6Ly9iaWd0ZW4yNDcuY2RuYWsuYmlndGVuaGQubmV1bGlvbi5jb20vbmxkcy9idG4yZ28vYnRubmV0d29yay9hcy9saXZlL2J0bm5ldHdvcmtfaGRfMzAwMC5tM3U4CgojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1ORVNOIDcyMEhEWy9DT0xPUl0KcnRtcDovLzIwOS4xMzMuMjA4LjE3OC9hcHAveHJpdm83NnMtY2hhbm5lbCBsaXZlPXRydWUgc3dmVmZ5PXRydWUgcGFnZVVybD1odHRwOi8vd3d3Lm15YmVzdHN0cmVhbXMuY29tL3AvbXliZXN0aGQ0Lmh0bWwgdGltZW91dD0xNQoKI0VYVElORjotMSxUU04gMQpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT10c25uMSZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxUU04gMgpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT10c25uMiZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxGb3ggU3BvcnRzIDEKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9Zm94c3AxJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0LnR2LwojRVhUSU5GOi0xLEZveCBTcG9ydHMgMgpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1mb3hzcDImdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QudHYvCiNFWFRJTkY6LTEsRVNQTiAyCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWVzbnAyMiZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC50di8KI0VYVElORjotMSxNTEIgTkVUV09SSyBMaXZlCnJ0bXA6Ly8xMDkuMTIzLjcwLjM4OjgwL2xpdmUgcGxheXBhdGg9bWxieHggc3dmVXJsPWh0dHA6Ly9wLmp3cGNkbi5jb20vNi8xMi9qd3BsYXllci5mbGFzaC5zd2YgbGl2ZT0xIHBhZ2VVcmw9aHR0cDovL3JleXR2LmNvL2VtYmVkby5waHA/bGl2ZT1tbGJ4eCZ2dz02MjAmdmg9NDkwIHRva2VuPSVacmV5KG5LYUAjWiB0aW1lb3V0PTEwCgojRVhUSU5GOjAsRVNQTgpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NDgwNTEgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOi0xLEVTUE4gSEQgVVMgCmh0dHA6Ly84MC44MC4xNjAuMTY4L2xpdmUvNi9saXZlLm0zdTgKCiNFWFRJTkY6MCxHb2xmIENoYW5uZWwKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY5MDI2ICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLE5CQSBUVgpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzE1NjIgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsTkJBIFRWIE9ubGluZQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NjkzMTAgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgojRVhUSU5GOjAsTkJDU04KaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTY0MjMyICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwoKI0VYVElORjowLE5GTCBOZXR3b3JrCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MDI5NSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KCiNFWFRJTkY6LTEsIFBhYyBOYXRpb25hbCAxMDgwIEhECmh0dHA6Ly94cnhzLm5ldC92aWRlby9saXZlLXAxMm5ldHctNDcyOC5tM3U4P1ZkP3UjYnQhMjUKIAojRVhUSU5GOi0xLCBQYWMgQXJpem9uYSAxMDgwIEhECmh0dHA6Ly94cnhzLm5ldC92aWRlby9saXZlLXAxMmFyaXotNDcyOC5tM3U4P1ZkP3UjYnQhMjUKIAojRVhUSU5GOi0xLCBQYWMgQmF5IEFyZWEgNzIwIEhECmh0dHA6Ly94cnhzLm5ldC92aWRlby9saXZlLXAxMmJheWEtMjMyOC5tM3U4P1ZkP3UjYnQhMjUKIAojRVhUSU5GOi0xLCBQYWMgTG9zIEFuZ2VsZXMgMTA4MCBIRApodHRwOi8veHJ4cy5uZXQvdmlkZW8vbGl2ZS1wMTJsb3NhLTQ3MjgubTN1OD9WZD91I2J0ITI1CiAKI0VYVElORjotMSwgUGFjIE1vdW50YWluIDEwODAgSEQKaHR0cDovL3hyeHMubmV0L3ZpZGVvL2xpdmUtcDEybW91bi00NzI4Lm0zdTg/VmQ/dSNidCEyNQogCiNFWFRJTkY6LTEsUEFDLTEyIE5ldC4gKE5hdGlvbmFsKQpodHRwOi8veHJ4cy5uZXQvdmlkZW8vbGl2ZS1wMTJuZXR3LTQ3MjgubTN1OD9WZD91I2J0ITI1CiAKI0VYVElORjotMSxQQUMtMTIgTmV0LiAoQXJpem9uYSkKaHR0cDovL3hyeHMubmV0L3ZpZGVvL2xpdmUtcDEyYXJpei00NzI4Lm0zdTg/VmQ/dSNidCEyNQogCiNFWFRJTkY6LTEsUEFDLTEyIE5ldC4gKEJheSBBcmVhKQpodHRwOi8veHJ4cy5uZXQvdmlkZW8vbGl2ZS1wMTJiYXlhLTQ3MjgubTN1OD9WZD91I2J0ITI1CiAKI0VYVElORjotMSxQQUMtMTIgTmV0LiAoTG9zIEFuZ2VsZXMpCmh0dHA6Ly94cnhzLm5ldC92aWRlby9saXZlLXAxMmxvc2EtNDcyOC5tM3U4P1ZkP3UjYnQhMjUKIAojRVhUSU5GOi0xLFBBQy0xMiBOZXQuIChNb3V0YWluKQpodHRwOi8veHJ4cy5uZXQvdmlkZW8vbGl2ZS1wMTJtb3VuLTQ3MjgubTN1OD9WZD91I2J0ITI1CiAKI0VYVElORjotMSxQQUMtMTIgTmV0LiAoT3JlZ29uKQpodHRwOi8veHJ4cy5uZXQvdmlkZW8vbGl2ZS1wMTJvcmVnLTQ3MjgubTN1OD9WZD91I2J0ITI1CiAKI0VYVElORjotMSxQQUMtMTIgTmV0LiAoV2FzaGluZ3RvbikKaHR0cDovL3hyeHMubmV0L3ZpZGVvL2xpdmUtcDEyd2FzaC00NzI4Lm0zdTg/VmQ/dSNidCEyNQoKI0VYVElORjotMSxXV0UgTmV0d29yawpodHRwOi8vMzcuNDguODMuMTMxOjE5MzUvbGl2ZS93d2VlL3BsYXlsaXN0Lm0zdTg/d293emFzZXNzaW9uaWQ9MjA1Njg5NTY1MwoKQEBAQEAKCkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gQ0FOQURBIFNwb3J0cyAmIFRWIC0tWy9DT0xPUl0KCiNFWFRJTkY6LTEsQ0hDSCBIYW1pbHRvbiBIRApydG1wOi8vNTQuODUuMTk3LjIxOjE5MzUvbGl2ZS9uZXdzIGxpdmU9MSB0aW1lb3V0PTE1CiNFWFRJTkY6LTEsR2xvYmFsIFRWIFZhbmNvdXZlciBIRApodHRwOi8vbGluay50aGVwbGF0Zm9ybS5jb20vcy9kdGpzRUMvRXFCUEdZTFk2ZkV4P2ZlZWQ9REVWJTIwTGl2ZSUyMFN0cmVhbSUyMEZlZWQKI0VYVElORjotMSxHbG9iYWwgVFYgVG9yb250byBIRApodHRwOi8vbGluay50aGVwbGF0Zm9ybS5jb20vcy9kdGpzRUMvaGRTSDNpenR6X2pfP2ZlZWQ9REVWJTIwTGl2ZSUyMFN0cmVhbSUyMEZlZWQKI0VYVElORjotMSxHbG9iYWwgVFYgSGFsaWZheCBIRApodHRwOi8vbGluay50aGVwbGF0Zm9ybS5jb20vcy9kdGpzRUMvNzdsMUtBX0dfNVAxP2ZlZWQ9REVWJTIwTGl2ZSUyMFN0cmVhbSUyMEZlZWQKI0VYVElORjotMSxDQkMgTmV3c3dvcmxkCnJ0bXA6Ly9kLmNkbi5uZXdzY2hhdC50di9lZGdlIHBsYXlwYXRoPWNhbmFkYXNfbGl2ZSBzd2ZVcmw9aHR0cDovL21zbmJjbGl2ZS5ldS9wbGF5ZXIuc3dmIGxpdmU9MSBsaXZlPXRydWUgcGFnZVVybD1odHRwOi8vd3d3LmxpdmVuZXdzY2hhdC5ldS9jYW5hZGEvCiNFWFRJTkY6LTEsQ0JDIE5ld3MgQ2hhbm5lbApydG1wOi8vYy5jZG4ubmV3c2NoYXQudHYvZWRnZSBwbGF5cGF0aD1jYmNfbGl2ZSBzd2ZVcmw9aHR0cDovL25ld3NjaGF0LnR2L3BsYXllci5zd2YgbGl2ZT0xIGxpdmU9dHJ1ZSBwYWdlVXJsPWh0dHA6Ly93d3cubGl2ZW5ld3NjaGF0LmV1L2NhbmFkYS8KI0VYVElORjotMSxDVFYgTmV3cyAoTkVXKQpodHRwOi8vY2FwaS45YzltZWRpYS5jb20vZGVzdGluYXRpb25zL2N0dm5ld3Nfd2ViL3BsYXRmb3Jtcy9kZXNrdG9wL2NvbnRlbnRzLzYwODk0MC9jb250ZW50cGFja2FnZXMvNjc4NTc1L3N0YWNrcy8xNTY2MDUzL21hbmlmZXN0LmY0bQojRVhUSU5GOi0xLENQIE5ld3MgbGl2ZSAxIDcyMCBIRApodHRwOi8vYW1zLWxwMTAuOWM5bWVkaWEuY29tL2hkcy1saXZlL2xpdmVwa2dyL19kZWZpbnN0Xy9saXZlTmV3cy9DUDI0TmV3czE4LmY0bQojRVhUSU5GOi0xLENQMjQgTmV3cyBMaXZlIDIgNzIwSEQKaHR0cDovL2Ftcy1scDcuOWM5bWVkaWEuY29tL2hkcy1saXZlL2xpdmVwa2dyL19kZWZpbnN0Xy9saXZlTmV3cy9DUDI0TmV3czI4LmY0bQojRVhUSU5GOi0xLEhpc3RvcnkgKENhbmFkYSkgSEQKaHR0cDovL2xpbmsudGhlcGxhdGZvcm0uY29tL3MvZHRqc0VDL2NoamRZSnhLYjQ0Vj9tYW5pZmVzdD1tM3UmZmVlZD1IaXN0b3J5JTIwTGl2ZSUyMFN0cmVhbSUyMEZlZWQKI0VYVElORjotMSxUU0MgTGl2ZSBIRApodHRwOi8vdHNjc3RyZWFtaW5nLWxoLmFrYW1haWhkLm5ldC9pL1RTQ0xpdmVTdHJlYW1pbmdfMUA5MTAzMS9pbmRleF8zX2F2LXAubTN1OAojRVhUSU5GOi0xLEV1cm9TcG9ydCBIRCAoIEZSRU5DSCApCmh0dHA6Ly9lc2lvc2xpdmU2LWkuYWthbWFpaGQubmV0L2hscy9saXZlLzIwMjg5Mi9BTF9QX0VTUDFfRlJfRlJBL3BsYXlsaXN0Lm0zdTggCiNFWFRJTkY6LTEsRm94IFNwb3J0cyBIRApodHRwOi8vZm94c3BvcnRzaGRobHMtbGguYWthbWFpaGQubmV0L2kvZnNuZXdzaGxzXzBAMTM2NDI3L2luZGV4XzIxMjhfYXYtcC5tM3U4CiNFWFRJTkY6LTEsU3BvcnRzbmV0IE9uZQpydG1wOi8vMTA5LjEyMy43MC4zODo4MC9saXZlIHBsYXlwYXRoPXNwb3J0c25ldHcgc3dmVXJsPWh0dHA6Ly9wLmp3cGNkbi5jb20vNi8xMi9qd3BsYXllci5mbGFzaC5zd2YgbGl2ZT0xIHBhZ2VVcmw9aHR0cDovL3JleXR2LmNvL2VtYmVkby5waHA/bGl2ZT1zcG9ydHNuZXR3JnZ3PTYyMCZ2aD00OTAgdG9rZW49JVpyZXkobkthQCNaIHRpbWVvdXQ9MTAKI0VYVElORjotMSxTcG9ydHNuZXQgT250YXJpbwpydG1wOi8vMzEuMjIwLjAuMTk1OjgwL2xpdmUgcGxheXBhdGg9c25vIHN3ZlVybD1odHRwOi8vcC5qd3BjZG4uY29tLzYvMTIvandwbGF5ZXIuZmxhc2guc3dmIGxpdmU9MSBwYWdlVXJsPWh0dHA6Ly9yZXl0di5jby9lbWJlZG8ucGhwP2xpdmU9c25vJnZ3PTYyMCZ2aD00OTAgdG9rZW49JVpyZXkobkthQCNaIHRpbWVvdXQ9MTAKI0VYVElORjotMSxTcG9ydHNuZXQgV29ybGQKcnRtcDovLzE3OC4xOC4zMS41Mzo0NDMvbGl2ZXJlcGVhdGVyIHBsYXlwYXRoPTE5MTMwNCBzd2ZVcmw9aHR0cDovL2Jlcm5hcmRvdHYuY2x1Yi9mdWNraW5nY29weS5zd2YgbGl2ZT0xIHBhZ2VVcmw9aHR0cDovL2JpZ2dlc3RwbGF5ZXIubWUvc3RyZWFtY3IucGhwP2lkPTE5MTMwNCZ3aWR0aD02MjAmaGVpZ2h0PTQ5MCB0b2tlbj3igKoj4oCOYXRk4oCsJSMkWkggdGltZW91dD0xMAojRVhUSU5GOi0xLDM2MCBOb3J0aCAoQUxBU0tBKQpodHRwOi8vc3RhdGUuYWsudHZ3bWVkaWEubmV0OjE5MzUva3Rvby1saXZlL19kZWZpbnN0Xy8zNjBub3J0aC9wbGF5bGlzdC5tM3U4CiNFWFRJTkY6LTEsU3BvcnRzbmV0IDM2MCA3MjAgSEQKaHR0cDovL25sZHMxODcuY2RuYWsubmV1bGlvbi5jb20vbmxkcy9zcG9ydHNuZXRub3cvc25fMzYwL2FzL2xpdmUvc25fMzYwX2hkX2lwYWQubTN1OAojRVhUSU5GOi0xLFRTTiAxCnJ0bXA6Ly85My4xNTguMjE3LjIwMjo4MC9saXZlIHBsYXlwYXRoPXR4MSBzd2ZVcmw9aHR0cDovL3AuandwY2RuLmNvbS82LzEyL2p3cGxheWVyLmZsYXNoLnN3ZiBsaXZlPTEgbGl2ZT10cnVlIHBhZ2VVcmw9aHR0cDovL3JleXR2LmNvL2VtYmVkby5waHA/bGl2ZT10eDEmdnc9NjIwJnZoPTQ5MCB0b2tlbj0lWnJleShuS2FAI1ogdGltZW91dD0xMAojRVhUSU5GOi0xLFRTTiAyCnJ0bXA6Ly8xNzguMTguMzEuNTU6NDQzL2xpdmVyZXBlYXRlciBwbGF5cGF0aD0xOTE3ODQgc3dmVXJsPWh0dHA6Ly9iaWdnZXN0cGxheWVyLmNhY2hlZmx5Lm5ldC9nb2Z1Y2t5b3Vyc2VsZi5zd2YgbGl2ZT0xIGxpdmU9dHJ1ZSBwYWdlVXJsPWh0dHA6Ly9iaWdnZXN0cGxheWVyLm1lL3N0cmVhbWNyLnBocD9pZD0xOTE3ODQmd2lkdGg9NjIwJmhlaWdodD00OTAgdG9rZW494oCqI+KAjmF0ZOKArCUjJFpIIHRpbWVvdXQ9MTAKI0VYVElORjotMSxDSUNDIENUViBZb3JrdG9uCmh0dHA6Ly8xOTguMTc5LjMxLjE5OC9saXZlLzIwNTMuaGlnaC5zdHJlYW0vMjA1My5oaWdoLnN0cmVhbS9pbmRleC5tM3U4CiNFWFRJTkY6LTEsQ0ZSTiBDVFYgRWRtb250b24KaHR0cDovLzE5OC4xNzkuMzEuMTk4L2xpdmUvMjA1Ni5oaWdoLnN0cmVhbS8yMDU2LmhpZ2guc3RyZWFtL2luZGV4Lm0zdTgKI0VYVElORjotMSxDS0NLIENUViBSZWdpbmEKaHR0cDovLzE5OC4xNzkuMzEuMTk4L2xpdmUvMjA1OS5oaWdoLnN0cmVhbS8yMDU5LmhpZ2guc3RyZWFtL2luZGV4Lm0zdTgKI0VYVElORjotMSxDRkNOLTUgQ1RWIExldGhicmlkZ2UKaHR0cDovLzE5OC4xNzkuMzEuMTk4L2xpdmUvMjA2Mi5oaWdoLnN0cmVhbS8yMDYyLmhpZ2guc3RyZWFtL2luZGV4Lm0zdTgKI0VYVElORjotMSxUaGUgU2hvcHBpbmcgQ2hhbm5lbCBIRApodHRwOi8vdHNjc3RyZWFtaW5nLWxoLmFrYW1haWhkLm5ldC9pL1RTQ0xpdmVTdHJlYW1pbmdfMUA5MTAzMS9pbmRleF8zX2F2LXAubTN1OAojRVhUSU5GOi0xLFRoZSBTaG9wcGluZyBDaGFubmVsIEhECmh0dHA6Ly90c2NzdHJlYW1pbmctbGguYWthbWFpaGQubmV0L2kvVFNDTGl2ZVN0cmVhbWluZ18xQDkxMDMxL2luZGV4XzNfYXYtYi5tM3U4CiNFWFRJTkY6LTEsQ1BBQyBIRApodHRwOi8vYmNsaXZldW5pdi1saC5ha2FtYWloZC5uZXQvaS9jcGFjMWVuZzIwMTRfMDFAMTE5MzMwL2luZGV4XzIwMDBfYXYtcC5tM3U4CiNFWFRJTkY6LTEsQ1BBQyBIRApodHRwOi8vYmNsaXZldW5pdi1saC5ha2FtYWloZC5uZXQvaS9jcGFjMWZscjIwMTRfMDFANTEyMzAvaW5kZXhfMjAwMF9hdi1wLm0zdTgKI0VYVElORjotMSxXZWF0aGVyIE5ldHdvcmsgSEQgKGZpeGVkKQpodHRwOi8vYmNvdmVsaXZlaW9zLWkuYWthbWFpaGQubmV0L2hscy9saXZlLzIwNzczNy8xOTQyMjAzNDU1MDAxL25hdC9tYXN0ZXJfTGF5ZXI1Lm0zdTggCiNFWFRJTkY6LTEsQ0JDIE5ld3MKcnRtcDovL2EuY2RuLm5ld3NjaGF0LnR2L2VkZ2UgcGxheXBhdGg9Y2JjX2xpdmUgc3dmVXJsPWh0dHA6Ly9tc25iY2xpdmUuZXUvcGxheWVyLnN3ZiBwYWdlVXJsPWh0dHA6Ly93d3cubGl2ZW5ld3NjaGF0LmV1L2NhbmFkYS8gbGl2ZT0xIHRpbWVvdXQ9MTUKI0VYVElORjotMSxBUlRFIChGcmVuY2gpCmh0dHA6Ly9mcmxpdmUuYXJ0ZXN0cmFzLmNzaGxzLmxsZG5zLm5ldC9hcnRlc3RyYXMvY29udHJpYi9mcmxpdmUvZnJsaXZlXzkyNS5tM3U4CiNFWFRJTkY6LTEsTENOIE5ld3MgKEZyZW5jaCkKcnRtcDovL2NwMzk0MTQubGl2ZS5lZGdlZmNzLm5ldC9saXZlLyBwbGF5cGF0aD1sY24yQDk3NTQgc3dmVXJsPWh0dHA6Ly93d3cuY2VudHJhbHR2LmZyL2p3cGxheWVyL2p3cGxheWVyLmZsYXNoLnN3ZiBsaXZlPTEgcGFnZVVybD1odHRwOi8vd3d3LmNlbnRyYWx0di5mci9jYW5hZGEtdGVsZXZpc2lvbi9sY24tbmV3cyB0aW1lb3V0PTE1CiNFWFRJTkY6LTEsQXJnZW50IChGcmVuY2gpCnJ0bXA6Ly9jcDM5NDE0LmxpdmUuZWRnZWZjcy5uZXQ6NDQzL2xpdmUgcGxheXBhdGg9YXJnZW50QDk3NTEgc3dmVXJsPWh0dHA6Ly9mcGRvd25sb2FkLmFkb2JlLmNvbS9zdHJvYmUvRmxhc2hNZWRpYVBsYXliYWNrXzEwMS5zd2YvW1tEWU5BTUlDXV0vMSBsaXZlPTEgcGFnZVVybD1odHRwOi8vdGVsZS1lbi1kaXJlY3QuYmxvZ3Nwb3QuY29tLzIwMTQvMDUvYXJnZW50LXR2LWNhbmFkYS1lbi1kaXJlY3QuaHRtbCB0aW1lb3V0PTE1CiNFWFRJTkY6LTEsQ1RWIE5ld3MgTGl2ZSBIRApodHRwOi8vYW1zLWxwMTAuOWM5bWVkaWEuY29tL2hscy1saXZlL2xpdmVwa2dyL19kZWZpbnN0Xy9saXZlTmV3cy9OZXdzMTgubTN1OAojRVhUSU5GOi0xLENUViBOZXdzIExpdmUgSEQKaHR0cDovL2Ftcy1scDcuOWM5bWVkaWEuY29tL2hscy1saXZlL2xpdmVwa2dyL19kZWZpbnN0Xy9saXZlTmV3cy9OZXdzMjgubTN1OAoKCkBAQEBACkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gTmV3cyAtLVsvQ09MT1JdCiNFWFRJTkY6LTEsU2t5IE5ld3MKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9c2t5bmV3cyZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC5uZXQvCiNFWFRJTkY6LTEsQ05CQyBOZXdzCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWNuYmMmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QubmV0LwojRVhUSU5GOi0xLENOTgpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1jbjk5JnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0Lm5ldC8KI0VYVElORjotMSxCQkMgTmV3cwpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1iYmNuZXdzJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0Lm5ldC8KI0VYVElORjotMSxCbG9vbWJlcmcKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9Ymxvb21iZXJnJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0Lm5ldC8KI0VYVElORjotMSxGb3ggTmV3cwpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1mb3huZWVzJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0Lm5ldC8KI0VYVElORjotMSxDTk4gRXVyb3BlCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWNuOTkmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QubmV0LwoKCkBAQEBACkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gS0lEUyAtLVsvQ09MT1JdCiNFWFRJTkY6LTEsQ2FydG9vbiBOZXR3b3JrCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWNuODg4JnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0Lm5ldC8KI0VYVElORjotMSxEaXNuZXkgQ2hhbm5lbApodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1kaXNuZXkmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QubmV0LwojRVhUSU5GOi0xLERpc25leSBKcgpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1kaXNuZXlqciZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC5uZXQvCiNFWFRJTkY6LTEsTmlja2Vsb2Rlb24KaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9bmljazY2NiZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC5uZXQvCiNFWFRJTkY6LTEsTmlja2Vsb2Rlb24KaHR0cDovL3plcm9jYXN0LnR2L2VtYmVkLnBocD9hPTE0JmlkPSZ3aWR0aD01ODAmaGVpZ2h0PTQwMCZhdXRvc3RhcnQ9dHJ1ZSZzdHJlY2g9ICZSRUYmaHR0cDovL3plcm9jYXN0LnR2LwojRVhUSU5GOi0xLE5pY2tlbG9kZW9uCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTYyMCZoZWlnaHQ9NDcwJmlkPWtpY25pY2smYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vdXNhY2hhbm5lbHMudHYvbmljay5waHAKCkBAQEBACkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gRE9DVU1FTlRBUklFUyAtLVsvQ09MT1JdCiNFWFRJTkY6LTEsQW5pbWFsIFBsYW5ldApodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1hbmltYWwmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QubmV0LwojRVhUSU5GOi0xLERpc2NvdmVyeSBDaGFubmVsCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWRpc2NvdmVyeSZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC5uZXQvCiNFWFRJTkY6LTEsRGlzY292ZXJ5IElECmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWRpc2NvdmVyeWkmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QubmV0LwojRVhUSU5GOi0xLERpc2NvdmVyeSBTY2llbmNlCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWRpc2NvdmVyeXMmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QubmV0LwojRVhUSU5GOi0xLE5hdGlvbmFsIEdlb2dyYXBoaWMgQ2hhbm5lbApodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1uYXRnZW8mdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QubmV0LwojRVhUSU5GOi0xLE5hdCBHZW8gV2lsZApodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1uYXRnZW9oZCZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC5uZXQvCgpAQEBAQApHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIE11c2ljIC0tWy9DT0xPUl0KCiNFWFRJTkY6LTEsSGVhcnQKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9aGVhcnQmdnc9NjQwJnZoPTQ1MCAmUkVGJmh0dHA6Ly93d3cuZmluZWNhc3QubmV0LwojRVhUSU5GOi0xLEZsYXZhCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PWZsYXZhJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0Lm5ldC8KI0VYVElORjotMSxNYWdpYwpodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT1tYWdpYyZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC5uZXQvCiNFWFRJTkY6LTEsTVRWIENsYXNzaWMKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9bXR2Y2xhc3NpYyZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC5uZXQvCiNFWFRJTkY6LTEsTVRWIEhpdHMKaHR0cDovL3d3dy5maW5lY2FzdC50di9lbWJlZDQucGhwP3U9bXR2aGl0cyZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC5uZXQvCiNFWFRJTkY6LTEsTVRWIE11c2ljCmh0dHA6Ly93d3cuZmluZWNhc3QudHYvZW1iZWQ0LnBocD91PW10dm11c2ljJnZ3PTY0MCZ2aD00NTAgJlJFRiZodHRwOi8vd3d3LmZpbmVjYXN0Lm5ldC8KI0VYVElORjotMSxWYXVsdApodHRwOi8vd3d3LmZpbmVjYXN0LnR2L2VtYmVkNC5waHA/dT10aGV2YXVsdCZ2dz02NDAmdmg9NDUwICZSRUYmaHR0cDovL3d3dy5maW5lY2FzdC5uZXQvCgpAQEBAQAoKR0VOUkUsIFtDT0xPUiBncmVlbl0tLSBPdGhlciBMaXZlIFNwb3J0cyAtLVsvQ09MT1JdCgojRVhUSU5GOi0xLERpZ2kgU3BvcnQgMQpydG1wOi8vMTk1LjE1NC4xNjIuMTU5OjgwL2xpdmVyZXBlYXRlciBwbGF5cGF0aD0xMjg3NDYgc3dmVXJsPWh0dHA6Ly9jZG4uZ29vZGNhc3QuY28vcGxheWVycy5zd2YgbGl2ZT10cnVlIHBhZ2VVcmw9aHR0cDovL2RlbHRhdHYucHcvIHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIHRpbWVvdXQ9MTUKI0VYVElORjotMSxESUdJIFNQT1JUIDEKcnRtcDovLzE5NS4xNTQuMTYyLjE1OTo4MC9saXZlcmVwZWF0ZXIgcGxheXBhdGg9MTI4NzQ2IHN3ZlVybD1odHRwOi8vY2RuLmdvb2RjYXN0LmNvL3BsYXllcnMuc3dmIGxpdmU9dHJ1ZSB0b2tlbj1GbzVfbjB3P1UuckE2bDMtNzB3NDdjaCBmbGFzaHZlcj1XSU4vMjAxOCwwLDAsMTYwIHRpbWVvdXQ9MTMgc3dmVmZ5PTEgIHBhZ2VVcmw9aHR0cDovL2RlbHRhdHYucHcvCiNFWFRJTkY6LTEsRElHSSBTUE9SVCAyCnJ0bXA6Ly8xOTUuMTU0LjE2Mi4xNTk6ODAvbGl2ZXJlcGVhdGVyIHBsYXlwYXRoPTEyODc0NyBzd2ZVcmw9aHR0cDovL2Nkbi5nb29kY2FzdC5jby9wbGF5ZXJzLnN3ZiBsaXZlPXRydWUgdG9rZW49Rm81X24wdz9VLnJBNmwzLTcwdzQ3Y2ggZmxhc2h2ZXI9V0lOLzIwMTgsMCwwLDE2MCB0aW1lb3V0PTEzIHN3ZlZmeT0xICBwYWdlVXJsPWh0dHA6Ly9kZWx0YXR2LnB3LwojRVhUSU5GOi0xLERJR0kgU1BPUlQgMwpydG1wOi8vMTk1LjE1NC4xNjIuMTU5OjgwL2xpdmVyZXBlYXRlciBwbGF5cGF0aD0xMjg3NDggc3dmVXJsPWh0dHA6Ly9jZG4uZ29vZGNhc3QuY28vcGxheWVycy5zd2YgbGl2ZT10cnVlIHRva2VuPUZvNV9uMHc/VS5yQTZsMy03MHc0N2NoIGZsYXNodmVyPVdJTi8yMDE4LDAsMCwxNjAgdGltZW91dD0xMyBzd2ZWZnk9MSAgcGFnZVVybD1odHRwOi8vZGVsdGF0di5wdy8KCkBAQEBACkdFTlJFLCBbQ09MT1IgZ3JlZW5dLS0gMjQvNyBTdHJlYW1zIC0tWy9DT0xPUl0KCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUFkdmVudHVyZSBUaW1lIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9hZHZlbnR1cmUtdGltZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUFsd2F5cyBTdW5ueSBpbiBQaGlsYWRlbHBoaWEgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2Fsd2F5cy1zdW5ueS1pbi1waGlsYWRlbHBoaWEgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1BbWVyaWNhbiBEYWQgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2FtZXJpY2FuLWRhZCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUFyY2hlciBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvYXJjaGVyICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQXF1YSBUZWVuIEh1bmdlciBGb3JjZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvYXF1YS10ZWVuLWh1bmdlci1mb3JjZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJldHRlciBDYWxsIFNhdWwgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2JldHRlci1jYWxsLXNhdWwgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Cb2JzIEJ1cmdlcnMgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2JvYnMtYnVyZ2VycyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJyZWFraW5nIEJhZCBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvYnJlYWtpbmctYmFkICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQnJpY2tsZWJlcnJ5IEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9icmlja2xlYmVycnkgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1HcmVlbmRhbGUgQ29sbGVnZSAoIENvbW11bml0eSApIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9ncmVlbmRhbGUtY29sbGVnZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUZhbWlseSBHdXkgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2ZhbWlseS1ndXkgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1GdXR1cmFtYSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZnV0dXJhbWEgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1HYW1lIE9mIFRocm9uZXMgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2dhbWUtb2YtdGhyb25lcyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUhlcm9lcyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvaGVyb2VzICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dSG93IEkgTWV0IFlvdXIgTW90aGVyIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9oaW15bSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUhvdXNlIE1EIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9ob3VzZS1tZCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUhvdXNlIE9mIENhcmRzIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9ob3VzZS1vZi1jYXJkcyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUtpbmcgT2YgVGhlIEhpbGwgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2tpbmctb2YtdGhlLWhpbGwgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Mb3N0IEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9sb3N0ICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTWFkIE1lbiBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvbWFkLW1lbiAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXU1hbiBWcyBXaWxkIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9tYW4tdnMtd2lsZC1lbiAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVBva2VyIENoYW5uZWwgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3Bva2VyLXN0cmVhbSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVJpY2sgQW5kIE1vcnR5IEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9yaWNrLWFuZC1tb3J0eSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVNjcnVicyBNRCBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvc2NydWJzICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dU21hbGx2aWxsZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvc21hbGx2aWxsZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVNvbnMgT2YgQW5hcmNoeSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvc29ucy1vZi1hbmFyY2h5ICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dU291dGggUGFyayBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvc291dGgtcGFyay1oZCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVNwYXJ0YWN1cyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvc3BhcnRhY3VzICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dU3RhcmdhdGUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3N0YXJnYXRlICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dU3VwZXJuYXR1cmFsIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9zdXBlcm5hdHVyYWwgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1UaGUgMTAwIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS90aGUtMTAwICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVGhlIEJpZyBCYW5nIFRoZW9yeSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdGhlLWJpZy1iYW5nLXRoZW9yeSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVRoZSBDbGV2ZWxhbmQgU2hvdyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdGhlLWNsZXZlbGFuZC1zaG93ICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVGhlIE9mZmljZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdGhlLW9mZmljZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVRoZSBTaW1wc29ucyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvc2ltcHNvbnMtaGQgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1UaGUgV2Fsa2luZyBEZWFkIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS90aGUtd2Fsa2luZy1kZWFkICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVHJpcCBUYW5rIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS90cmlwdGFuayAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVdlZWRzIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS93ZWVkcyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVdvcmthaG9saWNzIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS93b3JrYWhvbGljcyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsMzAgUm9jawpodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD0zMHJvY2smYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vaGRjYXN0Lm1lLwojRVhUSU5GOi0xLEFsaWVucyAmIFVmbydzCmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2FsaWVuc2FuZHVmb3M/YWxpZW5zYW5kdWZvcyAmUkVGJmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2FsaWVuc2FuZHVmb3MKI0VYVElORjotMSxBZHZlbnR1cmUgVGltZQpodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX2F0P2xtc2hvd3NfYXQgJlJFRiZodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX2F0CiNFWFRJTkY6LTEsQXJyZXN0ZWQgRGV2ZWxvcG1lbnQgCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWFycmVzdGVkJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KI0VYVElORjotMSxCZWFzdCBXYXJzCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MjAzOSZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwojRVhUSU5GOi0xLEdhbWUgT2YgVGhyb25lcwpodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1nb3RpYiZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdCAmUkVGJmh0dHA6Ly9oZGNhc3QubWUvCiNFWFRJTkY6LTEsQ2h1Y2sgCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWNodWNrJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KI0VYVElORjotMSxDcmltZSBDZW50cmFsCmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2NyaW1lY2VudHJhbD9sbXNob3dzX25nYmJjICZSRUYmaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19uZ2JiYwojRVhUSU5GOi0xLERleHRlciAKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9ZGV4dGVyJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KI0VYVElORjotMSxEaXNjb3ZlcnkgSG91c2UKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vZGlzY292ZXJ5aG91c2U/ZGlzY292ZXJ5aG91c2UgJlJFRiZodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9kaXNjb3Zlcnlob3VzZQojRVhUSU5GOi0xLERyYWdvbkJhbGwgR1QKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTUzMTA1JmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCiNFWFRJTkY6LTEsRHIgV2hvIApodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1kcndobyZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdCAmUkVGJmh0dHA6Ly9oZGNhc3QubWUvCiNFWFRJTkY6LTEsRmFtaWx5IEd1eQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NTUxODImYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KI0VYVElORjotMSxGcmllbmRzIApodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1mcmllbmRzJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KI0VYVElORjotMSxGcmluZ2UgCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWZyaW5nZSZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdCAmUkVGJmh0dHA6Ly9oZGNhc3QubWUvCiNFWFRJTkY6LTEsRmxpbnRzdG9uZXMgCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPWZsaW50c3RvbmVzJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KI0VYVElORjotMSxIYXVudGVkIEhvdXNlCmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2hhdW50ZWRob3VzZT9oYXVudGVkaG91c2UgJlJFRiZodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9oYXVudGVkaG91c2UKI0VYVElORjotMSxIb21lIEltcHJvdmVtZW50cwpodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX2hpP2xtc2hvd3NfaGkgJlJFRiZodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX2hpCiNFWFRJTkY6LTEsSG91c2UKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9aG91c2UmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vaGRjYXN0Lm1lLwojRVhUSU5GOi0xLEhhcmRjb3JlIFBhd24vUGF3biBTdGFycy9TdG9yYWdlIFdhcnMvRmFzdCBOIExvdWQKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19ocHM/bG1zaG93c19ocHMgJlJFRiZodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX2hwcwojRVhUSU5GOi0xLEltcHJhY3RpY2FsIEpva2VycwpodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX2lqP2xtc2hvd3NfaWogJlJFRiZodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX2lqCiNFWFRJTkY6LTEsSmFja2llIENoYW4gTW92aWVzICggMTk5MS0yMDA4ICkKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTM3MDAyJmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCiNFWFRJTkY6LTEsTGF3ICYgT3JkZXIKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vZ2V0eW91cmRvY3NvZmY/Z2V0eW91cmRvY3NvZmYgJlJFRiZodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9nZXR5b3VyZG9jc29mZgojRVhUSU5GOi0xLExvb25leSBUb29ucwpodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1sb29uZXkmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vaGRjYXN0Lm1lLwojRVhUSU5GOi0xLE1hbiBXb21hbiBXaWxkLyBTdXJ2aXZvcm1hbgpodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX213cz9sbXNob3dzX213cyAmUkVGJmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2xtc2hvd3NfbXdzCiNFWFRJTkY6LTEsTWFycmllZCBXaXRoIENoaWxkcmVuCmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2xtc2hvd3NfbXdjP2xtc2hvd3NfbXdjICZSRUYmaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19td2MKI0VYVElORjotMSxOYXRpb25hbCBHZW9ncmFwaGljLyBCQkMgTmF0dXJlCmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2xtc2hvd3NfbmdiYmM/bG1zaG93c19uZ2JiYyAmUkVGJmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2xtc2hvd3NfbmdiYmMKI0VYVElORjotMSxSZWd1bGFyIFNob3cKaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19ycz9sbXNob3dzX3JzICZSRUYmaHR0cDovL3ZhdWdobmxpdmUudHYvZW1iZWQvdmlkZW8vbG1zaG93c19ycwojRVhUSU5GOi0xLFNlaW5maWVsZApodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1zZWluZmllbGQmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vaGRjYXN0Lm1lLwojRVhUSU5GOi0xLFNjcnVicwpodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1zY3J1YnMmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vaGRjYXN0Lm1lLwojRVhUSU5GOi0xLFN0YXJnYXRlIFNHMQpodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9zZzFnYXRlP3NnMWdhdGUgJlJFRiZodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9zZzFnYXRlCiNFWFRJTkY6LTEsU3VpdHMKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9c3VpdHMmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQKI0VYVElORjotMSxTb3V0aCBQYXJrCmh0dHA6Ly9oZGNhc3QubWUvZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDgwJmlkPXNvdXRocGFyayZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdAojRVhUSU5GOi0xLFRoZSBLaW5nIE9mIFF1ZWVucwpodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX2tvcT9sbXNob3dzX2tvcSAmUkVGJmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2xtc2hvd3Nfa29xCiNFWFRJTkY6LTEsVGhlIEtpbmcgT2YgUXVlZW5zCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD0zODIxMyZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwojRVhUSU5GOi0xLFRoZSBTaW1wc29ucwpodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1zaW1wc29ucyZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdCAmUkVGJmh0dHA6Ly9oZGNhc3QubWUvCiNFWFRJTkY6LTEsVGhlIEJpZyBCYW5nIFRoZW9yeQpodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD1iaWdiYW5nJmF1dG9wbGF5PXRydWUmc3RyZWNoPWV4YWN0Zml0ICZSRUYmaHR0cDovL2hkY2FzdC5tZS8KI0VYVElORjotMSxUaGUgQnVncyBCdW5ueSBTaG93Cmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MjA0MCZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwojRVhUSU5GOi0xLFRvbSAmIEplcnJ5Cmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MjAzOCZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwojRVhUSU5GOi0xLFRvbSAmIEplcnJ5ICggbWlnaHQgY2hhbmdlIHRvIG90aGVyIGNhcnRvb25zKQpodHRwOi8vaGRjYXN0Lm1lL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQ4MCZpZD10b21qZXJyeSZhdXRvcGxheT10cnVlJnN0cmVjaD1leGFjdGZpdCAmUkVGJmh0dHA6Ly9oZGNhc3QubWUvCiNFWFRJTkY6LTEsU3VwcmFub3MKaHR0cDovL2hkY2FzdC5tZS9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00ODAmaWQ9c29wcmFub3MmYXV0b3BsYXk9dHJ1ZSZzdHJlY2g9ZXhhY3RmaXQgJlJFRiZodHRwOi8vaGRjYXN0Lm1lLwoKCkBAQEBACgpHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIEZyZW5jaCBMaXZlIFR2IC0tWy9DT0xPUl0KCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXTYgVGVyIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS82dGVyICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQXJ0ZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvYXJ0ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUJlaW4gRnJhbmNlIDEgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2JlaW4tZnJhbmNlLTEgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1CZWluIEZyYW5jZSAyIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9iZWluLWZyYW5jZS0yICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dQkZNIFR2IE5ld3MgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2JmbS10diAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUNhbWVyYSBDYWZlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9jYW1lcmEtY2FmZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUNhbmFsKyBTcGVjaWFsIEludmVzdGlnYXRpb24gSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3NwZWNpYWwtaW52ZXN0aWdhdGlvbiAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUQxNyBMaXZlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9kMTcgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1EOCBMaXZlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9kOC1saXZlICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRGl2ZXJzIERvY3MgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2RpdmVycy1kb2NzICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRHJhZ29uYmFsbC1aIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9kcmFnb25iYWxsLWRieiAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXURpc2NvdmVyeSBDaGFubmVsIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9kaXNjb3ZlcnkgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1FdXJvTmV3cyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZXVyb25ld3MgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1FdXJvU3BvcnQgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2V1cm9zcG9ydCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUV1cm9TcG9ydCAyIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9ldXJvc3BvcnQtMiAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUZpbmFuY2UgRXQgTW9uZGlhbGlzbWUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2ZpbmFuY2UtZXQtbW9uZGlhbGlzbWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1GcmFuY2UgMjQgTGl2ZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZnJhbmNlLTI0ICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRnJhbmNlIDAgTGl2ZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZnJhbmNlLW8gJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1GcmFuY2UgMiBMaXZlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9mcmFuY2UtMi1kaXJlY3QgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1GcmFuY2UgMiBMaXZlIEhEIChBTFQpWy9DT0xPUl0KaHR0cDovL3N0cmVhbS5zdHJlYW1pbmctaHViLmNvbTo4MDgwL3NpbXVsY2FzdC9GcmFuY2VfMi9obHNfdjEvRnJhbmNlXzItYXVkaW9fQUFDTF9mcmFfNzAwMDBfMzE1PTcwMDAwLXZpZGVvPTExODAwMC5tM3U4fFgtRm9yd2FyZGVkLUZvcj01LjE1My4xMjcuMjU1CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUZyYW5jZSAzIExpdmUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2ZyYW5jZS0zLWxpdmUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1GcmFuY2UgMyBMaXZlIEhEIChBTFQpWy9DT0xPUl0KaHR0cDovL3N0cmVhbS5zdHJlYW1pbmctaHViLmNvbTo4MDgwL3NpbXVsY2FzdC9GcmFuY2VfMy9obHNfdjEvRnJhbmNlXzMtYXVkaW9fQUFDTF9mcmFfNzAwMDBfMzI1PTcwMDAwLXZpZGVvPTExODAwMC5tM3U4fFgtRm9yd2FyZGVkLUZvcj01LjE1My4xMjcuMjU1CiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUZyYW5jZSA0IExpdmUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2ZyYW5jZS00ICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dRnJhbmNlIDUgTGl2ZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvZnJhbmNlLTUtbGl2ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXUhpc3RvaXJlIExpdmUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2hpc3RvaXJlICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dSEhIIElOVMOJR1JBTEUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2gtaW50ZWdyYWxlICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dSSBUw4lMw4kgTmV3cyBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvaS10ZWxlICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dSiBpcmFpIGRvcm1pciBjaGV6IHZvdXMgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2otaXJhaS1kb3JtaXItY2hlei12b3VzICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dS2FhbWVsb3R0IEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9rYWFtZWxvdHQgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1MJ8OpcXVpcGUgMjEgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L2wtZXF1aXBlLTIxICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTCcgVW5pdmVycyBldCBzZXMgTXlzdMOocmVzIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9sLXVuaXZlcnMtZXQtc2VzLW15c3RlcmVzICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTENQIEhEWy9DT0xPUl0KaHR0cDovL3N0cmVhbS0wOS52dHkuZGFpbHltb3Rpb24uY29tLzE1L2RtLzEveGppM3F5L2xpdmUuaXNtbC9saXZlLmY0bQojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1NNiBMaXZlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9tNi1saXZlICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTTYgTXVzaWMgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L202LW11c2ljICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTWFuIFZzIFdpbGQgRlIgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L21hbi12cy13aWxkICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTmF0dXJlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9uYXR1cmUtaGQgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1OYXRpb25hbCBnZW9ncmFwaGljIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9uYXRpb25hbC1nZW9ncmFwaGljICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTmF0IGdlbyBXaWxkIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9uYXQtZ2VvLXdpbGQgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1OUkoxMiBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvbnJqLTEyICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dUGxhbmV0ZSArIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9wbGFuZXRlLXBsdXMgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1QbGFuZXRlICsgVGhhbGFzc2EgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3BsYW5ldGUtdGhhbGFzc2EgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1STUMgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3JtYyAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVJUTDkgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3J0bDkgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1Tb2RhIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS9zb2RhICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dU291dGggUGFyayBGUiBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvc291dGgtcGFyay1mciAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVN0YXJnYXRlIFNnMSBTZ2EgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3N0YXJnYXRlLXNnMS1zZ2EgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1URjEgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3RmMSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVRoYXQgNzAncyBTaG93IEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS83MC1zaG93ICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVE1DIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS90bWMgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1UVjUgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3R2NS1oZCAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvCiNFWFRJTkY6LTEsW0NPTE9SIGdyZWVuXVR2IFJlcGxheSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdHYtcmVwbGF5ICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVHYgU2NpZW5zZXMgSERbL0NPTE9SXQpodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1L3R2LXNjaWVuY2VzICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dVU5ERVJHUk9PViBDSEFOTkVMIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS91bmRlcmdyb292LW1pa2VkYXNpbGsgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1VbiBnYXJzIFVuZSBmaWxsZSBIRFsvQ09MT1JdCmh0dHA6Ly93d3cuc3RyZWFtNGZyZWUuZXUvdW4tZ2Fycy11bmUtZmlsbGUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbTRmcmVlLmV1LwojRVhUSU5GOi0xLFtDT0xPUiBncmVlbl1XOSBMaXZlIEhEWy9DT0xPUl0KaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS93OS1saXZlICZSRUYmaHR0cDovL3d3dy5zdHJlYW00ZnJlZS5ldS8KCiNFWFRJTkY6LTEsQ2FuYWwrIENpbmVtYQpodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vZW1iZWRwbGF5ZXIucGhwP3dpZHRoPTY0MCZoZWlnaHQ9NDAwJmNoYW5uZWw9NzA3MzEmYXV0b3BsYXk9dHJ1ZSAmUkVGJmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by8KI0VYVElORjotMSxDYW5hbCsgU3BvcnRzCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MDQ2NyZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwojRVhUSU5GOi0xLENhbmFsKyBGYW1pbHkKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcxODMxJmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCiNFWFRJTkY6LTEsRGlzY292ZXJ5IENoYW5uZWwgRnJhbmNlCmh0dHA6Ly93d3cuc3RyZWFtbGl2ZS50by9lbWJlZHBsYXllci5waHA/d2lkdGg9NjQwJmhlaWdodD00MDAmY2hhbm5lbD03MDIxMiZhdXRvcGxheT10cnVlICZSRUYmaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvLwojRVhUSU5GOi0xLFN5RnkKaHR0cDovL3d3dy5zdHJlYW1saXZlLnRvL2VtYmVkcGxheWVyLnBocD93aWR0aD02NDAmaGVpZ2h0PTQwMCZjaGFubmVsPTcwNzMwJmF1dG9wbGF5PXRydWUgJlJFRiZodHRwOi8vd3d3LnN0cmVhbWxpdmUudG8vCgpAQEBAQApHRU5SRSwgW0NPTE9SIGdyZWVuXS0tIFNwYW5pc2ggTGl2ZSBUdiAtLVsvQ09MT1JdCiNFWFRJTkY6LTEsQ2luZQpodHRwOi8vdmF1Z2hubGl2ZS50di9lbWJlZC92aWRlby9sbXNob3dzX2hpP2NpbmVtdW5kbyAmUkVGJmh0dHA6Ly92YXVnaG5saXZlLnR2L2VtYmVkL3ZpZGVvL2xtc2hvd3NfaGkKI0VYVElORjotMSxbQ09MT1IgZ3JlZW5dTGEgU2V4dGFbL0NPTE9SXQpodHRwOi8vYTNsaXZlLWxoLmFrYW1haWhkLm5ldC9pL2xhc2V4dGFfMUAzNTI3Mi9tYXN0ZXIubTN1OApAQEBAQA==